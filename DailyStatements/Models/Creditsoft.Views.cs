//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(DailyStatements.Models.Entities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsf48ec74ae5d8bd0b45335362740ea79a7780a6d69108023e571d44e57fb8b2ec))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySetsf48ec74ae5d8bd0b45335362740ea79a7780a6d69108023e571d44e57fb8b2ec : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "f48ec74ae5d8bd0b45335362740ea79a7780a6d69108023e571d44e57fb8b2ec"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CreditsoftStoreContainer.ACHBankAccounts")
            {
                return GetView0();
            }

            if (extentName == "CreditsoftStoreContainer.ACHBatch")
            {
                return GetView1();
            }

            if (extentName == "CreditsoftStoreContainer.ACHBatchDetails")
            {
                return GetView2();
            }

            if (extentName == "CreditsoftStoreContainer.ACHBatchGroup")
            {
                return GetView3();
            }

            if (extentName == "CreditsoftStoreContainer.ACHGroups")
            {
                return GetView4();
            }

            if (extentName == "CreditsoftStoreContainer.Bank")
            {
                return GetView5();
            }

            if (extentName == "CreditsoftStoreContainer.BankAccounts")
            {
                return GetView6();
            }

            if (extentName == "CreditsoftStoreContainer.CheckRun")
            {
                return GetView7();
            }

            if (extentName == "CreditsoftStoreContainer.Checks")
            {
                return GetView8();
            }

            if (extentName == "CreditsoftStoreContainer.ClientCred")
            {
                return GetView9();
            }

            if (extentName == "CreditsoftStoreContainer.Clients")
            {
                return GetView10();
            }

            if (extentName == "CreditsoftStoreContainer.CoApps")
            {
                return GetView11();
            }

            if (extentName == "CreditsoftStoreContainer.Creditors")
            {
                return GetView12();
            }

            if (extentName == "CreditsoftStoreContainer.Locations")
            {
                return GetView13();
            }

            if (extentName == "CreditsoftStoreContainer.Payments")
            {
                return GetView14();
            }

            if (extentName == "CreditsoftStoreContainer.Receipts")
            {
                return GetView15();
            }

            if (extentName == "Entities.ACHBankAccounts")
            {
                return GetView16();
            }

            if (extentName == "Entities.ACHBatch")
            {
                return GetView17();
            }

            if (extentName == "Entities.ACHBatchDetails")
            {
                return GetView18();
            }

            if (extentName == "Entities.ACHBatchGroup")
            {
                return GetView19();
            }

            if (extentName == "Entities.ACHGroups")
            {
                return GetView20();
            }

            if (extentName == "Entities.Bank")
            {
                return GetView21();
            }

            if (extentName == "Entities.BankAccounts")
            {
                return GetView22();
            }

            if (extentName == "Entities.CheckRun")
            {
                return GetView23();
            }

            if (extentName == "Entities.Checks")
            {
                return GetView24();
            }

            if (extentName == "Entities.ClientCred")
            {
                return GetView25();
            }

            if (extentName == "Entities.Clients")
            {
                return GetView26();
            }

            if (extentName == "Entities.CoApps")
            {
                return GetView27();
            }

            if (extentName == "Entities.Creditors")
            {
                return GetView28();
            }

            if (extentName == "Entities.Locations")
            {
                return GetView29();
            }

            if (extentName == "Entities.Payments")
            {
                return GetView30();
            }

            if (extentName == "Entities.Receipts")
            {
                return GetView31();
            }

            if (extentName == "CreditsoftStoreContainer.Custom_DailyStatements")
            {
                return GetView32();
            }

            if (extentName == "Entities.Custom_DailyStatements")
            {
                return GetView33();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.ACHBankAccounts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ACHBankAccounts
        [Creditsoft.Store.ACHBankAccounts](T1.ACHBankAccounts_ACHBankAccountID, T1.ACHBankAccounts_ClientID, T1.ACHBankAccounts_BankName, T1.ACHBankAccounts_ABA, T1.ACHBankAccounts_AccType, T1.ACHBankAccounts_BankAccountNumber, T1.ACHBankAccounts_ACHNote, T1.ACHBankAccounts_AccountFirstName, T1.ACHBankAccounts_AccountLastName, T1.ACHBankAccounts_DefaultBankAccount, T1.ACHBankAccounts_BankAccountName, T1.[ACHBankAccounts.upsize_ts], T1.ACHBankAccounts_Status, T1.ACHBankAccounts_StatusChangeDate, T1.ACHBankAccounts_StatusSentDate, T1.ACHBankAccounts_ExportDate, T1.ACHBankAccounts_LinkToProcessingAccount, T1.ACHBankAccounts_BankAddress1, T1.ACHBankAccounts_BankAddress2, T1.ACHBankAccounts_PrenoteSent, T1.ACHBankAccounts_DateLastUpdated, T1.ACHBankAccounts_LeadACHBankAccountID, T1.ACHBankAccounts_BalanceAmount, T1.ACHBankAccounts_BalanceDate, T1.ACHBankAccounts_PIN, T1.ACHBankAccounts_FundingAccountType, T1.ACHBankAccounts_StartCheck, T1.ACHBankAccounts_UsePhonePay, T1.ACHBankAccounts_DateEntered, T1.ACHBankAccounts_EnteredBy, T1.ACHBankAccounts_OperatorStamp, T1.ACHBankAccounts_DateTimeStamp, T1.ACHBankAccounts_ProcessingPolicyGroupID, T1.ACHBankAccounts_GCSExported, T1.ACHBankAccounts_EnteredByWebUserName, T1.ACHBankAccounts_AccountCompanyName, T1.ACHBankAccounts_IsEmergencyFund, T1.ACHBankAccounts_LinkedToMasterACHBankAccountID, T1.[ACHBankAccounts.BankAccountNumber_Masked], T1.[ACHBankAccounts.UserID_Secret], T1.[ACHBankAccounts.Password_Secret], T1.ACHBankAccounts_ACHBankAccountBalance, T1.ACHBankAccounts_ACHBankAccountBalanceVerifiedOn, T1.ACHBankAccounts_ACHBankAccountBalanceVerifiedBy, T1.ACHBankAccounts_FinancialInstitutionID, T1.[ACHBankAccounts.M2_CardHolderID], T1.[ACHBankAccounts.M2_AvailableBalance], T1.[ACHBankAccounts.M2_Status], T1.[ACHBankAccounts.M2_BankInfo_NeedsUpdate], T1.[ACHBankAccounts.M2_BIN2_Counter_CALCULATED], T1.[ACHBankAccounts.M2_BIN4_Counter_CALCULATED], T1.[ACHBankAccounts.PaymentProcessor_TransactionRefID], T1.[ACHBankAccounts.PaymentProcessor_NeedsUpdate], T1.ACHBankAccounts_YodleeItemAccountID)
    FROM (
        SELECT 
            T.ACHBankAccountID AS ACHBankAccounts_ACHBankAccountID, 
            T.ClientID AS ACHBankAccounts_ClientID, 
            T.BankName AS ACHBankAccounts_BankName, 
            T.ABA AS ACHBankAccounts_ABA, 
            T.AccType AS ACHBankAccounts_AccType, 
            T.BankAccountNumber AS ACHBankAccounts_BankAccountNumber, 
            T.ACHNote AS ACHBankAccounts_ACHNote, 
            T.AccountFirstName AS ACHBankAccounts_AccountFirstName, 
            T.AccountLastName AS ACHBankAccounts_AccountLastName, 
            T.DefaultBankAccount AS ACHBankAccounts_DefaultBankAccount, 
            T.BankAccountName AS ACHBankAccounts_BankAccountName, 
            T.upsize_ts AS [ACHBankAccounts.upsize_ts], 
            T.Status AS ACHBankAccounts_Status, 
            T.StatusChangeDate AS ACHBankAccounts_StatusChangeDate, 
            T.StatusSentDate AS ACHBankAccounts_StatusSentDate, 
            T.ExportDate AS ACHBankAccounts_ExportDate, 
            T.LinkToProcessingAccount AS ACHBankAccounts_LinkToProcessingAccount, 
            T.BankAddress1 AS ACHBankAccounts_BankAddress1, 
            T.BankAddress2 AS ACHBankAccounts_BankAddress2, 
            T.PrenoteSent AS ACHBankAccounts_PrenoteSent, 
            T.DateLastUpdated AS ACHBankAccounts_DateLastUpdated, 
            T.LeadACHBankAccountID AS ACHBankAccounts_LeadACHBankAccountID, 
            T.BalanceAmount AS ACHBankAccounts_BalanceAmount, 
            T.BalanceDate AS ACHBankAccounts_BalanceDate, 
            T.PIN AS ACHBankAccounts_PIN, 
            T.FundingAccountType AS ACHBankAccounts_FundingAccountType, 
            T.StartCheck AS ACHBankAccounts_StartCheck, 
            T.UsePhonePay AS ACHBankAccounts_UsePhonePay, 
            T.DateEntered AS ACHBankAccounts_DateEntered, 
            T.EnteredBy AS ACHBankAccounts_EnteredBy, 
            T.OperatorStamp AS ACHBankAccounts_OperatorStamp, 
            T.DateTimeStamp AS ACHBankAccounts_DateTimeStamp, 
            T.ProcessingPolicyGroupID AS ACHBankAccounts_ProcessingPolicyGroupID, 
            T.GCSExported AS ACHBankAccounts_GCSExported, 
            T.EnteredByWebUserName AS ACHBankAccounts_EnteredByWebUserName, 
            T.AccountCompanyName AS ACHBankAccounts_AccountCompanyName, 
            T.IsEmergencyFund AS ACHBankAccounts_IsEmergencyFund, 
            T.LinkedToMasterACHBankAccountID AS ACHBankAccounts_LinkedToMasterACHBankAccountID, 
            T.BankAccountNumber_Masked AS [ACHBankAccounts.BankAccountNumber_Masked], 
            T.UserID_Secret AS [ACHBankAccounts.UserID_Secret], 
            T.Password_Secret AS [ACHBankAccounts.Password_Secret], 
            T.ACHBankAccountBalance AS ACHBankAccounts_ACHBankAccountBalance, 
            T.ACHBankAccountBalanceVerifiedOn AS ACHBankAccounts_ACHBankAccountBalanceVerifiedOn, 
            T.ACHBankAccountBalanceVerifiedBy AS ACHBankAccounts_ACHBankAccountBalanceVerifiedBy, 
            T.FinancialInstitutionID AS ACHBankAccounts_FinancialInstitutionID, 
            T.M2_CardHolderID AS [ACHBankAccounts.M2_CardHolderID], 
            T.M2_AvailableBalance AS [ACHBankAccounts.M2_AvailableBalance], 
            T.M2_Status AS [ACHBankAccounts.M2_Status], 
            T.M2_BankInfo_NeedsUpdate AS [ACHBankAccounts.M2_BankInfo_NeedsUpdate], 
            T.M2_BIN2_Counter_CALCULATED AS [ACHBankAccounts.M2_BIN2_Counter_CALCULATED], 
            T.M2_BIN4_Counter_CALCULATED AS [ACHBankAccounts.M2_BIN4_Counter_CALCULATED], 
            T.PaymentProcessor_TransactionRefID AS [ACHBankAccounts.PaymentProcessor_TransactionRefID], 
            T.PaymentProcessor_NeedsUpdate AS [ACHBankAccounts.PaymentProcessor_NeedsUpdate], 
            T.YodleeItemAccountID AS ACHBankAccounts_YodleeItemAccountID, 
            True AS _from0
        FROM Entities.ACHBankAccounts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.ACHBatch.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ACHBatch
        [Creditsoft.Store.ACHBatch](T1.ACHBatch_ACHBatchID, T1.ACHBatch_BatchDate, T1.ACHBatch_BatchNumber, T1.ACHBatch_ACHGroupID, T1.ACHBatch_CreditsCreated, T1.ACHBatch_ACHPullDate, T1.ACHBatch_StateFilter, T1.[ACHBatch.upsize_ts], T1.ACHBatch_BatchType, T1.ACHBatch_FileCreated, T1.ACHBatch_FileCreatedOn, T1.ACHBatch_FileCreatedBy, T1.ACHBatch_DepositBankAccountID, T1.ACHBatch_ACHBatchGroupID, T1.ACHBatch_ProcessACHDate, T1.ACHBatch_ScheduleACHPullDate, T1.ACHBatch_DaysBeforeACHPullDate, T1.ACHBatch_OverrideACHPullDate, T1.ACHBatch_FileName, T1.ACHBatch_IsSECCodesEnabled, T1.ACHBatch_FileIDModifier, T1.[ACHBatch.PaymentProcessor_SubmitDate], T1.ACHBatch_MasterCreditorID, T1.ACHBatch_MasterDebtorID, T1.ACHBatch_TotalAmount)
    FROM (
        SELECT 
            T.ACHBatchID AS ACHBatch_ACHBatchID, 
            T.BatchDate AS ACHBatch_BatchDate, 
            T.BatchNumber AS ACHBatch_BatchNumber, 
            T.ACHGroupID AS ACHBatch_ACHGroupID, 
            T.CreditsCreated AS ACHBatch_CreditsCreated, 
            T.ACHPullDate AS ACHBatch_ACHPullDate, 
            T.StateFilter AS ACHBatch_StateFilter, 
            T.upsize_ts AS [ACHBatch.upsize_ts], 
            T.BatchType AS ACHBatch_BatchType, 
            T.FileCreated AS ACHBatch_FileCreated, 
            T.FileCreatedOn AS ACHBatch_FileCreatedOn, 
            T.FileCreatedBy AS ACHBatch_FileCreatedBy, 
            T.DepositBankAccountID AS ACHBatch_DepositBankAccountID, 
            T.ACHBatchGroupID AS ACHBatch_ACHBatchGroupID, 
            T.ProcessACHDate AS ACHBatch_ProcessACHDate, 
            T.ScheduleACHPullDate AS ACHBatch_ScheduleACHPullDate, 
            T.DaysBeforeACHPullDate AS ACHBatch_DaysBeforeACHPullDate, 
            T.OverrideACHPullDate AS ACHBatch_OverrideACHPullDate, 
            T.FileName AS ACHBatch_FileName, 
            T.IsSECCodesEnabled AS ACHBatch_IsSECCodesEnabled, 
            T.FileIDModifier AS ACHBatch_FileIDModifier, 
            T.PaymentProcessor_SubmitDate AS [ACHBatch.PaymentProcessor_SubmitDate], 
            T.MasterCreditorID AS ACHBatch_MasterCreditorID, 
            T.MasterDebtorID AS ACHBatch_MasterDebtorID, 
            T.TotalAmount AS ACHBatch_TotalAmount, 
            True AS _from0
        FROM Entities.ACHBatch AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.ACHBatchDetails.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ACHBatchDetails
        [Creditsoft.Store.ACHBatchDetails](T1.ACHBatchDetails_ACHBatchDetailID, T1.ACHBatchDetails_ACHBatchID, T1.ACHBatchDetails_ClientID, T1.ACHBatchDetails_Amount, T1.ACHBatchDetails_Selected, T1.ACHBatchDetails_Status, T1.ACHBatchDetails_ACHBankAccountID, T1.ACHBatchDetails_ACHUserEntriesID, T1.[ACHBatchDetails.upsize_ts], T1.ACHBatchDetails_ClientACHGroupID, T1.ACHBatchDetails_GCSDebitID, T1.ACHBatchDetails_StandardEntryClassCode, T1.ACHBatchDetails_PaymentType, T1.ACHBatchDetails_DateCredited, T1.ACHBatchDetails_HoldUntil, T1.ACHBatchDetails_SentToPaymentProcessor, T1.[ACHBatchDetails.M2_TransactionID], T1.[ACHBatchDetails.PaymentProcessor_TransactionRefID])
    FROM (
        SELECT 
            T.ACHBatchDetailID AS ACHBatchDetails_ACHBatchDetailID, 
            T.ACHBatchID AS ACHBatchDetails_ACHBatchID, 
            T.ClientID AS ACHBatchDetails_ClientID, 
            T.Amount AS ACHBatchDetails_Amount, 
            T.Selected AS ACHBatchDetails_Selected, 
            T.Status AS ACHBatchDetails_Status, 
            T.ACHBankAccountID AS ACHBatchDetails_ACHBankAccountID, 
            T.ACHUserEntriesID AS ACHBatchDetails_ACHUserEntriesID, 
            T.upsize_ts AS [ACHBatchDetails.upsize_ts], 
            T.ClientACHGroupID AS ACHBatchDetails_ClientACHGroupID, 
            T.GCSDebitID AS ACHBatchDetails_GCSDebitID, 
            T.StandardEntryClassCode AS ACHBatchDetails_StandardEntryClassCode, 
            T.PaymentType AS ACHBatchDetails_PaymentType, 
            T.DateCredited AS ACHBatchDetails_DateCredited, 
            T.HoldUntil AS ACHBatchDetails_HoldUntil, 
            T.SentToPaymentProcessor AS ACHBatchDetails_SentToPaymentProcessor, 
            T.M2_TransactionID AS [ACHBatchDetails.M2_TransactionID], 
            T.PaymentProcessor_TransactionRefID AS [ACHBatchDetails.PaymentProcessor_TransactionRefID], 
            True AS _from0
        FROM Entities.ACHBatchDetails AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.ACHBatchGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ACHBatchGroup
        [Creditsoft.Store.ACHBatchGroup](T1.ACHBatchGroup_ACHBatchGroupID, T1.ACHBatchGroup_StartDateFilter, T1.ACHBatchGroup_EndDateFilter, T1.ACHBatchGroup_CreatedOn, T1.ACHBatchGroup_CreatedBy, T1.ACHBatchGroup_BatchType)
    FROM (
        SELECT 
            T.ACHBatchGroupID AS ACHBatchGroup_ACHBatchGroupID, 
            T.StartDateFilter AS ACHBatchGroup_StartDateFilter, 
            T.EndDateFilter AS ACHBatchGroup_EndDateFilter, 
            T.CreatedOn AS ACHBatchGroup_CreatedOn, 
            T.CreatedBy AS ACHBatchGroup_CreatedBy, 
            T.BatchType AS ACHBatchGroup_BatchType, 
            True AS _from0
        FROM Entities.ACHBatchGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.ACHGroups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ACHGroups
        [Creditsoft.Store.ACHGroups](T1.ACHGroups_ACHGroupID, T1.ACHGroups_PaymentDueDate, T1.ACHGroups_Period, T1.ACHGroups_DraftDay, T1.[ACHGroups.upsize_ts], T1.ACHGroups_BankAccountID, T1.ACHGroups_WeekDay, T1.ACHGroups_Show)
    FROM (
        SELECT 
            T.ACHGroupID AS ACHGroups_ACHGroupID, 
            T.PaymentDueDate AS ACHGroups_PaymentDueDate, 
            T.Period AS ACHGroups_Period, 
            T.DraftDay AS ACHGroups_DraftDay, 
            T.upsize_ts AS [ACHGroups.upsize_ts], 
            T.BankAccountID AS ACHGroups_BankAccountID, 
            T.WeekDay AS ACHGroups_WeekDay, 
            T.Show AS ACHGroups_Show, 
            True AS _from0
        FROM Entities.ACHGroups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.Bank.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Bank
        [Creditsoft.Store.Bank](T1.Bank_BankID, T1.Bank_Description, T1.Bank_EntryAmount, T1.Bank_DateEntered, T1.Bank_EntryCleared, T1.Bank_DateEntryCleared, T1.Bank_BankAccountID, T1.Bank_OperatorStamp, T1.Bank_DateTimeStamp, T1.Bank_Reconciled, T1.Bank_ReconciledDate, T1.Bank_AutomaticEntry, T1.Bank_BankRecHistoryID, T1.[Bank.upsize_ts], T1.Bank_OriginatingFromNSFReceiptID, T1.Bank_EnteredBy)
    FROM (
        SELECT 
            T.BankID AS Bank_BankID, 
            T.Description AS Bank_Description, 
            T.EntryAmount AS Bank_EntryAmount, 
            T.DateEntered AS Bank_DateEntered, 
            T.EntryCleared AS Bank_EntryCleared, 
            T.DateEntryCleared AS Bank_DateEntryCleared, 
            T.BankAccountID AS Bank_BankAccountID, 
            T.OperatorStamp AS Bank_OperatorStamp, 
            T.DateTimeStamp AS Bank_DateTimeStamp, 
            T.Reconciled AS Bank_Reconciled, 
            T.ReconciledDate AS Bank_ReconciledDate, 
            T.AutomaticEntry AS Bank_AutomaticEntry, 
            T.BankRecHistoryID AS Bank_BankRecHistoryID, 
            T.upsize_ts AS [Bank.upsize_ts], 
            T.OriginatingFromNSFReceiptID AS Bank_OriginatingFromNSFReceiptID, 
            T.EnteredBy AS Bank_EnteredBy, 
            True AS _from0
        FROM Entities.Bank AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.BankAccounts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing BankAccounts
        [Creditsoft.Store.BankAccounts](T1.BankAccounts_BankAccountID, T1.BankAccounts_Name, T1.BankAccounts_BankName, T1.BankAccounts_ABA, T1.BankAccounts_AccountNumber, T1.BankAccounts_ImmediateOrigin, T1.BankAccounts_EFT, T1.BankAccounts_OriginatorID, T1.BankAccounts_RPSOutputFile, T1.BankAccounts_RPSTestFile, T1.BankAccounts_RPSPhoneNumber, T1.BankAccounts_RPSCompanyName, T1.BankAccounts_ACH, T1.BankAccounts_ACHOutputFile, T1.BankAccounts_ACHABA, T1.BankAccounts_ACHAccountNumber, T1.BankAccounts_ACHImmediateOrigin, T1.BankAccounts_ACHCompanyID, T1.BankAccounts_DMPOutputFile, T1.BankAccounts_DiscretionaryData, T1.BankAccounts_DS, T1.BankAccounts_RPSAnalysisFile, T1.BankAccounts_ACHBalancedABA, T1.BankAccounts_SkipBalancingRecord, T1.BankAccounts_Active, T1.BankAccounts_LinkBankAccountID, T1.BankAccounts_VisaOriginatorID, T1.BankAccounts_VisaDMPOutputFile, T1.BankAccounts_PaperCheckFile, T1.BankAccounts_ClientIdentifier, T1.BankAccounts_CreateCheckFile, T1.BankAccounts_PaperCheckFileTest, T1.BankAccounts_ACHPrenoteOutputFile, T1.[BankAccounts.upsize_ts], T1.BankAccounts_OriginatingDFI, T1.BankAccounts_CFG, T1.BankAccounts_TDDataCentre, T1.BankAccounts_TDAcctForReturns, T1.BankAccounts_TDInstForReturns, T1.BankAccounts_CPABankAccountID, T1.BankAccounts_IsVirtual, T1.BankAccounts_IsOperating, T1.BankAccounts_CurrencyCodeIdentifier, T1.BankAccounts_ACHLastFileNumber, T1.BankAccounts_IsBillingDeposit, T1.BankAccounts_IsSECCodesEnabled, T1.BankAccounts_DaysBeforeACHPullDate, T1.BankAccounts_CheckFileFormat, T1.BankAccounts_ACHCompanyEntryDescription, T1.BankAccounts_CCType, T1.[BankAccounts.M2_CardHolderID], T1.[BankAccounts.M2_2BIN_PaperChecks], T1.[BankAccounts.M2_2BIN_PhoneChecks], T1.[BankAccounts.M2_7BIN_Agency], T1.[BankAccounts.M2_BIN2_Counter_CALCULATED], T1.[BankAccounts.M2_CardHolderID_BIN2], T1.[BankAccounts.M2_BankInfo_NeedsUpdate], T1.BankAccounts_UseForBillPay, T1.[BankAccounts.PaymentProcessor_TransactionRefID], T1.BankAccounts_OverwriteACHFormat)
    FROM (
        SELECT 
            T.BankAccountID AS BankAccounts_BankAccountID, 
            T.Name AS BankAccounts_Name, 
            T.BankName AS BankAccounts_BankName, 
            T.ABA AS BankAccounts_ABA, 
            T.AccountNumber AS BankAccounts_AccountNumber, 
            T.ImmediateOrigin AS BankAccounts_ImmediateOrigin, 
            T.EFT AS BankAccounts_EFT, 
            T.OriginatorID AS BankAccounts_OriginatorID, 
            T.RPSOutputFile AS BankAccounts_RPSOutputFile, 
            T.RPSTestFile AS BankAccounts_RPSTestFile, 
            T.RPSPhoneNumber AS BankAccounts_RPSPhoneNumber, 
            T.RPSCompanyName AS BankAccounts_RPSCompanyName, 
            T.ACH AS BankAccounts_ACH, 
            T.ACHOutputFile AS BankAccounts_ACHOutputFile, 
            T.ACHABA AS BankAccounts_ACHABA, 
            T.ACHAccountNumber AS BankAccounts_ACHAccountNumber, 
            T.ACHImmediateOrigin AS BankAccounts_ACHImmediateOrigin, 
            T.ACHCompanyID AS BankAccounts_ACHCompanyID, 
            T.DMPOutputFile AS BankAccounts_DMPOutputFile, 
            T.DiscretionaryData AS BankAccounts_DiscretionaryData, 
            T.DS AS BankAccounts_DS, 
            T.RPSAnalysisFile AS BankAccounts_RPSAnalysisFile, 
            T.ACHBalancedABA AS BankAccounts_ACHBalancedABA, 
            T.SkipBalancingRecord AS BankAccounts_SkipBalancingRecord, 
            T.Active AS BankAccounts_Active, 
            T.LinkBankAccountID AS BankAccounts_LinkBankAccountID, 
            T.VisaOriginatorID AS BankAccounts_VisaOriginatorID, 
            T.VisaDMPOutputFile AS BankAccounts_VisaDMPOutputFile, 
            T.PaperCheckFile AS BankAccounts_PaperCheckFile, 
            T.ClientIdentifier AS BankAccounts_ClientIdentifier, 
            T.CreateCheckFile AS BankAccounts_CreateCheckFile, 
            T.PaperCheckFileTest AS BankAccounts_PaperCheckFileTest, 
            T.ACHPrenoteOutputFile AS BankAccounts_ACHPrenoteOutputFile, 
            T.upsize_ts AS [BankAccounts.upsize_ts], 
            T.OriginatingDFI AS BankAccounts_OriginatingDFI, 
            T.CFG AS BankAccounts_CFG, 
            T.TDDataCentre AS BankAccounts_TDDataCentre, 
            T.TDAcctForReturns AS BankAccounts_TDAcctForReturns, 
            T.TDInstForReturns AS BankAccounts_TDInstForReturns, 
            T.CPABankAccountID AS BankAccounts_CPABankAccountID, 
            T.IsVirtual AS BankAccounts_IsVirtual, 
            T.IsOperating AS BankAccounts_IsOperating, 
            T.CurrencyCodeIdentifier AS BankAccounts_CurrencyCodeIdentifier, 
            T.ACHLastFileNumber AS BankAccounts_ACHLastFileNumber, 
            T.IsBillingDeposit AS BankAccounts_IsBillingDeposit, 
            T.IsSECCodesEnabled AS BankAccounts_IsSECCodesEnabled, 
            T.DaysBeforeACHPullDate AS BankAccounts_DaysBeforeACHPullDate, 
            T.CheckFileFormat AS BankAccounts_CheckFileFormat, 
            T.ACHCompanyEntryDescription AS BankAccounts_ACHCompanyEntryDescription, 
            T.CCType AS BankAccounts_CCType, 
            T.M2_CardHolderID AS [BankAccounts.M2_CardHolderID], 
            T.M2_2BIN_PaperChecks AS [BankAccounts.M2_2BIN_PaperChecks], 
            T.M2_2BIN_PhoneChecks AS [BankAccounts.M2_2BIN_PhoneChecks], 
            T.M2_7BIN_Agency AS [BankAccounts.M2_7BIN_Agency], 
            T.M2_BIN2_Counter_CALCULATED AS [BankAccounts.M2_BIN2_Counter_CALCULATED], 
            T.M2_CardHolderID_BIN2 AS [BankAccounts.M2_CardHolderID_BIN2], 
            T.M2_BankInfo_NeedsUpdate AS [BankAccounts.M2_BankInfo_NeedsUpdate], 
            T.UseForBillPay AS BankAccounts_UseForBillPay, 
            T.PaymentProcessor_TransactionRefID AS [BankAccounts.PaymentProcessor_TransactionRefID], 
            T.OverwriteACHFormat AS BankAccounts_OverwriteACHFormat, 
            True AS _from0
        FROM Entities.BankAccounts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.CheckRun.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CheckRun
        [Creditsoft.Store.CheckRun](T1.CheckRun_CheckRunID, T1.CheckRun_CheckRunDate, T1.CheckRun_CheckDate, T1.CheckRun_StartCheck, T1.CheckRun_EndCheck, T1.CheckRun_CheckRunType, T1.CheckRun_CheckRunStartDate, T1.CheckRun_CheckRunEndDate, T1.CheckRun_BankAccountID, T1.[CheckRun.upsize_ts], T1.CheckRun_CheckRunUserID)
    FROM (
        SELECT 
            T.CheckRunID AS CheckRun_CheckRunID, 
            T.CheckRunDate AS CheckRun_CheckRunDate, 
            T.CheckDate AS CheckRun_CheckDate, 
            T.StartCheck AS CheckRun_StartCheck, 
            T.EndCheck AS CheckRun_EndCheck, 
            T.CheckRunType AS CheckRun_CheckRunType, 
            T.CheckRunStartDate AS CheckRun_CheckRunStartDate, 
            T.CheckRunEndDate AS CheckRun_CheckRunEndDate, 
            T.BankAccountID AS CheckRun_BankAccountID, 
            T.upsize_ts AS [CheckRun.upsize_ts], 
            T.CheckRunUserID AS CheckRun_CheckRunUserID, 
            True AS _from0
        FROM Entities.CheckRun AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.Checks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Checks
        [Creditsoft.Store.Checks](T1.Checks_CheckID, T1.Checks_BankAccountID, T1.Checks_CreditorID, T1.Checks_Amount, T1.Checks_Cleared, T1.Checks_Voided, T1.Checks_DateCreated, T1.Checks_DateCleared, T1.Checks_VoidReason, T1.Checks_VoidNewCreditorID, T1.Checks_OperatorStamp, T1.Checks_DateTimeStamp, T1.Checks_Reconciled, T1.Checks_ReconciledDate, T1.Checks_Payee, T1.Checks_SalesForceID, T1.Checks_CheckType, T1.Checks_CheckRunID, T1.Checks_DateEntered, T1.Checks_BankRecHistoryID, T1.Checks_QBID, T1.[Checks.upsize_ts], T1.Checks_VoidDescription, T1.[Checks.NumberOfEntries_CALCULATED], T1.Checks_AgencyID, T1.[Checks.FSAmount_CALCULATED], T1.[Checks.PaymentProcessor_TranStatus], T1.[Checks.PaymentProcessor_StopPayOnCheckStatus], T1.[Checks.PaymentProcessor_CSLastUpdatedTime])
    FROM (
        SELECT 
            T.CheckID AS Checks_CheckID, 
            T.BankAccountID AS Checks_BankAccountID, 
            T.CreditorID AS Checks_CreditorID, 
            T.Amount AS Checks_Amount, 
            T.Cleared AS Checks_Cleared, 
            T.Voided AS Checks_Voided, 
            T.DateCreated AS Checks_DateCreated, 
            T.DateCleared AS Checks_DateCleared, 
            T.VoidReason AS Checks_VoidReason, 
            T.VoidNewCreditorID AS Checks_VoidNewCreditorID, 
            T.OperatorStamp AS Checks_OperatorStamp, 
            T.DateTimeStamp AS Checks_DateTimeStamp, 
            T.Reconciled AS Checks_Reconciled, 
            T.ReconciledDate AS Checks_ReconciledDate, 
            T.Payee AS Checks_Payee, 
            T.SalesForceID AS Checks_SalesForceID, 
            T.CheckType AS Checks_CheckType, 
            T.CheckRunID AS Checks_CheckRunID, 
            T.DateEntered AS Checks_DateEntered, 
            T.BankRecHistoryID AS Checks_BankRecHistoryID, 
            T.QBID AS Checks_QBID, 
            T.upsize_ts AS [Checks.upsize_ts], 
            T.VoidDescription AS Checks_VoidDescription, 
            T.NumberOfEntries_CALCULATED AS [Checks.NumberOfEntries_CALCULATED], 
            T.AgencyID AS Checks_AgencyID, 
            T.FSAmount_CALCULATED AS [Checks.FSAmount_CALCULATED], 
            T.PaymentProcessor_TranStatus AS [Checks.PaymentProcessor_TranStatus], 
            T.PaymentProcessor_StopPayOnCheckStatus AS [Checks.PaymentProcessor_StopPayOnCheckStatus], 
            T.PaymentProcessor_CSLastUpdatedTime AS [Checks.PaymentProcessor_CSLastUpdatedTime], 
            True AS _from0
        FROM Entities.Checks AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.ClientCred.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ClientCred
        [Creditsoft.Store.ClientCred](T1.ClientCred_ClientCredID, T1.ClientCred_ClientID, T1.ClientCred_CreditorID, T1.ClientCred_CreditorAlias, T1.ClientCred_AccountNumber, T1.ClientCred_MonthlyPayment, T1.ClientCred_LastPay, T1.ClientCred_LastIncr, T1.ClientCred_Balance, T1.ClientCred_OrigDebt, T1.ClientCred_DefMonthlyPayment, T1.ClientCred_PrevPay1, T1.ClientCred_OrigMonthly, T1.ClientCred_BegDebt, T1.ClientCred_InitialAPR, T1.ClientCred_ReducedAPR, T1.ClientCred_Commission, T1.ClientCred_Closed, T1.ClientCred_XCreditorID, T1.ClientCred_XAccountNumber, T1.ClientCred_OverrideFS, T1.ClientCred_NewFS, T1.ClientCred_OperatorStamp, T1.ClientCred_DateTimeStamp, T1.[ClientCred.upsize_ts], T1.ClientCred_OriginalDueDate, T1.ClientCred_AccountStatus, T1.ClientCred_PmtRequested, T1.ClientCred_PmtRequestedDate, T1.ClientCred_UpdatedBalance, T1.ClientCred_UpdatedBalanceDate, T1.ClientCred_ConfirmedMonthly, T1.ClientCred_ConfirmedMonthlyDate, T1.ClientCred_ConfirmedBalance, T1.ClientCred_ConfirmedBalanceDate, T1.[ClientCred.PaidToDate_CALCULATED], T1.ClientCred_AddedBy, T1.ClientCred_UserDefined1, T1.ClientCred_UserDefined2, T1.ClientCred_PmtRequestedCreditor, T1.ClientCred_OldBalance, T1.ClientCred_OldPayment, T1.ClientCred_AccumulateAmount, T1.ClientCred_BillPay, T1.ClientCred_BillPayAmount, T1.ClientCred_ACHBankAccountID, T1.ClientCred_BillPayStartDate, T1.ClientCred_BillPayPeriodType, T1.ClientCred_BillPayPeriodCount, T1.ClientCred_BillPayNextDate, T1.ClientCred_FirstProposalSent, T1.ClientCred_OverridePayPriority, T1.ClientCred_XClientCredID, T1.ClientCred_SecuredDebt, T1.ClientCred_LoanOriginalValue, T1.ClientCred_LoanTerm, T1.ClientCred_DateEntered, T1.ClientCred_InternetCreditorName, T1.ClientCred_BalanceVerifiedOn, T1.ClientCred_CurrentDefModifyManually, T1.ClientCred_MinimumAcceptedByCreditor, T1.ClientCred_DelinquencyStatus, T1.ClientCred_AccountDueDay, T1.ClientCred_SSNApplicant, T1.ClientCred_CommissionCalculated, T1.ClientCred_CommissionBatchID, T1.ClientCred_NegotiatedDate, T1.ClientCred_FeeClientCredID, T1.ClientCred_SettlementPercentage, T1.ClientCred_BalanceAtTimeOfSettlement, T1.ClientCred_SettlementApprovedOn, T1.ClientCred_Priority, T1.ClientCred_Lock, T1.ClientCred_IsTransferredAccount, T1.ClientCred_DND, T1.ClientCred_LastProposalSent, T1.ClientCred_OrigCreditorID, T1.ClientCred_CreditorPaymentType, T1.ClientCred_OverrideEstimatedSettlementPercentage, T1.ClientCred_NegotiatorUserID, T1.ClientCred_SettlementFeeBasedOnOrigBalance, T1.ClientCred_UseVirtual, T1.ClientCred_PreBankruptcy, T1.ClientCred_LessThanFull, T1.ClientCred_EstimatedSettlementAmount, T1.ClientCred_HoldProposal, T1.ClientCred_HoldProposalUntilFirstReceipt, T1.ClientCred_AccountNumberStripped, T1.ClientCred_CRTransUnion, T1.ClientCred_CRExperian, T1.ClientCred_CREquifax, T1.ClientCred_CRTransUnionIssueID, T1.ClientCred_CRExperianIssueID, T1.ClientCred_CREquifaxIssueID, T1.ClientCred_CoAppID, T1.ClientCred_LeadClientCredID, T1.ClientCred_DefaultCreditorID, T1.ClientCred_LockedAfterRecordPayment, T1.ClientCred_EstimatedSettlementFees, T1.ClientCred_CreditorContactID, T1.[ClientCred.AccountName_CALCULATED], T1.ClientCred_JointAccount, T1.ClientCred_StatementReceived, T1.[ClientCred.MOD10_CALCULATED], T1.[ClientCred.MinimumPayment_CALCULATED], T1.[ClientCred.RPPS_AutoResend_Counter_CALCULATED], T1.ClientCred_ContactScheduleID, T1.ClientCred_DNDDirty, T1.ClientCred_AgencyID, T1.ClientCred_CallToAction, T1.ClientCred_Hardship, T1.ClientCred_CollectionPlanID, T1.ClientCred_OverrideInternalFee, T1.ClientCred_NewInternalFeePercentage, T1.ClientCred_TempPayment, T1.ClientCred_ServiceDate, T1.ClientCred_DefaultFee, T1.ClientCred_TempFeeAmount, T1.ClientCred_TempExternalFeeAmount, T1.ClientCred_ClientPaymentEntrySelection, T1.ClientCred_TempDistribution, T1.ClientCred_TempExternalDistribution, T1.ClientCred_TempMaxFeeAmount, T1.ClientCred_EnteredByWebUserName, T1.ClientCred_DebtType, T1.ClientCred_ReportToCreditBureaus, T1.ClientCred_Metro2Closed, T1.ClientCred_Metro2LastExportID, T1.ClientCred_CreditReportConsumerTransactionCode, T1.ClientCred_CreditReportAccountStatusCode, T1.ClientCred_CreditReportECOACode, T1.ClientCred_CreditReportComplianceCode, T1.ClientCred_CreditReportPaymentHistory, T1.ClientCred_CreditReportPaymentRatingCode, T1.ClientCred_CreditReportSpecialComment, T1.ClientCred_LastCreditListedDate, T1.ClientCred_ClosedDate, T1.ClientCred_FirstDelinquencyDate, T1.ClientCred_PastDueAmount, T1.ClientCred_ImportDataLogID, T1.ClientCred_CollectionCampaignID, T1.[ClientCred.OrigCreditorID_CALCULATED], T1.ClientCred_OverrideSalesmanID, T1.[ClientCred.FullBudgetDisclosure_CALCULATED], T1.[ClientCred.FullBudgetCreditors_CALCULATED], T1.[ClientCred.SendProposalsByFax_CALCULATED], T1.[ClientCred.UseRPPSProposals_CALCULATED], T1.[ClientCred.AccountNumber_Masked], T1.[ClientCred.AccountNumber_Encrypted], T1.ClientCred_RetainerFeePSDID, T1.[ClientCred.SSNApplicant_Masked], T1.ClientCred_DefaultProgramScheduleSetupID, T1.ClientCred_XClientID, T1.[ClientCred.ReducedAPRBasedOnFormula_CALCULATED], T1.ClientCred_FirstProposalCreated, T1.ClientCred_AccountTerm, T1.ClientCred_UnpaidInterest, T1.[ClientCred.InterestPaidToDate_CALCULATED], T1.[ClientCred.NoOffers_CALCULATED], T1.ClientCred_UserDefined3, T1.ClientCred_PastDueAccount, T1.ClientCred_DateAccountCheckedAsPastDue, T1.ClientCred_YodleeStatus, T1.ClientCred_YodleeTransactionStatus, T1.ClientCred_YodleeItemID, T1.ClientCred_YodleeItemAccountID, T1.ClientCred_YodleeLastTransactionRequest, T1.ClientCred_YodleeContentServiceID, T1.[ClientCred.AccountOrdinalNumber_CALCULATED], T1.ClientCred_BillPayAmountOption, T1.ClientCred_BillPaySourceOption, T1.ClientCred_BillPayAmountVerifiedOn, T1.ClientCred_BillPayAmountVerifiedBy, T1.ClientCred_ProposalSentPriorToConversion, T1.ClientCred_BudgetCategoryID, T1.ClientCred_BillPaymentType, T1.ClientCred_ExcludeFromBudgetAnalysis, T1.ClientCred_BudgetUseYodleeTransactions, T1.ClientCred_PaymentTermID, T1.[ClientCred.FinancialDiscount_DueDate], T1.[ClientCred.FinanciaDiscount_AmountToPay], T1.[ClientCred.PrincipalBalance_CALCULATED], T1.[ClientCred.LastBalanceChangeID_CALCULATED], T1.[ClientCred.SLS_LoanType], T1.ClientCred_ProcedureID, T1.ClientCred_ItemUnits, T1.ClientCred_PricePerUnit, T1.ClientCred_PresetID, T1.ClientCred_SuspensionStartDate, T1.ClientCred_SuspensionEndDate, T1.ClientCred_SuspensionReason, T1.ClientCred_OverpaymentReason, T1.ClientCred_OriginalMasterClientID)
    FROM (
        SELECT 
            T.ClientCredID AS ClientCred_ClientCredID, 
            T.ClientID AS ClientCred_ClientID, 
            T.CreditorID AS ClientCred_CreditorID, 
            T.CreditorAlias AS ClientCred_CreditorAlias, 
            T.AccountNumber AS ClientCred_AccountNumber, 
            T.MonthlyPayment AS ClientCred_MonthlyPayment, 
            T.LastPay AS ClientCred_LastPay, 
            T.LastIncr AS ClientCred_LastIncr, 
            T.Balance AS ClientCred_Balance, 
            T.OrigDebt AS ClientCred_OrigDebt, 
            T.DefMonthlyPayment AS ClientCred_DefMonthlyPayment, 
            T.PrevPay1 AS ClientCred_PrevPay1, 
            T.OrigMonthly AS ClientCred_OrigMonthly, 
            T.BegDebt AS ClientCred_BegDebt, 
            T.InitialAPR AS ClientCred_InitialAPR, 
            T.ReducedAPR AS ClientCred_ReducedAPR, 
            T.Commission AS ClientCred_Commission, 
            T.Closed AS ClientCred_Closed, 
            T.XCreditorID AS ClientCred_XCreditorID, 
            T.XAccountNumber AS ClientCred_XAccountNumber, 
            T.OverrideFS AS ClientCred_OverrideFS, 
            T.NewFS AS ClientCred_NewFS, 
            T.OperatorStamp AS ClientCred_OperatorStamp, 
            T.DateTimeStamp AS ClientCred_DateTimeStamp, 
            T.upsize_ts AS [ClientCred.upsize_ts], 
            T.OriginalDueDate AS ClientCred_OriginalDueDate, 
            T.AccountStatus AS ClientCred_AccountStatus, 
            T.PmtRequested AS ClientCred_PmtRequested, 
            T.PmtRequestedDate AS ClientCred_PmtRequestedDate, 
            T.UpdatedBalance AS ClientCred_UpdatedBalance, 
            T.UpdatedBalanceDate AS ClientCred_UpdatedBalanceDate, 
            T.ConfirmedMonthly AS ClientCred_ConfirmedMonthly, 
            T.ConfirmedMonthlyDate AS ClientCred_ConfirmedMonthlyDate, 
            T.ConfirmedBalance AS ClientCred_ConfirmedBalance, 
            T.ConfirmedBalanceDate AS ClientCred_ConfirmedBalanceDate, 
            T.PaidToDate_CALCULATED AS [ClientCred.PaidToDate_CALCULATED], 
            T.AddedBy AS ClientCred_AddedBy, 
            T.UserDefined1 AS ClientCred_UserDefined1, 
            T.UserDefined2 AS ClientCred_UserDefined2, 
            T.PmtRequestedCreditor AS ClientCred_PmtRequestedCreditor, 
            T.OldBalance AS ClientCred_OldBalance, 
            T.OldPayment AS ClientCred_OldPayment, 
            T.AccumulateAmount AS ClientCred_AccumulateAmount, 
            T.BillPay AS ClientCred_BillPay, 
            T.BillPayAmount AS ClientCred_BillPayAmount, 
            T.ACHBankAccountID AS ClientCred_ACHBankAccountID, 
            T.BillPayStartDate AS ClientCred_BillPayStartDate, 
            T.BillPayPeriodType AS ClientCred_BillPayPeriodType, 
            T.BillPayPeriodCount AS ClientCred_BillPayPeriodCount, 
            T.BillPayNextDate AS ClientCred_BillPayNextDate, 
            T.FirstProposalSent AS ClientCred_FirstProposalSent, 
            T.OverridePayPriority AS ClientCred_OverridePayPriority, 
            T.XClientCredID AS ClientCred_XClientCredID, 
            T.SecuredDebt AS ClientCred_SecuredDebt, 
            T.LoanOriginalValue AS ClientCred_LoanOriginalValue, 
            T.LoanTerm AS ClientCred_LoanTerm, 
            T.DateEntered AS ClientCred_DateEntered, 
            T.InternetCreditorName AS ClientCred_InternetCreditorName, 
            T.BalanceVerifiedOn AS ClientCred_BalanceVerifiedOn, 
            T.CurrentDefModifyManually AS ClientCred_CurrentDefModifyManually, 
            T.MinimumAcceptedByCreditor AS ClientCred_MinimumAcceptedByCreditor, 
            T.DelinquencyStatus AS ClientCred_DelinquencyStatus, 
            T.AccountDueDay AS ClientCred_AccountDueDay, 
            T.SSNApplicant AS ClientCred_SSNApplicant, 
            T.CommissionCalculated AS ClientCred_CommissionCalculated, 
            T.CommissionBatchID AS ClientCred_CommissionBatchID, 
            T.NegotiatedDate AS ClientCred_NegotiatedDate, 
            T.FeeClientCredID AS ClientCred_FeeClientCredID, 
            T.SettlementPercentage AS ClientCred_SettlementPercentage, 
            T.BalanceAtTimeOfSettlement AS ClientCred_BalanceAtTimeOfSettlement, 
            T.SettlementApprovedOn AS ClientCred_SettlementApprovedOn, 
            T.Priority AS ClientCred_Priority, 
            T.Lock AS ClientCred_Lock, 
            T.IsTransferredAccount AS ClientCred_IsTransferredAccount, 
            T.DND AS ClientCred_DND, 
            T.LastProposalSent AS ClientCred_LastProposalSent, 
            T.OrigCreditorID AS ClientCred_OrigCreditorID, 
            T.CreditorPaymentType AS ClientCred_CreditorPaymentType, 
            T.OverrideEstimatedSettlementPercentage AS ClientCred_OverrideEstimatedSettlementPercentage, 
            T.NegotiatorUserID AS ClientCred_NegotiatorUserID, 
            T.SettlementFeeBasedOnOrigBalance AS ClientCred_SettlementFeeBasedOnOrigBalance, 
            T.UseVirtual AS ClientCred_UseVirtual, 
            T.PreBankruptcy AS ClientCred_PreBankruptcy, 
            T.LessThanFull AS ClientCred_LessThanFull, 
            T.EstimatedSettlementAmount AS ClientCred_EstimatedSettlementAmount, 
            T.HoldProposal AS ClientCred_HoldProposal, 
            T.HoldProposalUntilFirstReceipt AS ClientCred_HoldProposalUntilFirstReceipt, 
            T.AccountNumberStripped AS ClientCred_AccountNumberStripped, 
            T.CRTransUnion AS ClientCred_CRTransUnion, 
            T.CRExperian AS ClientCred_CRExperian, 
            T.CREquifax AS ClientCred_CREquifax, 
            T.CRTransUnionIssueID AS ClientCred_CRTransUnionIssueID, 
            T.CRExperianIssueID AS ClientCred_CRExperianIssueID, 
            T.CREquifaxIssueID AS ClientCred_CREquifaxIssueID, 
            T.CoAppID AS ClientCred_CoAppID, 
            T.LeadClientCredID AS ClientCred_LeadClientCredID, 
            T.DefaultCreditorID AS ClientCred_DefaultCreditorID, 
            T.LockedAfterRecordPayment AS ClientCred_LockedAfterRecordPayment, 
            T.EstimatedSettlementFees AS ClientCred_EstimatedSettlementFees, 
            T.CreditorContactID AS ClientCred_CreditorContactID, 
            T.AccountName_CALCULATED AS [ClientCred.AccountName_CALCULATED], 
            T.JointAccount AS ClientCred_JointAccount, 
            T.StatementReceived AS ClientCred_StatementReceived, 
            T.MOD10_CALCULATED AS [ClientCred.MOD10_CALCULATED], 
            T.MinimumPayment_CALCULATED AS [ClientCred.MinimumPayment_CALCULATED], 
            T.RPPS_AutoResend_Counter_CALCULATED AS [ClientCred.RPPS_AutoResend_Counter_CALCULATED], 
            T.ContactScheduleID AS ClientCred_ContactScheduleID, 
            T.DNDDirty AS ClientCred_DNDDirty, 
            T.AgencyID AS ClientCred_AgencyID, 
            T.CallToAction AS ClientCred_CallToAction, 
            T.Hardship AS ClientCred_Hardship, 
            T.CollectionPlanID AS ClientCred_CollectionPlanID, 
            T.OverrideInternalFee AS ClientCred_OverrideInternalFee, 
            T.NewInternalFeePercentage AS ClientCred_NewInternalFeePercentage, 
            T.TempPayment AS ClientCred_TempPayment, 
            T.ServiceDate AS ClientCred_ServiceDate, 
            T.DefaultFee AS ClientCred_DefaultFee, 
            T.TempFeeAmount AS ClientCred_TempFeeAmount, 
            T.TempExternalFeeAmount AS ClientCred_TempExternalFeeAmount, 
            T.ClientPaymentEntrySelection AS ClientCred_ClientPaymentEntrySelection, 
            T.TempDistribution AS ClientCred_TempDistribution, 
            T.TempExternalDistribution AS ClientCred_TempExternalDistribution, 
            T.TempMaxFeeAmount AS ClientCred_TempMaxFeeAmount, 
            T.EnteredByWebUserName AS ClientCred_EnteredByWebUserName, 
            T.DebtType AS ClientCred_DebtType, 
            T.ReportToCreditBureaus AS ClientCred_ReportToCreditBureaus, 
            T.Metro2Closed AS ClientCred_Metro2Closed, 
            T.Metro2LastExportID AS ClientCred_Metro2LastExportID, 
            T.CreditReportConsumerTransactionCode AS ClientCred_CreditReportConsumerTransactionCode, 
            T.CreditReportAccountStatusCode AS ClientCred_CreditReportAccountStatusCode, 
            T.CreditReportECOACode AS ClientCred_CreditReportECOACode, 
            T.CreditReportComplianceCode AS ClientCred_CreditReportComplianceCode, 
            T.CreditReportPaymentHistory AS ClientCred_CreditReportPaymentHistory, 
            T.CreditReportPaymentRatingCode AS ClientCred_CreditReportPaymentRatingCode, 
            T.CreditReportSpecialComment AS ClientCred_CreditReportSpecialComment, 
            T.LastCreditListedDate AS ClientCred_LastCreditListedDate, 
            T.ClosedDate AS ClientCred_ClosedDate, 
            T.FirstDelinquencyDate AS ClientCred_FirstDelinquencyDate, 
            T.PastDueAmount AS ClientCred_PastDueAmount, 
            T.ImportDataLogID AS ClientCred_ImportDataLogID, 
            T.CollectionCampaignID AS ClientCred_CollectionCampaignID, 
            T.OrigCreditorID_CALCULATED AS [ClientCred.OrigCreditorID_CALCULATED], 
            T.OverrideSalesmanID AS ClientCred_OverrideSalesmanID, 
            T.FullBudgetDisclosure_CALCULATED AS [ClientCred.FullBudgetDisclosure_CALCULATED], 
            T.FullBudgetCreditors_CALCULATED AS [ClientCred.FullBudgetCreditors_CALCULATED], 
            T.SendProposalsByFax_CALCULATED AS [ClientCred.SendProposalsByFax_CALCULATED], 
            T.UseRPPSProposals_CALCULATED AS [ClientCred.UseRPPSProposals_CALCULATED], 
            T.AccountNumber_Masked AS [ClientCred.AccountNumber_Masked], 
            T.AccountNumber_Encrypted AS [ClientCred.AccountNumber_Encrypted], 
            T.RetainerFeePSDID AS ClientCred_RetainerFeePSDID, 
            T.SSNApplicant_Masked AS [ClientCred.SSNApplicant_Masked], 
            T.DefaultProgramScheduleSetupID AS ClientCred_DefaultProgramScheduleSetupID, 
            T.XClientID AS ClientCred_XClientID, 
            T.ReducedAPRBasedOnFormula_CALCULATED AS [ClientCred.ReducedAPRBasedOnFormula_CALCULATED], 
            T.FirstProposalCreated AS ClientCred_FirstProposalCreated, 
            T.AccountTerm AS ClientCred_AccountTerm, 
            T.UnpaidInterest AS ClientCred_UnpaidInterest, 
            T.InterestPaidToDate_CALCULATED AS [ClientCred.InterestPaidToDate_CALCULATED], 
            T.NoOffers_CALCULATED AS [ClientCred.NoOffers_CALCULATED], 
            T.UserDefined3 AS ClientCred_UserDefined3, 
            T.PastDueAccount AS ClientCred_PastDueAccount, 
            T.DateAccountCheckedAsPastDue AS ClientCred_DateAccountCheckedAsPastDue, 
            T.YodleeStatus AS ClientCred_YodleeStatus, 
            T.YodleeTransactionStatus AS ClientCred_YodleeTransactionStatus, 
            T.YodleeItemID AS ClientCred_YodleeItemID, 
            T.YodleeItemAccountID AS ClientCred_YodleeItemAccountID, 
            T.YodleeLastTransactionRequest AS ClientCred_YodleeLastTransactionRequest, 
            T.YodleeContentServiceID AS ClientCred_YodleeContentServiceID, 
            T.AccountOrdinalNumber_CALCULATED AS [ClientCred.AccountOrdinalNumber_CALCULATED], 
            T.BillPayAmountOption AS ClientCred_BillPayAmountOption, 
            T.BillPaySourceOption AS ClientCred_BillPaySourceOption, 
            T.BillPayAmountVerifiedOn AS ClientCred_BillPayAmountVerifiedOn, 
            T.BillPayAmountVerifiedBy AS ClientCred_BillPayAmountVerifiedBy, 
            T.ProposalSentPriorToConversion AS ClientCred_ProposalSentPriorToConversion, 
            T.BudgetCategoryID AS ClientCred_BudgetCategoryID, 
            T.BillPaymentType AS ClientCred_BillPaymentType, 
            T.ExcludeFromBudgetAnalysis AS ClientCred_ExcludeFromBudgetAnalysis, 
            T.BudgetUseYodleeTransactions AS ClientCred_BudgetUseYodleeTransactions, 
            T.PaymentTermID AS ClientCred_PaymentTermID, 
            T.FinancialDiscount_DueDate AS [ClientCred.FinancialDiscount_DueDate], 
            T.FinanciaDiscount_AmountToPay AS [ClientCred.FinanciaDiscount_AmountToPay], 
            T.PrincipalBalance_CALCULATED AS [ClientCred.PrincipalBalance_CALCULATED], 
            T.LastBalanceChangeID_CALCULATED AS [ClientCred.LastBalanceChangeID_CALCULATED], 
            T.SLS_LoanType AS [ClientCred.SLS_LoanType], 
            T.ProcedureID AS ClientCred_ProcedureID, 
            T.ItemUnits AS ClientCred_ItemUnits, 
            T.PricePerUnit AS ClientCred_PricePerUnit, 
            T.PresetID AS ClientCred_PresetID, 
            T.SuspensionStartDate AS ClientCred_SuspensionStartDate, 
            T.SuspensionEndDate AS ClientCred_SuspensionEndDate, 
            T.SuspensionReason AS ClientCred_SuspensionReason, 
            T.OverpaymentReason AS ClientCred_OverpaymentReason, 
            T.OriginalMasterClientID AS ClientCred_OriginalMasterClientID, 
            True AS _from0
        FROM Entities.ClientCred AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.Clients.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Clients
        [Creditsoft.Store.Clients](T1.Clients_ClientID, T1.Clients_SSN, T1.Clients_LastName, T1.Clients_FirstName, T1.Clients_MiddleName, T1.Clients_Results, T1.Clients_Referral, T1.Clients_Counselor, T1.Clients_LocationID, T1.Clients_PaymentDay, T1.Clients_FDisDate, T1.Clients_WholeName, T1.Clients_Address1, T1.Clients_Address2, T1.Clients_City, T1.Clients_State, T1.Clients_ZIP, T1.Clients_Country, T1.Clients_HomePhone, T1.Clients_WorkPhone, T1.Clients_OtherPhone, T1.Clients_LastPaymentDate, T1.Clients_LastPaymentAmount, T1.Clients_DateEntered, T1.Clients_DateStart, T1.Clients_DateClose, T1.Clients_CloseReason, T1.Clients_Note, T1.Clients_StatementNote, T1.Clients_Active, T1.Clients_EditableUntil, T1.Clients_SalesmanID, T1.Clients_SalesmanType, T1.Clients_SalesmanUID, T1.Clients_Fax, T1.Clients_Email, T1.Clients_EmailStatus, T1.Clients_UseACH, T1.Clients_Language, T1.Clients_TempClient, T1.Clients_MonthlyStatementPrinted, T1.Clients_MonthlyStatementSDATE, T1.Clients_MonthlyStatementEDATE, T1.Clients_FirstPmtRcvd, T1.Clients_OperatorStamp, T1.Clients_DateTimeStamp, T1.[Clients.upsize_ts], T1.Clients_ClientStatus, T1.Clients_LeadClientID, T1.Clients_UserDefined1, T1.Clients_UserDefined2, T1.Clients_UserDefined3, T1.Clients_UserDefined4, T1.Clients_UserDefined5, T1.Clients_StatusChangedOn, T1.Clients_CurrentACHGroupID, T1.Clients_ACHNote, T1.Clients_TasksLockedByUserID, T1.Clients_CallBack, T1.Clients_EnteredBy, T1.Clients_SetServiceFee, T1.Clients_DefaultBankAccount, T1.Clients_DND, T1.Clients_UserDefined6, T1.Clients_AdvertisingID, T1.Clients_Mobile, T1.Clients_MonthlyServiceFeeCalculatedOn, T1.Clients_CompletionBonusBatchID, T1.Clients_ClientAdminStatus, T1.Clients_AppointmentSpecialist, T1.Clients_AccountManager, T1.Clients_Salutation, T1.Clients_PreferredCommunicationMethod, T1.Clients_WorkPhoneTime, T1.Clients_HomePhoneTime, T1.Clients_MobilePhoneTime, T1.Clients_WorkPhoneType, T1.Clients_HomePhoneType, T1.Clients_MobilePhoneType, T1.Clients_FileReceivedOn, T1.Clients_ProgramFeeDueDate, T1.Clients_ProgramLength, T1.Clients_ProgramScheduleID, T1.Clients_Address1CommunicationPreferred, T1.Clients_Address1CommunicationDoNotUse, T1.Clients_HomePhoneCommunicationPreferred, T1.Clients_HomePhoneCommunicationDoNotUse, T1.Clients_WorkPhoneCommunicationPreferred, T1.Clients_WorkPhoneCommunicationDoNotUse, T1.Clients_OtherPhoneCommunicationPreferred, T1.Clients_OtherPhoneCommunicationDoNotUse, T1.Clients_EmailCommunicationPreferred, T1.Clients_EmailCommunicationDoNotUse, T1.Clients_FaxCommunicationPreferred, T1.Clients_FaxCommunicationDoNotUse, T1.Clients_MobileCommunicationPreferred, T1.Clients_MobileCommunicationDoNotUse, T1.Clients_HomePhoneStripped, T1.Clients_WorkPhoneStripped, T1.Clients_OtherPhoneStripped, T1.Clients_FAXStripped, T1.[Clients.AmountDue_CALCULATED], T1.Clients_MobilePhoneStripped, T1.Clients_UserDefined7, T1.Clients_FeeStatus, T1.Clients_LastTimeJobAddedSchedulePoints, T1.[Clients.UnusedUnallocatedAmount_CALCULATED], T1.[Clients.UnusedRealAccumulatedAmount_CALCULATED], T1.[Clients.UnusedVirtualAccumulatedAmount_CALCULATED], T1.[Clients.ClientFirstValidReceipt_CALCULATED], T1.[Clients.TotalValidReceipts_CALCULATED], T1.[Clients.PendingReservedFunds_CALCULATED], T1.[Clients.ClientCreditsRemaining_CALCULATED], T1.[Clients.BalanceExternalAccounts_CALCULATED], T1.Clients_NotesPlainTextReadOnly, T1.Clients_DriverLicense, T1.[Clients.ClientIncome_CALCULATED], T1.[Clients.ClientBudget_CALCULATED], T1.Clients_DefaultCoAppID, T1.[Clients.EffectiveCommunicationMethod_CALCULATED], T1.Clients_PSUserDefined1, T1.Clients_PSUserDefined2, T1.Clients_PSUserDefined3, T1.Clients_PSUserDefined4, T1.Clients_PSUserDefined5, T1.Clients_ClosedBy, T1.[Clients.NonDMPAmount_CALCULATED], T1.Clients_PaymentDueDate, T1.[Clients.ClientLastValidReceipt_CALCULATED], T1.Clients_EnteredByWebUserName, T1.Clients_HardshipLevel, T1.Clients_ClientType, T1.Clients_CompanyName, T1.Clients_WebSite, T1.Clients_CompanyType, T1.[Clients.TotalNSFReceipts_CALCULATED], T1.Clients_AddressStatus, T1.Clients_SkipNSFFee, T1.Clients_IsBankrupt, T1.Clients_DMPDebtRangeID, T1.Clients_AddressMultiLine, T1.Clients_ImportDataLogID, T1.Clients_Rating, T1.Clients_IsMasterClient, T1.Clients_ClientIDGroup, T1.[Clients.Followup_CALCULATED], T1.[Clients.FollowupDate_CALCULATED], T1.[Clients.FirstContactDate_CALCULATED], T1.[Clients.FirstContactUserID_CALCULATED], T1.[Clients.LastContactDate_CALCULATED], T1.[Clients.LastContactUserID_CALCULATED], T1.[Clients.CheckListItemsRequired_CALCULATED], T1.Clients_CallID, T1.[Clients.LowestForecastedAccumulatedAmount_CALCULATED], T1.Clients_QBID, T1.Clients_ProcessingPolicyGroupID, T1.[Clients.SSN_Masked], T1.[Clients.SSN_Encrypted], T1.Clients_LegalAssistantID, T1.[Clients.ScoreModelID_CALCULATED], T1.[Clients.ScoreModelValue_CALCULATED], T1.[Clients.ScoreModelLastDate_CALCULATED], T1.[Clients.MaxPromisedDate_CALCULATED], T1.Clients_ClientDistributionBatchID, T1.[Clients.LastValidReceiptIDNSFdOrNot_CALCULATED], T1.[Clients.LastValidReceiptNSFd_CALCULATED], T1.[Clients.LastValidReceiptNSFDate_CALCULATED], T1.[Clients.LastValidReceiptDateReceived_CALCULATED], T1.[Clients.LastValidReceiptNSFConsecutiveCount_CALCULATED], T1.Clients_HomePhoneIsMobile, T1.Clients_HomePhoneSMSEnabled, T1.Clients_WorkPhoneIsMobile, T1.Clients_WorkPhoneSMSEnabled, T1.Clients_MobilePhoneIsMobile, T1.Clients_MobilePhoneSMSEnabled, T1.Clients_HomePhoneCarrierID, T1.Clients_WorkPhoneCarrierID, T1.Clients_OtherPhoneCarrierID, T1.Clients_MobileCarrierID, T1.Clients_PayPriorityOrderDesignatedByClient, T1.Clients_ContactScheduleID, T1.[Clients.FirstClearedReceiptDate_CALCULATED], T1.Clients_YodleeUserName, T1.Clients_YodleeStatus, T1.[Clients.TimeToGMT_CALCULATED], T1.[Clients.NextAccountOrdinal_CALCULATED], T1.Clients_MasterCreditorID, T1.Clients_IDType, T1.Clients_ChannelID, T1.Clients_RegionID, T1.Clients_InsuranceCompanyID, T1.Clients_CostCenter, T1.Clients_CreditLimit, T1.Clients_PaymentTermID, T1.[Clients.ClientRequirement_CALCULATED], T1.Clients_PSUserDefined6, T1.Clients_PSUserDefined7, T1.Clients_PSUserDefined8, T1.Clients_PSUserDefined9, T1.Clients_ClientIDGroupSecondary)
    FROM (
        SELECT 
            T.ClientID AS Clients_ClientID, 
            T.SSN AS Clients_SSN, 
            T.LastName AS Clients_LastName, 
            T.FirstName AS Clients_FirstName, 
            T.MiddleName AS Clients_MiddleName, 
            T.Results AS Clients_Results, 
            T.Referral AS Clients_Referral, 
            T.Counselor AS Clients_Counselor, 
            T.LocationID AS Clients_LocationID, 
            T.PaymentDay AS Clients_PaymentDay, 
            T.FDisDate AS Clients_FDisDate, 
            T.WholeName AS Clients_WholeName, 
            T.Address1 AS Clients_Address1, 
            T.Address2 AS Clients_Address2, 
            T.City AS Clients_City, 
            T.State AS Clients_State, 
            T.ZIP AS Clients_ZIP, 
            T.Country AS Clients_Country, 
            T.HomePhone AS Clients_HomePhone, 
            T.WorkPhone AS Clients_WorkPhone, 
            T.OtherPhone AS Clients_OtherPhone, 
            T.LastPaymentDate AS Clients_LastPaymentDate, 
            T.LastPaymentAmount AS Clients_LastPaymentAmount, 
            T.DateEntered AS Clients_DateEntered, 
            T.DateStart AS Clients_DateStart, 
            T.DateClose AS Clients_DateClose, 
            T.CloseReason AS Clients_CloseReason, 
            T.Note AS Clients_Note, 
            T.StatementNote AS Clients_StatementNote, 
            T.Active AS Clients_Active, 
            T.EditableUntil AS Clients_EditableUntil, 
            T.SalesmanID AS Clients_SalesmanID, 
            T.SalesmanType AS Clients_SalesmanType, 
            T.SalesmanUID AS Clients_SalesmanUID, 
            T.Fax AS Clients_Fax, 
            T.Email AS Clients_Email, 
            T.EmailStatus AS Clients_EmailStatus, 
            T.UseACH AS Clients_UseACH, 
            T.Language AS Clients_Language, 
            T.TempClient AS Clients_TempClient, 
            T.MonthlyStatementPrinted AS Clients_MonthlyStatementPrinted, 
            T.MonthlyStatementSDATE AS Clients_MonthlyStatementSDATE, 
            T.MonthlyStatementEDATE AS Clients_MonthlyStatementEDATE, 
            T.FirstPmtRcvd AS Clients_FirstPmtRcvd, 
            T.OperatorStamp AS Clients_OperatorStamp, 
            T.DateTimeStamp AS Clients_DateTimeStamp, 
            T.upsize_ts AS [Clients.upsize_ts], 
            T.ClientStatus AS Clients_ClientStatus, 
            T.LeadClientID AS Clients_LeadClientID, 
            T.UserDefined1 AS Clients_UserDefined1, 
            T.UserDefined2 AS Clients_UserDefined2, 
            T.UserDefined3 AS Clients_UserDefined3, 
            T.UserDefined4 AS Clients_UserDefined4, 
            T.UserDefined5 AS Clients_UserDefined5, 
            T.StatusChangedOn AS Clients_StatusChangedOn, 
            T.CurrentACHGroupID AS Clients_CurrentACHGroupID, 
            T.ACHNote AS Clients_ACHNote, 
            T.TasksLockedByUserID AS Clients_TasksLockedByUserID, 
            T.CallBack AS Clients_CallBack, 
            T.EnteredBy AS Clients_EnteredBy, 
            T.SetServiceFee AS Clients_SetServiceFee, 
            T.DefaultBankAccount AS Clients_DefaultBankAccount, 
            T.DND AS Clients_DND, 
            T.UserDefined6 AS Clients_UserDefined6, 
            T.AdvertisingID AS Clients_AdvertisingID, 
            T.Mobile AS Clients_Mobile, 
            T.MonthlyServiceFeeCalculatedOn AS Clients_MonthlyServiceFeeCalculatedOn, 
            T.CompletionBonusBatchID AS Clients_CompletionBonusBatchID, 
            T.ClientAdminStatus AS Clients_ClientAdminStatus, 
            T.AppointmentSpecialist AS Clients_AppointmentSpecialist, 
            T.AccountManager AS Clients_AccountManager, 
            T.Salutation AS Clients_Salutation, 
            T.PreferredCommunicationMethod AS Clients_PreferredCommunicationMethod, 
            T.WorkPhoneTime AS Clients_WorkPhoneTime, 
            T.HomePhoneTime AS Clients_HomePhoneTime, 
            T.MobilePhoneTime AS Clients_MobilePhoneTime, 
            T.WorkPhoneType AS Clients_WorkPhoneType, 
            T.HomePhoneType AS Clients_HomePhoneType, 
            T.MobilePhoneType AS Clients_MobilePhoneType, 
            T.FileReceivedOn AS Clients_FileReceivedOn, 
            T.ProgramFeeDueDate AS Clients_ProgramFeeDueDate, 
            T.ProgramLength AS Clients_ProgramLength, 
            T.ProgramScheduleID AS Clients_ProgramScheduleID, 
            T.Address1CommunicationPreferred AS Clients_Address1CommunicationPreferred, 
            T.Address1CommunicationDoNotUse AS Clients_Address1CommunicationDoNotUse, 
            T.HomePhoneCommunicationPreferred AS Clients_HomePhoneCommunicationPreferred, 
            T.HomePhoneCommunicationDoNotUse AS Clients_HomePhoneCommunicationDoNotUse, 
            T.WorkPhoneCommunicationPreferred AS Clients_WorkPhoneCommunicationPreferred, 
            T.WorkPhoneCommunicationDoNotUse AS Clients_WorkPhoneCommunicationDoNotUse, 
            T.OtherPhoneCommunicationPreferred AS Clients_OtherPhoneCommunicationPreferred, 
            T.OtherPhoneCommunicationDoNotUse AS Clients_OtherPhoneCommunicationDoNotUse, 
            T.EmailCommunicationPreferred AS Clients_EmailCommunicationPreferred, 
            T.EmailCommunicationDoNotUse AS Clients_EmailCommunicationDoNotUse, 
            T.FaxCommunicationPreferred AS Clients_FaxCommunicationPreferred, 
            T.FaxCommunicationDoNotUse AS Clients_FaxCommunicationDoNotUse, 
            T.MobileCommunicationPreferred AS Clients_MobileCommunicationPreferred, 
            T.MobileCommunicationDoNotUse AS Clients_MobileCommunicationDoNotUse, 
            T.HomePhoneStripped AS Clients_HomePhoneStripped, 
            T.WorkPhoneStripped AS Clients_WorkPhoneStripped, 
            T.OtherPhoneStripped AS Clients_OtherPhoneStripped, 
            T.FAXStripped AS Clients_FAXStripped, 
            T.AmountDue_CALCULATED AS [Clients.AmountDue_CALCULATED], 
            T.MobilePhoneStripped AS Clients_MobilePhoneStripped, 
            T.UserDefined7 AS Clients_UserDefined7, 
            T.FeeStatus AS Clients_FeeStatus, 
            T.LastTimeJobAddedSchedulePoints AS Clients_LastTimeJobAddedSchedulePoints, 
            T.UnusedUnallocatedAmount_CALCULATED AS [Clients.UnusedUnallocatedAmount_CALCULATED], 
            T.UnusedRealAccumulatedAmount_CALCULATED AS [Clients.UnusedRealAccumulatedAmount_CALCULATED], 
            T.UnusedVirtualAccumulatedAmount_CALCULATED AS [Clients.UnusedVirtualAccumulatedAmount_CALCULATED], 
            T.ClientFirstValidReceipt_CALCULATED AS [Clients.ClientFirstValidReceipt_CALCULATED], 
            T.TotalValidReceipts_CALCULATED AS [Clients.TotalValidReceipts_CALCULATED], 
            T.PendingReservedFunds_CALCULATED AS [Clients.PendingReservedFunds_CALCULATED], 
            T.ClientCreditsRemaining_CALCULATED AS [Clients.ClientCreditsRemaining_CALCULATED], 
            T.BalanceExternalAccounts_CALCULATED AS [Clients.BalanceExternalAccounts_CALCULATED], 
            T.NotesPlainTextReadOnly AS Clients_NotesPlainTextReadOnly, 
            T.DriverLicense AS Clients_DriverLicense, 
            T.ClientIncome_CALCULATED AS [Clients.ClientIncome_CALCULATED], 
            T.ClientBudget_CALCULATED AS [Clients.ClientBudget_CALCULATED], 
            T.DefaultCoAppID AS Clients_DefaultCoAppID, 
            T.EffectiveCommunicationMethod_CALCULATED AS [Clients.EffectiveCommunicationMethod_CALCULATED], 
            T.PSUserDefined1 AS Clients_PSUserDefined1, 
            T.PSUserDefined2 AS Clients_PSUserDefined2, 
            T.PSUserDefined3 AS Clients_PSUserDefined3, 
            T.PSUserDefined4 AS Clients_PSUserDefined4, 
            T.PSUserDefined5 AS Clients_PSUserDefined5, 
            T.ClosedBy AS Clients_ClosedBy, 
            T.NonDMPAmount_CALCULATED AS [Clients.NonDMPAmount_CALCULATED], 
            T.PaymentDueDate AS Clients_PaymentDueDate, 
            T.ClientLastValidReceipt_CALCULATED AS [Clients.ClientLastValidReceipt_CALCULATED], 
            T.EnteredByWebUserName AS Clients_EnteredByWebUserName, 
            T.HardshipLevel AS Clients_HardshipLevel, 
            T.ClientType AS Clients_ClientType, 
            T.CompanyName AS Clients_CompanyName, 
            T.WebSite AS Clients_WebSite, 
            T.CompanyType AS Clients_CompanyType, 
            T.TotalNSFReceipts_CALCULATED AS [Clients.TotalNSFReceipts_CALCULATED], 
            T.AddressStatus AS Clients_AddressStatus, 
            T.SkipNSFFee AS Clients_SkipNSFFee, 
            T.IsBankrupt AS Clients_IsBankrupt, 
            T.DMPDebtRangeID AS Clients_DMPDebtRangeID, 
            T.AddressMultiLine AS Clients_AddressMultiLine, 
            T.ImportDataLogID AS Clients_ImportDataLogID, 
            T.Rating AS Clients_Rating, 
            T.IsMasterClient AS Clients_IsMasterClient, 
            T.ClientIDGroup AS Clients_ClientIDGroup, 
            T.Followup_CALCULATED AS [Clients.Followup_CALCULATED], 
            T.FollowupDate_CALCULATED AS [Clients.FollowupDate_CALCULATED], 
            T.FirstContactDate_CALCULATED AS [Clients.FirstContactDate_CALCULATED], 
            T.FirstContactUserID_CALCULATED AS [Clients.FirstContactUserID_CALCULATED], 
            T.LastContactDate_CALCULATED AS [Clients.LastContactDate_CALCULATED], 
            T.LastContactUserID_CALCULATED AS [Clients.LastContactUserID_CALCULATED], 
            T.CheckListItemsRequired_CALCULATED AS [Clients.CheckListItemsRequired_CALCULATED], 
            T.CallID AS Clients_CallID, 
            T.LowestForecastedAccumulatedAmount_CALCULATED AS [Clients.LowestForecastedAccumulatedAmount_CALCULATED], 
            T.QBID AS Clients_QBID, 
            T.ProcessingPolicyGroupID AS Clients_ProcessingPolicyGroupID, 
            T.SSN_Masked AS [Clients.SSN_Masked], 
            T.SSN_Encrypted AS [Clients.SSN_Encrypted], 
            T.LegalAssistantID AS Clients_LegalAssistantID, 
            T.ScoreModelID_CALCULATED AS [Clients.ScoreModelID_CALCULATED], 
            T.ScoreModelValue_CALCULATED AS [Clients.ScoreModelValue_CALCULATED], 
            T.ScoreModelLastDate_CALCULATED AS [Clients.ScoreModelLastDate_CALCULATED], 
            T.MaxPromisedDate_CALCULATED AS [Clients.MaxPromisedDate_CALCULATED], 
            T.ClientDistributionBatchID AS Clients_ClientDistributionBatchID, 
            T.LastValidReceiptIDNSFdOrNot_CALCULATED AS [Clients.LastValidReceiptIDNSFdOrNot_CALCULATED], 
            T.LastValidReceiptNSFd_CALCULATED AS [Clients.LastValidReceiptNSFd_CALCULATED], 
            T.LastValidReceiptNSFDate_CALCULATED AS [Clients.LastValidReceiptNSFDate_CALCULATED], 
            T.LastValidReceiptDateReceived_CALCULATED AS [Clients.LastValidReceiptDateReceived_CALCULATED], 
            T.LastValidReceiptNSFConsecutiveCount_CALCULATED AS [Clients.LastValidReceiptNSFConsecutiveCount_CALCULATED], 
            T.HomePhoneIsMobile AS Clients_HomePhoneIsMobile, 
            T.HomePhoneSMSEnabled AS Clients_HomePhoneSMSEnabled, 
            T.WorkPhoneIsMobile AS Clients_WorkPhoneIsMobile, 
            T.WorkPhoneSMSEnabled AS Clients_WorkPhoneSMSEnabled, 
            T.MobilePhoneIsMobile AS Clients_MobilePhoneIsMobile, 
            T.MobilePhoneSMSEnabled AS Clients_MobilePhoneSMSEnabled, 
            T.HomePhoneCarrierID AS Clients_HomePhoneCarrierID, 
            T.WorkPhoneCarrierID AS Clients_WorkPhoneCarrierID, 
            T.OtherPhoneCarrierID AS Clients_OtherPhoneCarrierID, 
            T.MobileCarrierID AS Clients_MobileCarrierID, 
            T.PayPriorityOrderDesignatedByClient AS Clients_PayPriorityOrderDesignatedByClient, 
            T.ContactScheduleID AS Clients_ContactScheduleID, 
            T.FirstClearedReceiptDate_CALCULATED AS [Clients.FirstClearedReceiptDate_CALCULATED], 
            T.YodleeUserName AS Clients_YodleeUserName, 
            T.YodleeStatus AS Clients_YodleeStatus, 
            T.TimeToGMT_CALCULATED AS [Clients.TimeToGMT_CALCULATED], 
            T.NextAccountOrdinal_CALCULATED AS [Clients.NextAccountOrdinal_CALCULATED], 
            T.MasterCreditorID AS Clients_MasterCreditorID, 
            T.IDType AS Clients_IDType, 
            T.ChannelID AS Clients_ChannelID, 
            T.RegionID AS Clients_RegionID, 
            T.InsuranceCompanyID AS Clients_InsuranceCompanyID, 
            T.CostCenter AS Clients_CostCenter, 
            T.CreditLimit AS Clients_CreditLimit, 
            T.PaymentTermID AS Clients_PaymentTermID, 
            T.ClientRequirement_CALCULATED AS [Clients.ClientRequirement_CALCULATED], 
            T.PSUserDefined6 AS Clients_PSUserDefined6, 
            T.PSUserDefined7 AS Clients_PSUserDefined7, 
            T.PSUserDefined8 AS Clients_PSUserDefined8, 
            T.PSUserDefined9 AS Clients_PSUserDefined9, 
            T.ClientIDGroupSecondary AS Clients_ClientIDGroupSecondary, 
            True AS _from0
        FROM Entities.Clients AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.CoApps.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CoApps
        [Creditsoft.Store.CoApps](T1.CoApps_CoAppID, T1.CoApps_ClientID, T1.CoApps_CoAppFirst, T1.CoApps_CoAppLast, T1.CoApps_CoAppMiddleName, T1.CoApps_CoAppSSN, T1.CoApps_CoAppDOB, T1.CoApps_CoAppAge, T1.CoApps_CoAppSex, T1.CoApps_CoAppOccupation, T1.CoApps_CoAppEmployer, T1.CoApps_CoAppNetIncome, T1.CoApps_CoAppHomePhone, T1.CoApps_CoAppWorkPhone, T1.CoApps_CoAppOtherPhone, T1.CoApps_CoAppAddress1, T1.CoApps_CoAppAddress2, T1.CoApps_CoAppCity, T1.CoApps_CoAppState, T1.CoApps_CoAppZIP, T1.CoApps_Relationship, T1.CoApps_CoAppEmail, T1.CoApps_CoAppMarital, T1.CoApps_CoAppYearsAtJob, T1.[CoApps.upsize_ts], T1.CoApps_CoAppOccupationCategory, T1.CoApps_CoAppAddress1CommunicationPreferred, T1.CoApps_CoAppAddress1CommunicationDoNotUse, T1.CoApps_CoAppHomePhoneCommunicationPreferred, T1.CoApps_CoAppHomePhoneCommunicationDoNotUse, T1.CoApps_CoAppWorkPhoneCommunicationPreferred, T1.CoApps_CoAppWorkPhoneCommunicationDoNotUse, T1.CoApps_CoAppOtherPhoneCommunicationPreferred, T1.CoApps_CoAppOtherPhoneCommunicationDoNotUse, T1.CoApps_CoAppEmailCommunicationPreferred, T1.CoApps_CoAppEmailCommunicationDoNotUse, T1.CoApps_CoAppHomePhoneStripped, T1.CoApps_CoAppWorkPhoneStripped, T1.CoApps_CoAppOtherPhoneStripped, T1.CoApps_LeadID, T1.CoApps_EnteredByWebUserName, T1.CoApps_CoAppEmployed, T1.CoApps_IsBillingContact, T1.[CoApps.CoAppFullName_CALCULATED], T1.CoApps_CoAppActive, T1.[CoApps.CoAppSSN_Masked], T1.CoApps_Note, T1.CoApps_CoAppHomePhoneIsMobile, T1.CoApps_CoAppHomePhoneSMSEnabled, T1.CoApps_CoAppWorkPhoneIsMobile, T1.CoApps_CoAppWorkPhoneSMSEnabled, T1.CoApps_CoAppOtherPhoneIsMobile, T1.CoApps_CoAppOtherPhoneSMSEnabled, T1.CoApps_CoAppHomePhoneType, T1.CoApps_CoAppWorkPhoneType, T1.CoApps_CoAppOtherPhoneType, T1.CoApps_CoAppHomePhoneCarrierID, T1.CoApps_CoAppWorkPhoneCarrierID, T1.CoApps_CoAppOtherPhoneCarrierID, T1.CoApps_CoAppUserDefined1, T1.CoApps_CoAppOccupationCategoryID, T1.CoApps_IsBankrupt, T1.CoApps_BankruptcyAttorneyPhoneNumber, T1.CoApps_BankruptcyFilingDate, T1.CoApps_BankruptcyHearingDate, T1.CoApps_BankruptcyTrusteeLastName, T1.CoApps_BankruptcyTrusteeFirstName, T1.CoApps_BankruptcyTrusteeMiddleName, T1.CoApps_BankruptcyTrusteeAddress1, T1.CoApps_BankruptcyTrusteeAddress2, T1.CoApps_BankruptcyTrusteeCity, T1.CoApps_BankruptcyTrusteeState, T1.CoApps_BankruptcyTrusteeZip, T1.CoApps_BankruptcyTrusteePhoneNumber, T1.CoApps_BankruptcyAttorneyAddress1, T1.CoApps_BankruptcyAttorneyAddress2, T1.CoApps_BankruptcyAttorneyCity, T1.CoApps_BankruptcyAttorneyState, T1.CoApps_BankruptcyAttorneyZip, T1.CoApps_BankruptcyCourtCode, T1.CoApps_BankruptcyCourtAddress1, T1.CoApps_BankruptcyCourtAddress2, T1.CoApps_BankruptcyCourtCity, T1.CoApps_BankruptcyCourtState, T1.CoApps_BankruptcyCourtZip, T1.CoApps_BankruptcyCourtPostalAddress1, T1.CoApps_BankruptcyCourtPostalAddress2, T1.CoApps_BankruptcyCourtPostalCity, T1.CoApps_BankruptcyCourtPostalState, T1.CoApps_BankruptcyCourtPostalZip, T1.CoApps_BankruptcyProofOfClaimIssued, T1.CoApps_BankruptcyProofOfClaimResponseDate, T1.CoApps_BankruptcyProofOfClaimFiledDate, T1.CoApps_BankruptcyProofOfClaimAmount, T1.CoApps_BankruptcyDismissed, T1.CoApps_BankruptcyDismissedDate, T1.CoApps_BankruptcyDischarged, T1.CoApps_BankruptcyDischargedDate, T1.CoApps_BankruptcyChapter, T1.CoApps_BankruptcyAttorneyLastName, T1.CoApps_BankruptcyAttorneyFirstName, T1.CoApps_BankruptcyAttorneyMiddleName, T1.CoApps_BankruptcyCourtDistrictCode, T1.CoApps_BankruptcyCaseNumber)
    FROM (
        SELECT 
            T.CoAppID AS CoApps_CoAppID, 
            T.ClientID AS CoApps_ClientID, 
            T.CoAppFirst AS CoApps_CoAppFirst, 
            T.CoAppLast AS CoApps_CoAppLast, 
            T.CoAppMiddleName AS CoApps_CoAppMiddleName, 
            T.CoAppSSN AS CoApps_CoAppSSN, 
            T.CoAppDOB AS CoApps_CoAppDOB, 
            T.CoAppAge AS CoApps_CoAppAge, 
            T.CoAppSex AS CoApps_CoAppSex, 
            T.CoAppOccupation AS CoApps_CoAppOccupation, 
            T.CoAppEmployer AS CoApps_CoAppEmployer, 
            T.CoAppNetIncome AS CoApps_CoAppNetIncome, 
            T.CoAppHomePhone AS CoApps_CoAppHomePhone, 
            T.CoAppWorkPhone AS CoApps_CoAppWorkPhone, 
            T.CoAppOtherPhone AS CoApps_CoAppOtherPhone, 
            T.CoAppAddress1 AS CoApps_CoAppAddress1, 
            T.CoAppAddress2 AS CoApps_CoAppAddress2, 
            T.CoAppCity AS CoApps_CoAppCity, 
            T.CoAppState AS CoApps_CoAppState, 
            T.CoAppZIP AS CoApps_CoAppZIP, 
            T.[Relationship] AS CoApps_Relationship, 
            T.CoAppEmail AS CoApps_CoAppEmail, 
            T.CoAppMarital AS CoApps_CoAppMarital, 
            T.CoAppYearsAtJob AS CoApps_CoAppYearsAtJob, 
            T.upsize_ts AS [CoApps.upsize_ts], 
            T.CoAppOccupationCategory AS CoApps_CoAppOccupationCategory, 
            T.CoAppAddress1CommunicationPreferred AS CoApps_CoAppAddress1CommunicationPreferred, 
            T.CoAppAddress1CommunicationDoNotUse AS CoApps_CoAppAddress1CommunicationDoNotUse, 
            T.CoAppHomePhoneCommunicationPreferred AS CoApps_CoAppHomePhoneCommunicationPreferred, 
            T.CoAppHomePhoneCommunicationDoNotUse AS CoApps_CoAppHomePhoneCommunicationDoNotUse, 
            T.CoAppWorkPhoneCommunicationPreferred AS CoApps_CoAppWorkPhoneCommunicationPreferred, 
            T.CoAppWorkPhoneCommunicationDoNotUse AS CoApps_CoAppWorkPhoneCommunicationDoNotUse, 
            T.CoAppOtherPhoneCommunicationPreferred AS CoApps_CoAppOtherPhoneCommunicationPreferred, 
            T.CoAppOtherPhoneCommunicationDoNotUse AS CoApps_CoAppOtherPhoneCommunicationDoNotUse, 
            T.CoAppEmailCommunicationPreferred AS CoApps_CoAppEmailCommunicationPreferred, 
            T.CoAppEmailCommunicationDoNotUse AS CoApps_CoAppEmailCommunicationDoNotUse, 
            T.CoAppHomePhoneStripped AS CoApps_CoAppHomePhoneStripped, 
            T.CoAppWorkPhoneStripped AS CoApps_CoAppWorkPhoneStripped, 
            T.CoAppOtherPhoneStripped AS CoApps_CoAppOtherPhoneStripped, 
            T.LeadID AS CoApps_LeadID, 
            T.EnteredByWebUserName AS CoApps_EnteredByWebUserName, 
            T.CoAppEmployed AS CoApps_CoAppEmployed, 
            T.IsBillingContact AS CoApps_IsBillingContact, 
            T.CoAppFullName_CALCULATED AS [CoApps.CoAppFullName_CALCULATED], 
            T.CoAppActive AS CoApps_CoAppActive, 
            T.CoAppSSN_Masked AS [CoApps.CoAppSSN_Masked], 
            T.Note AS CoApps_Note, 
            T.CoAppHomePhoneIsMobile AS CoApps_CoAppHomePhoneIsMobile, 
            T.CoAppHomePhoneSMSEnabled AS CoApps_CoAppHomePhoneSMSEnabled, 
            T.CoAppWorkPhoneIsMobile AS CoApps_CoAppWorkPhoneIsMobile, 
            T.CoAppWorkPhoneSMSEnabled AS CoApps_CoAppWorkPhoneSMSEnabled, 
            T.CoAppOtherPhoneIsMobile AS CoApps_CoAppOtherPhoneIsMobile, 
            T.CoAppOtherPhoneSMSEnabled AS CoApps_CoAppOtherPhoneSMSEnabled, 
            T.CoAppHomePhoneType AS CoApps_CoAppHomePhoneType, 
            T.CoAppWorkPhoneType AS CoApps_CoAppWorkPhoneType, 
            T.CoAppOtherPhoneType AS CoApps_CoAppOtherPhoneType, 
            T.CoAppHomePhoneCarrierID AS CoApps_CoAppHomePhoneCarrierID, 
            T.CoAppWorkPhoneCarrierID AS CoApps_CoAppWorkPhoneCarrierID, 
            T.CoAppOtherPhoneCarrierID AS CoApps_CoAppOtherPhoneCarrierID, 
            T.CoAppUserDefined1 AS CoApps_CoAppUserDefined1, 
            T.CoAppOccupationCategoryID AS CoApps_CoAppOccupationCategoryID, 
            T.IsBankrupt AS CoApps_IsBankrupt, 
            T.BankruptcyAttorneyPhoneNumber AS CoApps_BankruptcyAttorneyPhoneNumber, 
            T.BankruptcyFilingDate AS CoApps_BankruptcyFilingDate, 
            T.BankruptcyHearingDate AS CoApps_BankruptcyHearingDate, 
            T.BankruptcyTrusteeLastName AS CoApps_BankruptcyTrusteeLastName, 
            T.BankruptcyTrusteeFirstName AS CoApps_BankruptcyTrusteeFirstName, 
            T.BankruptcyTrusteeMiddleName AS CoApps_BankruptcyTrusteeMiddleName, 
            T.BankruptcyTrusteeAddress1 AS CoApps_BankruptcyTrusteeAddress1, 
            T.BankruptcyTrusteeAddress2 AS CoApps_BankruptcyTrusteeAddress2, 
            T.BankruptcyTrusteeCity AS CoApps_BankruptcyTrusteeCity, 
            T.BankruptcyTrusteeState AS CoApps_BankruptcyTrusteeState, 
            T.BankruptcyTrusteeZip AS CoApps_BankruptcyTrusteeZip, 
            T.BankruptcyTrusteePhoneNumber AS CoApps_BankruptcyTrusteePhoneNumber, 
            T.BankruptcyAttorneyAddress1 AS CoApps_BankruptcyAttorneyAddress1, 
            T.BankruptcyAttorneyAddress2 AS CoApps_BankruptcyAttorneyAddress2, 
            T.BankruptcyAttorneyCity AS CoApps_BankruptcyAttorneyCity, 
            T.BankruptcyAttorneyState AS CoApps_BankruptcyAttorneyState, 
            T.BankruptcyAttorneyZip AS CoApps_BankruptcyAttorneyZip, 
            T.BankruptcyCourtCode AS CoApps_BankruptcyCourtCode, 
            T.BankruptcyCourtAddress1 AS CoApps_BankruptcyCourtAddress1, 
            T.BankruptcyCourtAddress2 AS CoApps_BankruptcyCourtAddress2, 
            T.BankruptcyCourtCity AS CoApps_BankruptcyCourtCity, 
            T.BankruptcyCourtState AS CoApps_BankruptcyCourtState, 
            T.BankruptcyCourtZip AS CoApps_BankruptcyCourtZip, 
            T.BankruptcyCourtPostalAddress1 AS CoApps_BankruptcyCourtPostalAddress1, 
            T.BankruptcyCourtPostalAddress2 AS CoApps_BankruptcyCourtPostalAddress2, 
            T.BankruptcyCourtPostalCity AS CoApps_BankruptcyCourtPostalCity, 
            T.BankruptcyCourtPostalState AS CoApps_BankruptcyCourtPostalState, 
            T.BankruptcyCourtPostalZip AS CoApps_BankruptcyCourtPostalZip, 
            T.BankruptcyProofOfClaimIssued AS CoApps_BankruptcyProofOfClaimIssued, 
            T.BankruptcyProofOfClaimResponseDate AS CoApps_BankruptcyProofOfClaimResponseDate, 
            T.BankruptcyProofOfClaimFiledDate AS CoApps_BankruptcyProofOfClaimFiledDate, 
            T.BankruptcyProofOfClaimAmount AS CoApps_BankruptcyProofOfClaimAmount, 
            T.BankruptcyDismissed AS CoApps_BankruptcyDismissed, 
            T.BankruptcyDismissedDate AS CoApps_BankruptcyDismissedDate, 
            T.BankruptcyDischarged AS CoApps_BankruptcyDischarged, 
            T.BankruptcyDischargedDate AS CoApps_BankruptcyDischargedDate, 
            T.BankruptcyChapter AS CoApps_BankruptcyChapter, 
            T.BankruptcyAttorneyLastName AS CoApps_BankruptcyAttorneyLastName, 
            T.BankruptcyAttorneyFirstName AS CoApps_BankruptcyAttorneyFirstName, 
            T.BankruptcyAttorneyMiddleName AS CoApps_BankruptcyAttorneyMiddleName, 
            T.BankruptcyCourtDistrictCode AS CoApps_BankruptcyCourtDistrictCode, 
            T.BankruptcyCaseNumber AS CoApps_BankruptcyCaseNumber, 
            True AS _from0
        FROM Entities.CoApps AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.Creditors.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Creditors
        [Creditsoft.Store.Creditors](T1.Creditors_CreditorID, T1.Creditors_Name, T1.Creditors_Address1, T1.Creditors_Address2, T1.Creditors_City, T1.Creditors_State, T1.Creditors_ZIP, T1.Creditors_Telephone, T1.Creditors_AltTelephone, T1.Creditors_Fax, T1.Creditors_ContactPerson, T1.Creditors_FairShare, T1.Creditors_BillingPeriod, T1.Creditors_LastInvoicePrinted, T1.Creditors_Deduct, T1.Creditors_Bill, T1.Creditors_Terms, T1.Creditors_GuideLines, T1.Creditors_ProposalPct, T1.Creditors_PName, T1.Creditors_PAddress1, T1.Creditors_PAddress2, T1.Creditors_PCity, T1.Creditors_PState, T1.Creditors_PZIP, T1.Creditors_PAttn, T1.Creditors_PPhone, T1.Creditors_PFax, T1.Creditors_BName, T1.Creditors_BAddress1, T1.Creditors_BAddress2, T1.Creditors_BCity, T1.Creditors_BState, T1.Creditors_BZIP, T1.Creditors_BAttn, T1.Creditors_BPhone, T1.Creditors_BFax, T1.Creditors_Notes, T1.Creditors_Consolidate, T1.Creditors_Alert, T1.Creditors_APR, T1.Creditors_Codes, T1.Creditors_ShowOnLetters, T1.Creditors_EditableUntil, T1.Creditors_CreditorType, T1.Creditors_Commissionable, T1.Creditors_Active, T1.Creditors_ClientIDcopy, T1.Creditors_MinimumPercent, T1.Creditors_PercentOf, T1.Creditors_MinimumAmount, T1.Creditors_NewCreditorID, T1.Creditors_BillerID, T1.Creditors_DefBankAccountID, T1.Creditors_BillerType, T1.Creditors_ReversalBillerID, T1.Creditors_ReversalAccountNumber, T1.Creditors_TempCreditor, T1.Creditors_OperatorStamp, T1.Creditors_DateTimeStamp, T1.[Creditors.upsize_ts], T1.Creditors_Generic, T1.Creditors_ReduceInterest, T1.Creditors_EliminateInterest, T1.Creditors_ReAge, T1.Creditors_ReAgeAfter, T1.Creditors_DropLateFees, T1.Creditors_FirstInvoiceDate, T1.Creditors_APROutsideCC, T1.Creditors_UseForEnrollment, T1.Creditors_PContact, T1.Creditors_BContact, T1.Creditors_ValidateMasks, T1.Creditors_ReducePoints, T1.Creditors_UseRPPSProposals, T1.Creditors_RPPSBillerIDOverride, T1.Creditors_PerCheck, T1.Creditors_PerBill, T1.Creditors_Guaranteed, T1.Creditors_Profile, T1.Creditors_UserDefined1, T1.Creditors_UserDefined2, T1.Creditors_FullBudgetDisclosure, T1.Creditors_FullBudgetCreditors, T1.Creditors_CreditorAdded, T1.Creditors_UserDefinedCode, T1.Creditors_OverrideMinimumInvoiceAmount, T1.Creditors_UseForInternet, T1.Creditors_BPName, T1.Creditors_BPAddress1, T1.Creditors_BPAddress2, T1.Creditors_BPCity, T1.Creditors_BPState, T1.Creditors_BPZip, T1.Creditors_BPAttn, T1.Creditors_BPPhone, T1.Creditors_BPFax, T1.Creditors_DateEntered, T1.Creditors_SkipBulkProposals, T1.Creditors_SkipImportMask, T1.Creditors_Password, T1.Creditors_QBID, T1.Creditors_EditSequence, T1.Creditors_PADMinimum, T1.Creditors_Email, T1.Creditors_DefaultSettlementPercentage, T1.Creditors_ContributeInFS, T1.Creditors_Company, T1.Creditors_MaximumFairShareAmount, T1.Creditors_RequireStubWithInvoice, T1.Creditors_BankRoutingNumber, T1.Creditors_BankAccountNumber, T1.Creditors_BankName, T1.Creditors_BankCity, T1.Creditors_BankState, T1.Creditors_BankZipCode, T1.Creditors_OverridePayOffBehavior, T1.Creditors_DefaultCreditorPaymentType, T1.Creditors_AllowPreBankruptcy, T1.Creditors_AllowLessThanFull, T1.Creditors_UsePhonePay, T1.Creditors_TelephoneStripped, T1.Creditors_AltTelephoneStripped, T1.Creditors_FaxStripped, T1.Creditors_BPhoneStripped, T1.Creditors_PPhoneStripped, T1.Creditors_BFaxStripped, T1.Creditors_PFaxStripped, T1.Creditors_BPPhoneStripped, T1.Creditors_BPFaxStripped, T1.Creditors_BankAddress, T1.Creditors_AddedBy, T1.Creditors_LoggedUserID, T1.Creditors_LoggedOn, T1.Creditors_DropLateFeesAfter, T1.Creditors_DropOverlimitFees, T1.Creditors_DropOverlimitFeesAfter, T1.Creditors_CreditorGroupCreditorID, T1.Creditors_OtherFeesNotes, T1.Creditors_ReageFrequency, T1.Creditors_AllowRebates, T1.Creditors_RebatesNotes, T1.Creditors_DropPolicyNotes, T1.Creditors_InterestRangeNotes, T1.Creditors_MaxMonthsToPayout, T1.Creditors_CreditorGroupIsParent, T1.Creditors_AutoResendProposals, T1.Creditors_DefaultHoldProposals, T1.Creditors_DefaultHoldProposalUntilFirstReceipt, T1.Creditors_RebatesPct, T1.Creditors_EmailStatus, T1.Creditors_CompoundFrequency, T1.Creditors_SendProposalsByFax, T1.Creditors_AllowFeeOverCalculatedDefault, T1.Creditors_NotesPlainTextReadOnly, T1.Creditors_FileID, T1.Creditors_HoldProposalsDaysBeforeNextDisbursement, T1.Creditors_EnableMod10Validation, T1.Creditors_MinimumPercentBeforeDMP, T1.Creditors_PercentOfBeforeDMP, T1.Creditors_MinimumAmountBeforeDMP, T1.Creditors_UserDefined3, T1.Creditors_AllowCDV, T1.Creditors_ContactScheduleID, T1.Creditors_AllowCDD, T1.Creditors_GCSPayeeID, T1.Creditors_GCSPayeeAddressID, T1.Creditors_GCSPayeeContactID, T1.Creditors_GCSPayeeBankID, T1.Creditors_AllowCDN, T1.Creditors_ReturnCDR, T1.Creditors_ReturnCDT, T1.Creditors_ReturnCDA, T1.Creditors_ReturnCDV, T1.Creditors_ReturnCDC, T1.Creditors_ReturnCDM, T1.Creditors_AllowCDF, T1.Creditors_DefaultDNDUntilProposalAccepted, T1.Creditors_AllowCallToAction, T1.Creditors_AllowHardship, T1.Creditors_CollectionPlanID, T1.Creditors_InternalFeePercentage, T1.Creditors_ExternalFeePercentage, T1.Creditors_ExternalFeePercentageGuaranteed, T1.Creditors_MaximumFeeAmount, T1.Creditors_AllowReversalOfFeesOnRefunds, T1.Creditors_HideBalance, T1.Creditors_CreditorStatus, T1.Creditors_AddedByWebUserName, T1.Creditors_PortfolioType, T1.Creditors_ReportToCreditBureaus, T1.Creditors_DefaultDebtType, T1.Creditors_SalesForceID, T1.Creditors_ProposalRequiresCDN, T1.Creditors_GCSDirectPayeeID, T1.[Creditors.BankAccountNumber_Masked], T1.Creditors_BACSReferenceNumber, T1.Creditors_BACSSortCode, T1.[Creditors.ResubmissionBillerID_Override], T1.Creditors_UserDefined4, T1.Creditors_UserDefined5, T1.Creditors_UserDefined6, T1.Creditors_UserDefined7, T1.Creditors_HoldProposalsDaysFromQueuing, T1.Creditors_HoldProposalsBasedOnIncomeVariance, T1.[Creditors.M2_CardHolderID_BIN7], T1.[Creditors.M2_BankInfo_LinkedTo_BIN7], T1.[Creditors.M2_BankInfo_NeedsUpdate], T1.[Creditors.M2_CardHolderID_BIN2], T1.Creditors_SQLFormulaID, T1.Creditors_ReducedAPRSQLFormulaID, T1.Creditors_UseReducedAPRFormula, T1.Creditors_UseDefMonthlyPaymentFormula, T1.Creditors_DefaultLoanTerm, T1.[Creditors.M2_BIN2_Counter_CALCULATED], T1.[Creditors.CreditorRequirement_CALCULATED], T1.Creditors_PhoneCommunicationDoNotUse, T1.Creditors_AltPhoneCommunicationDoNotUse, T1.Creditors_PhoneCommunicationPreferred, T1.Creditors_AltPhoneCommunicationPreferred, T1.Creditors_PPhoneCommunicationDoNotUse, T1.Creditors_BPhoneCommunicationDoNotUse, T1.Creditors_PPhoneCommunicationPreferred, T1.Creditors_BPhoneCommunicationPreferred, T1.Creditors_Product, T1.Creditors_DefBillPayBankAccountID, T1.Creditors_BillPayBillerID, T1.Creditors_YodleeDefaultContentServiceID, T1.Creditors_PopularBillPayPayee, T1.[Creditors.IPayout_CheckProfileID], T1.[Creditors.IPayout_WireProfileID], T1.[Creditors.IPayout_PhonePayProfileID], T1.[Creditors.PaymentProcessor_NeedsUpdate], T1.[Creditors.IPayout_UserName], T1.Creditors_SkipFairShareForNonAcceptedAccounts, T1.[Creditors.EIN_SSN], T1.[Creditors.EIN_SSN_Masked], T1.Creditors_IDType)
    FROM (
        SELECT 
            T.CreditorID AS Creditors_CreditorID, 
            T.Name AS Creditors_Name, 
            T.Address1 AS Creditors_Address1, 
            T.Address2 AS Creditors_Address2, 
            T.City AS Creditors_City, 
            T.State AS Creditors_State, 
            T.ZIP AS Creditors_ZIP, 
            T.Telephone AS Creditors_Telephone, 
            T.AltTelephone AS Creditors_AltTelephone, 
            T.Fax AS Creditors_Fax, 
            T.ContactPerson AS Creditors_ContactPerson, 
            T.FairShare AS Creditors_FairShare, 
            T.BillingPeriod AS Creditors_BillingPeriod, 
            T.LastInvoicePrinted AS Creditors_LastInvoicePrinted, 
            T.Deduct AS Creditors_Deduct, 
            T.Bill AS Creditors_Bill, 
            T.Terms AS Creditors_Terms, 
            T.GuideLines AS Creditors_GuideLines, 
            T.ProposalPct AS Creditors_ProposalPct, 
            T.PName AS Creditors_PName, 
            T.PAddress1 AS Creditors_PAddress1, 
            T.PAddress2 AS Creditors_PAddress2, 
            T.PCity AS Creditors_PCity, 
            T.PState AS Creditors_PState, 
            T.PZIP AS Creditors_PZIP, 
            T.PAttn AS Creditors_PAttn, 
            T.PPhone AS Creditors_PPhone, 
            T.PFax AS Creditors_PFax, 
            T.BName AS Creditors_BName, 
            T.BAddress1 AS Creditors_BAddress1, 
            T.BAddress2 AS Creditors_BAddress2, 
            T.BCity AS Creditors_BCity, 
            T.BState AS Creditors_BState, 
            T.BZIP AS Creditors_BZIP, 
            T.BAttn AS Creditors_BAttn, 
            T.BPhone AS Creditors_BPhone, 
            T.BFax AS Creditors_BFax, 
            T.Notes AS Creditors_Notes, 
            T.Consolidate AS Creditors_Consolidate, 
            T.Alert AS Creditors_Alert, 
            T.APR AS Creditors_APR, 
            T.Codes AS Creditors_Codes, 
            T.ShowOnLetters AS Creditors_ShowOnLetters, 
            T.EditableUntil AS Creditors_EditableUntil, 
            T.CreditorType AS Creditors_CreditorType, 
            T.Commissionable AS Creditors_Commissionable, 
            T.Active AS Creditors_Active, 
            T.ClientIDcopy AS Creditors_ClientIDcopy, 
            T.MinimumPercent AS Creditors_MinimumPercent, 
            T.PercentOf AS Creditors_PercentOf, 
            T.MinimumAmount AS Creditors_MinimumAmount, 
            T.NewCreditorID AS Creditors_NewCreditorID, 
            T.BillerID AS Creditors_BillerID, 
            T.DefBankAccountID AS Creditors_DefBankAccountID, 
            T.BillerType AS Creditors_BillerType, 
            T.ReversalBillerID AS Creditors_ReversalBillerID, 
            T.ReversalAccountNumber AS Creditors_ReversalAccountNumber, 
            T.TempCreditor AS Creditors_TempCreditor, 
            T.OperatorStamp AS Creditors_OperatorStamp, 
            T.DateTimeStamp AS Creditors_DateTimeStamp, 
            T.upsize_ts AS [Creditors.upsize_ts], 
            T.Generic AS Creditors_Generic, 
            T.ReduceInterest AS Creditors_ReduceInterest, 
            T.EliminateInterest AS Creditors_EliminateInterest, 
            T.ReAge AS Creditors_ReAge, 
            T.ReAgeAfter AS Creditors_ReAgeAfter, 
            T.DropLateFees AS Creditors_DropLateFees, 
            T.FirstInvoiceDate AS Creditors_FirstInvoiceDate, 
            T.APROutsideCC AS Creditors_APROutsideCC, 
            T.UseForEnrollment AS Creditors_UseForEnrollment, 
            T.PContact AS Creditors_PContact, 
            T.BContact AS Creditors_BContact, 
            T.ValidateMasks AS Creditors_ValidateMasks, 
            T.ReducePoints AS Creditors_ReducePoints, 
            T.UseRPPSProposals AS Creditors_UseRPPSProposals, 
            T.RPPSBillerIDOverride AS Creditors_RPPSBillerIDOverride, 
            T.PerCheck AS Creditors_PerCheck, 
            T.PerBill AS Creditors_PerBill, 
            T.Guaranteed AS Creditors_Guaranteed, 
            T.Profile AS Creditors_Profile, 
            T.UserDefined1 AS Creditors_UserDefined1, 
            T.UserDefined2 AS Creditors_UserDefined2, 
            T.FullBudgetDisclosure AS Creditors_FullBudgetDisclosure, 
            T.FullBudgetCreditors AS Creditors_FullBudgetCreditors, 
            T.CreditorAdded AS Creditors_CreditorAdded, 
            T.UserDefinedCode AS Creditors_UserDefinedCode, 
            T.OverrideMinimumInvoiceAmount AS Creditors_OverrideMinimumInvoiceAmount, 
            T.UseForInternet AS Creditors_UseForInternet, 
            T.BPName AS Creditors_BPName, 
            T.BPAddress1 AS Creditors_BPAddress1, 
            T.BPAddress2 AS Creditors_BPAddress2, 
            T.BPCity AS Creditors_BPCity, 
            T.BPState AS Creditors_BPState, 
            T.BPZip AS Creditors_BPZip, 
            T.BPAttn AS Creditors_BPAttn, 
            T.BPPhone AS Creditors_BPPhone, 
            T.BPFax AS Creditors_BPFax, 
            T.DateEntered AS Creditors_DateEntered, 
            T.SkipBulkProposals AS Creditors_SkipBulkProposals, 
            T.SkipImportMask AS Creditors_SkipImportMask, 
            T.Password AS Creditors_Password, 
            T.QBID AS Creditors_QBID, 
            T.EditSequence AS Creditors_EditSequence, 
            T.PADMinimum AS Creditors_PADMinimum, 
            T.Email AS Creditors_Email, 
            T.DefaultSettlementPercentage AS Creditors_DefaultSettlementPercentage, 
            T.ContributeInFS AS Creditors_ContributeInFS, 
            T.Company AS Creditors_Company, 
            T.MaximumFairShareAmount AS Creditors_MaximumFairShareAmount, 
            T.RequireStubWithInvoice AS Creditors_RequireStubWithInvoice, 
            T.BankRoutingNumber AS Creditors_BankRoutingNumber, 
            T.BankAccountNumber AS Creditors_BankAccountNumber, 
            T.BankName AS Creditors_BankName, 
            T.BankCity AS Creditors_BankCity, 
            T.BankState AS Creditors_BankState, 
            T.BankZipCode AS Creditors_BankZipCode, 
            T.OverridePayOffBehavior AS Creditors_OverridePayOffBehavior, 
            T.DefaultCreditorPaymentType AS Creditors_DefaultCreditorPaymentType, 
            T.AllowPreBankruptcy AS Creditors_AllowPreBankruptcy, 
            T.AllowLessThanFull AS Creditors_AllowLessThanFull, 
            T.UsePhonePay AS Creditors_UsePhonePay, 
            T.TelephoneStripped AS Creditors_TelephoneStripped, 
            T.AltTelephoneStripped AS Creditors_AltTelephoneStripped, 
            T.FaxStripped AS Creditors_FaxStripped, 
            T.BPhoneStripped AS Creditors_BPhoneStripped, 
            T.PPhoneStripped AS Creditors_PPhoneStripped, 
            T.BFaxStripped AS Creditors_BFaxStripped, 
            T.PFaxStripped AS Creditors_PFaxStripped, 
            T.BPPhoneStripped AS Creditors_BPPhoneStripped, 
            T.BPFaxStripped AS Creditors_BPFaxStripped, 
            T.BankAddress AS Creditors_BankAddress, 
            T.AddedBy AS Creditors_AddedBy, 
            T.LoggedUserID AS Creditors_LoggedUserID, 
            T.LoggedOn AS Creditors_LoggedOn, 
            T.DropLateFeesAfter AS Creditors_DropLateFeesAfter, 
            T.DropOverlimitFees AS Creditors_DropOverlimitFees, 
            T.DropOverlimitFeesAfter AS Creditors_DropOverlimitFeesAfter, 
            T.CreditorGroupCreditorID AS Creditors_CreditorGroupCreditorID, 
            T.OtherFeesNotes AS Creditors_OtherFeesNotes, 
            T.ReageFrequency AS Creditors_ReageFrequency, 
            T.AllowRebates AS Creditors_AllowRebates, 
            T.RebatesNotes AS Creditors_RebatesNotes, 
            T.DropPolicyNotes AS Creditors_DropPolicyNotes, 
            T.InterestRangeNotes AS Creditors_InterestRangeNotes, 
            T.MaxMonthsToPayout AS Creditors_MaxMonthsToPayout, 
            T.CreditorGroupIsParent AS Creditors_CreditorGroupIsParent, 
            T.AutoResendProposals AS Creditors_AutoResendProposals, 
            T.DefaultHoldProposals AS Creditors_DefaultHoldProposals, 
            T.DefaultHoldProposalUntilFirstReceipt AS Creditors_DefaultHoldProposalUntilFirstReceipt, 
            T.RebatesPct AS Creditors_RebatesPct, 
            T.EmailStatus AS Creditors_EmailStatus, 
            T.CompoundFrequency AS Creditors_CompoundFrequency, 
            T.SendProposalsByFax AS Creditors_SendProposalsByFax, 
            T.AllowFeeOverCalculatedDefault AS Creditors_AllowFeeOverCalculatedDefault, 
            T.NotesPlainTextReadOnly AS Creditors_NotesPlainTextReadOnly, 
            T.FileID AS Creditors_FileID, 
            T.HoldProposalsDaysBeforeNextDisbursement AS Creditors_HoldProposalsDaysBeforeNextDisbursement, 
            T.EnableMod10Validation AS Creditors_EnableMod10Validation, 
            T.MinimumPercentBeforeDMP AS Creditors_MinimumPercentBeforeDMP, 
            T.PercentOfBeforeDMP AS Creditors_PercentOfBeforeDMP, 
            T.MinimumAmountBeforeDMP AS Creditors_MinimumAmountBeforeDMP, 
            T.UserDefined3 AS Creditors_UserDefined3, 
            T.AllowCDV AS Creditors_AllowCDV, 
            T.ContactScheduleID AS Creditors_ContactScheduleID, 
            T.AllowCDD AS Creditors_AllowCDD, 
            T.GCSPayeeID AS Creditors_GCSPayeeID, 
            T.GCSPayeeAddressID AS Creditors_GCSPayeeAddressID, 
            T.GCSPayeeContactID AS Creditors_GCSPayeeContactID, 
            T.GCSPayeeBankID AS Creditors_GCSPayeeBankID, 
            T.AllowCDN AS Creditors_AllowCDN, 
            T.ReturnCDR AS Creditors_ReturnCDR, 
            T.ReturnCDT AS Creditors_ReturnCDT, 
            T.ReturnCDA AS Creditors_ReturnCDA, 
            T.ReturnCDV AS Creditors_ReturnCDV, 
            T.ReturnCDC AS Creditors_ReturnCDC, 
            T.ReturnCDM AS Creditors_ReturnCDM, 
            T.AllowCDF AS Creditors_AllowCDF, 
            T.DefaultDNDUntilProposalAccepted AS Creditors_DefaultDNDUntilProposalAccepted, 
            T.AllowCallToAction AS Creditors_AllowCallToAction, 
            T.AllowHardship AS Creditors_AllowHardship, 
            T.CollectionPlanID AS Creditors_CollectionPlanID, 
            T.InternalFeePercentage AS Creditors_InternalFeePercentage, 
            T.ExternalFeePercentage AS Creditors_ExternalFeePercentage, 
            T.ExternalFeePercentageGuaranteed AS Creditors_ExternalFeePercentageGuaranteed, 
            T.MaximumFeeAmount AS Creditors_MaximumFeeAmount, 
            T.AllowReversalOfFeesOnRefunds AS Creditors_AllowReversalOfFeesOnRefunds, 
            T.HideBalance AS Creditors_HideBalance, 
            T.CreditorStatus AS Creditors_CreditorStatus, 
            T.AddedByWebUserName AS Creditors_AddedByWebUserName, 
            T.PortfolioType AS Creditors_PortfolioType, 
            T.ReportToCreditBureaus AS Creditors_ReportToCreditBureaus, 
            T.DefaultDebtType AS Creditors_DefaultDebtType, 
            T.SalesForceID AS Creditors_SalesForceID, 
            T.ProposalRequiresCDN AS Creditors_ProposalRequiresCDN, 
            T.GCSDirectPayeeID AS Creditors_GCSDirectPayeeID, 
            T.BankAccountNumber_Masked AS [Creditors.BankAccountNumber_Masked], 
            T.BACSReferenceNumber AS Creditors_BACSReferenceNumber, 
            T.BACSSortCode AS Creditors_BACSSortCode, 
            T.ResubmissionBillerID_Override AS [Creditors.ResubmissionBillerID_Override], 
            T.UserDefined4 AS Creditors_UserDefined4, 
            T.UserDefined5 AS Creditors_UserDefined5, 
            T.UserDefined6 AS Creditors_UserDefined6, 
            T.UserDefined7 AS Creditors_UserDefined7, 
            T.HoldProposalsDaysFromQueuing AS Creditors_HoldProposalsDaysFromQueuing, 
            T.HoldProposalsBasedOnIncomeVariance AS Creditors_HoldProposalsBasedOnIncomeVariance, 
            T.M2_CardHolderID_BIN7 AS [Creditors.M2_CardHolderID_BIN7], 
            T.M2_BankInfo_LinkedTo_BIN7 AS [Creditors.M2_BankInfo_LinkedTo_BIN7], 
            T.M2_BankInfo_NeedsUpdate AS [Creditors.M2_BankInfo_NeedsUpdate], 
            T.M2_CardHolderID_BIN2 AS [Creditors.M2_CardHolderID_BIN2], 
            T.SQLFormulaID AS Creditors_SQLFormulaID, 
            T.ReducedAPRSQLFormulaID AS Creditors_ReducedAPRSQLFormulaID, 
            T.UseReducedAPRFormula AS Creditors_UseReducedAPRFormula, 
            T.UseDefMonthlyPaymentFormula AS Creditors_UseDefMonthlyPaymentFormula, 
            T.DefaultLoanTerm AS Creditors_DefaultLoanTerm, 
            T.M2_BIN2_Counter_CALCULATED AS [Creditors.M2_BIN2_Counter_CALCULATED], 
            T.CreditorRequirement_CALCULATED AS [Creditors.CreditorRequirement_CALCULATED], 
            T.PhoneCommunicationDoNotUse AS Creditors_PhoneCommunicationDoNotUse, 
            T.AltPhoneCommunicationDoNotUse AS Creditors_AltPhoneCommunicationDoNotUse, 
            T.PhoneCommunicationPreferred AS Creditors_PhoneCommunicationPreferred, 
            T.AltPhoneCommunicationPreferred AS Creditors_AltPhoneCommunicationPreferred, 
            T.PPhoneCommunicationDoNotUse AS Creditors_PPhoneCommunicationDoNotUse, 
            T.BPhoneCommunicationDoNotUse AS Creditors_BPhoneCommunicationDoNotUse, 
            T.PPhoneCommunicationPreferred AS Creditors_PPhoneCommunicationPreferred, 
            T.BPhoneCommunicationPreferred AS Creditors_BPhoneCommunicationPreferred, 
            T.Product AS Creditors_Product, 
            T.DefBillPayBankAccountID AS Creditors_DefBillPayBankAccountID, 
            T.BillPayBillerID AS Creditors_BillPayBillerID, 
            T.YodleeDefaultContentServiceID AS Creditors_YodleeDefaultContentServiceID, 
            T.PopularBillPayPayee AS Creditors_PopularBillPayPayee, 
            T.IPayout_CheckProfileID AS [Creditors.IPayout_CheckProfileID], 
            T.IPayout_WireProfileID AS [Creditors.IPayout_WireProfileID], 
            T.IPayout_PhonePayProfileID AS [Creditors.IPayout_PhonePayProfileID], 
            T.PaymentProcessor_NeedsUpdate AS [Creditors.PaymentProcessor_NeedsUpdate], 
            T.IPayout_UserName AS [Creditors.IPayout_UserName], 
            T.SkipFairShareForNonAcceptedAccounts AS Creditors_SkipFairShareForNonAcceptedAccounts, 
            T.EIN_SSN AS [Creditors.EIN_SSN], 
            T.EIN_SSN_Masked AS [Creditors.EIN_SSN_Masked], 
            T.IDType AS Creditors_IDType, 
            True AS _from0
        FROM Entities.Creditors AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.Locations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Locations
        [Creditsoft.Store.Locations](T1.Locations_LocationID, T1.Locations_LocationName, T1.Locations_BackColor, T1.Locations_ForeColor, T1.Locations_LocationAddress1, T1.Locations_LocationAddress2, T1.Locations_LocationCity, T1.Locations_LocationState, T1.Locations_LocationZip, T1.Locations_LocationPhone, T1.Locations_LocationFax, T1.Locations_Division, T1.[Locations.upsize_ts], T1.Locations_DialingRuleSetID, T1.Locations_UserDefinedCode, T1.Locations_MarketingCompanyName, T1.Locations_Website, T1.Locations_APIAffiliateID, T1.Locations_APIFeesGroup, T1.Locations_Product, T1.Locations_Notes)
    FROM (
        SELECT 
            T.LocationID AS Locations_LocationID, 
            T.LocationName AS Locations_LocationName, 
            T.BackColor AS Locations_BackColor, 
            T.ForeColor AS Locations_ForeColor, 
            T.LocationAddress1 AS Locations_LocationAddress1, 
            T.LocationAddress2 AS Locations_LocationAddress2, 
            T.LocationCity AS Locations_LocationCity, 
            T.LocationState AS Locations_LocationState, 
            T.LocationZip AS Locations_LocationZip, 
            T.LocationPhone AS Locations_LocationPhone, 
            T.LocationFax AS Locations_LocationFax, 
            T.Division AS Locations_Division, 
            T.upsize_ts AS [Locations.upsize_ts], 
            T.DialingRuleSetID AS Locations_DialingRuleSetID, 
            T.UserDefinedCode AS Locations_UserDefinedCode, 
            T.MarketingCompanyName AS Locations_MarketingCompanyName, 
            T.Website AS Locations_Website, 
            T.APIAffiliateID AS Locations_APIAffiliateID, 
            T.APIFeesGroup AS Locations_APIFeesGroup, 
            T.Product AS Locations_Product, 
            T.Notes AS Locations_Notes, 
            True AS _from0
        FROM Entities.Locations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.Payments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Payments
        [Creditsoft.Store.Payments](T1.Payments_PaymentID, T1.Payments_CheckID, T1.Payments_BankAccountID, T1.Payments_CreditorID, T1.Payments_ClientID, T1.Payments_NCI, T1.Payments_Amount, T1.Payments_Description, T1.Payments_Created, T1.Payments_AccountNumber, T1.Payments_Type, T1.Payments_PaymentIDCopy, T1.Payments_Refunded, T1.Payments_Resubmitted, T1.Payments_BatchID, T1.Payments_ClientCredID, T1.Payments_RefundDetailID, T1.Payments_ProgramScheduleDebtorID, T1.Payments_CommissionBatchID, T1.[Payments.upsize_ts], T1.Payments_FSPaymentID, T1.Payments_TraceNumber, T1.Payments_SettlementScheduleID, T1.Payments_ReversedCommissionBatchID, T1.Payments_PaymentCheckRunID, T1.Payments_FSClientCredID, T1.Payments_NonCommissionable, T1.Payments_AgencyID, T1.[Payments.AccountNumber_Masked], T1.Payments_GCSPaymentID, T1.Payments_GCSDebitID, T1.Payments_PrincipalAmount, T1.Payments_InterestAmount, T1.Payments_GeneratedByCollectionPlan, T1.[Payments.M2_TransactionID_Step1], T1.[Payments.M2_TransactionID_Step2], T1.[Payments.M2_TransComplete], T1.Payments_ClientState, T1.[Payments.PaymentProcessor_TransactionRefID], T1.Payments_TransferBalanceBatchDetailID, T1.Payments_Counselor, T1.[Payments.PaymentProcessor_CreditorProfileID], T1.[Payments.PaymentProcessor_CreditorProfileType], T1.Payments_CreditorGroupCreditorID)
    FROM (
        SELECT 
            T.PaymentID AS Payments_PaymentID, 
            T.CheckID AS Payments_CheckID, 
            T.BankAccountID AS Payments_BankAccountID, 
            T.CreditorID AS Payments_CreditorID, 
            T.ClientID AS Payments_ClientID, 
            T.NCI AS Payments_NCI, 
            T.Amount AS Payments_Amount, 
            T.Description AS Payments_Description, 
            T.Created AS Payments_Created, 
            T.AccountNumber AS Payments_AccountNumber, 
            T.Type AS Payments_Type, 
            T.PaymentIDCopy AS Payments_PaymentIDCopy, 
            T.Refunded AS Payments_Refunded, 
            T.Resubmitted AS Payments_Resubmitted, 
            T.BatchID AS Payments_BatchID, 
            T.ClientCredID AS Payments_ClientCredID, 
            T.RefundDetailID AS Payments_RefundDetailID, 
            T.ProgramScheduleDebtorID AS Payments_ProgramScheduleDebtorID, 
            T.CommissionBatchID AS Payments_CommissionBatchID, 
            T.upsize_ts AS [Payments.upsize_ts], 
            T.FSPaymentID AS Payments_FSPaymentID, 
            T.TraceNumber AS Payments_TraceNumber, 
            T.SettlementScheduleID AS Payments_SettlementScheduleID, 
            T.ReversedCommissionBatchID AS Payments_ReversedCommissionBatchID, 
            T.PaymentCheckRunID AS Payments_PaymentCheckRunID, 
            T.FSClientCredID AS Payments_FSClientCredID, 
            T.NonCommissionable AS Payments_NonCommissionable, 
            T.AgencyID AS Payments_AgencyID, 
            T.AccountNumber_Masked AS [Payments.AccountNumber_Masked], 
            T.GCSPaymentID AS Payments_GCSPaymentID, 
            T.GCSDebitID AS Payments_GCSDebitID, 
            T.PrincipalAmount AS Payments_PrincipalAmount, 
            T.InterestAmount AS Payments_InterestAmount, 
            T.GeneratedByCollectionPlan AS Payments_GeneratedByCollectionPlan, 
            T.M2_TransactionID_Step1 AS [Payments.M2_TransactionID_Step1], 
            T.M2_TransactionID_Step2 AS [Payments.M2_TransactionID_Step2], 
            T.M2_TransComplete AS [Payments.M2_TransComplete], 
            T.ClientState AS Payments_ClientState, 
            T.PaymentProcessor_TransactionRefID AS [Payments.PaymentProcessor_TransactionRefID], 
            T.TransferBalanceBatchDetailID AS Payments_TransferBalanceBatchDetailID, 
            T.Counselor AS Payments_Counselor, 
            T.PaymentProcessor_CreditorProfileID AS [Payments.PaymentProcessor_CreditorProfileID], 
            T.PaymentProcessor_CreditorProfileType AS [Payments.PaymentProcessor_CreditorProfileType], 
            T.CreditorGroupCreditorID AS Payments_CreditorGroupCreditorID, 
            True AS _from0
        FROM Entities.Payments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.Receipts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Receipts
        [Creditsoft.Store.Receipts](T1.Receipts_ReceiptID, T1.Receipts_ClientID, T1.Receipts_DateReceived, T1.Receipts_ReceiptAmount, T1.Receipts_BankAccountID, T1.Receipts_PaymentType, T1.Receipts_Deposited, T1.Receipts_Marked, T1.Receipts_BankID, T1.Receipts_NSF, T1.Receipts_NSFDate, T1.Receipts_FileID, T1.Receipts_Memo, T1.Receipts_OperatorStamp, T1.Receipts_DateTimeStamp, T1.Receipts_ACHBatchID, T1.Receipts_NSFReason, T1.Receipts_RefundDetailID, T1.Receipts_DateEntered, T1.Receipts_TransferedToClientID, T1.[Receipts.upsize_ts], T1.Receipts_ACHBankAccountID, T1.Receipts_StatementID, T1.Receipts_ReceiptBatchID, T1.Receipts_CommissionBatchID, T1.Receipts_FileLogDetailsID, T1.Receipts_TransferredFromClientID, T1.Receipts_ACHBatchDetailID, T1.Receipts_OriginatingFromNSFReceiptID, T1.Receipts_NSFReversalBankID, T1.Receipts_NSFFileID, T1.Receipts_CreatedUserID, T1.Receipts_OriginatingFromVoidCheckID, T1.Receipts_OriginatingFromVoidBankAccountID, T1.Receipts_NSFRecovered, T1.Receipts_AgencyID, T1.Receipts_CreditorID, T1.Receipts_CoAppID, T1.Receipts_AllowZeroAmountReceipt, T1.Receipts_TempCreditAmount, T1.Receipts_TempNetGross, T1.Receipts_SalesOrderID, T1.Receipts_OnlineTransactionID, T1.[Receipts.M2_TransferFromAgency], T1.[Receipts.M2_UniqueID], T1.[Receipts.M2_TransactionID], T1.[Receipts.PaymentProcessor_TransferFromAgency], T1.[Receipts.PaymentProcessor_TransactionRefID], T1.Receipts_ReferenceReceiptNumber, T1.Receipts_ReferenceDepositNumber, T1.Receipts_IsLateReturn)
    FROM (
        SELECT 
            T.ReceiptID AS Receipts_ReceiptID, 
            T.ClientID AS Receipts_ClientID, 
            T.DateReceived AS Receipts_DateReceived, 
            T.ReceiptAmount AS Receipts_ReceiptAmount, 
            T.BankAccountID AS Receipts_BankAccountID, 
            T.PaymentType AS Receipts_PaymentType, 
            T.Deposited AS Receipts_Deposited, 
            T.Marked AS Receipts_Marked, 
            T.BankID AS Receipts_BankID, 
            T.NSF AS Receipts_NSF, 
            T.NSFDate AS Receipts_NSFDate, 
            T.FileID AS Receipts_FileID, 
            T.Memo AS Receipts_Memo, 
            T.OperatorStamp AS Receipts_OperatorStamp, 
            T.DateTimeStamp AS Receipts_DateTimeStamp, 
            T.ACHBatchID AS Receipts_ACHBatchID, 
            T.NSFReason AS Receipts_NSFReason, 
            T.RefundDetailID AS Receipts_RefundDetailID, 
            T.DateEntered AS Receipts_DateEntered, 
            T.TransferedToClientID AS Receipts_TransferedToClientID, 
            T.upsize_ts AS [Receipts.upsize_ts], 
            T.ACHBankAccountID AS Receipts_ACHBankAccountID, 
            T.StatementID AS Receipts_StatementID, 
            T.ReceiptBatchID AS Receipts_ReceiptBatchID, 
            T.CommissionBatchID AS Receipts_CommissionBatchID, 
            T.FileLogDetailsID AS Receipts_FileLogDetailsID, 
            T.TransferredFromClientID AS Receipts_TransferredFromClientID, 
            T.ACHBatchDetailID AS Receipts_ACHBatchDetailID, 
            T.OriginatingFromNSFReceiptID AS Receipts_OriginatingFromNSFReceiptID, 
            T.NSFReversalBankID AS Receipts_NSFReversalBankID, 
            T.NSFFileID AS Receipts_NSFFileID, 
            T.CreatedUserID AS Receipts_CreatedUserID, 
            T.OriginatingFromVoidCheckID AS Receipts_OriginatingFromVoidCheckID, 
            T.OriginatingFromVoidBankAccountID AS Receipts_OriginatingFromVoidBankAccountID, 
            T.NSFRecovered AS Receipts_NSFRecovered, 
            T.AgencyID AS Receipts_AgencyID, 
            T.CreditorID AS Receipts_CreditorID, 
            T.CoAppID AS Receipts_CoAppID, 
            T.AllowZeroAmountReceipt AS Receipts_AllowZeroAmountReceipt, 
            T.TempCreditAmount AS Receipts_TempCreditAmount, 
            T.TempNetGross AS Receipts_TempNetGross, 
            T.SalesOrderID AS Receipts_SalesOrderID, 
            T.OnlineTransactionID AS Receipts_OnlineTransactionID, 
            T.M2_TransferFromAgency AS [Receipts.M2_TransferFromAgency], 
            T.M2_UniqueID AS [Receipts.M2_UniqueID], 
            T.M2_TransactionID AS [Receipts.M2_TransactionID], 
            T.PaymentProcessor_TransferFromAgency AS [Receipts.PaymentProcessor_TransferFromAgency], 
            T.PaymentProcessor_TransactionRefID AS [Receipts.PaymentProcessor_TransactionRefID], 
            T.ReferenceReceiptNumber AS Receipts_ReferenceReceiptNumber, 
            T.ReferenceDepositNumber AS Receipts_ReferenceDepositNumber, 
            T.IsLateReturn AS Receipts_IsLateReturn, 
            True AS _from0
        FROM Entities.Receipts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.ACHBankAccounts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ACHBankAccounts
        [Creditsoft.ACHBankAccounts](T1.ACHBankAccounts_ACHBankAccountID, T1.ACHBankAccounts_ClientID, T1.ACHBankAccounts_BankName, T1.ACHBankAccounts_ABA, T1.ACHBankAccounts_AccType, T1.ACHBankAccounts_BankAccountNumber, T1.ACHBankAccounts_ACHNote, T1.ACHBankAccounts_AccountFirstName, T1.ACHBankAccounts_AccountLastName, T1.ACHBankAccounts_DefaultBankAccount, T1.ACHBankAccounts_BankAccountName, T1.[ACHBankAccounts.upsize_ts], T1.ACHBankAccounts_Status, T1.ACHBankAccounts_StatusChangeDate, T1.ACHBankAccounts_StatusSentDate, T1.ACHBankAccounts_ExportDate, T1.ACHBankAccounts_LinkToProcessingAccount, T1.ACHBankAccounts_BankAddress1, T1.ACHBankAccounts_BankAddress2, T1.ACHBankAccounts_PrenoteSent, T1.ACHBankAccounts_DateLastUpdated, T1.ACHBankAccounts_LeadACHBankAccountID, T1.ACHBankAccounts_BalanceAmount, T1.ACHBankAccounts_BalanceDate, T1.ACHBankAccounts_PIN, T1.ACHBankAccounts_FundingAccountType, T1.ACHBankAccounts_StartCheck, T1.ACHBankAccounts_UsePhonePay, T1.ACHBankAccounts_DateEntered, T1.ACHBankAccounts_EnteredBy, T1.ACHBankAccounts_OperatorStamp, T1.ACHBankAccounts_DateTimeStamp, T1.ACHBankAccounts_ProcessingPolicyGroupID, T1.ACHBankAccounts_GCSExported, T1.ACHBankAccounts_EnteredByWebUserName, T1.ACHBankAccounts_AccountCompanyName, T1.ACHBankAccounts_IsEmergencyFund, T1.ACHBankAccounts_LinkedToMasterACHBankAccountID, T1.[ACHBankAccounts.BankAccountNumber_Masked], T1.[ACHBankAccounts.UserID_Secret], T1.[ACHBankAccounts.Password_Secret], T1.ACHBankAccounts_ACHBankAccountBalance, T1.ACHBankAccounts_ACHBankAccountBalanceVerifiedOn, T1.ACHBankAccounts_ACHBankAccountBalanceVerifiedBy, T1.ACHBankAccounts_FinancialInstitutionID, T1.[ACHBankAccounts.M2_CardHolderID], T1.[ACHBankAccounts.M2_AvailableBalance], T1.[ACHBankAccounts.M2_Status], T1.[ACHBankAccounts.M2_BankInfo_NeedsUpdate], T1.[ACHBankAccounts.M2_BIN2_Counter_CALCULATED], T1.[ACHBankAccounts.M2_BIN4_Counter_CALCULATED], T1.[ACHBankAccounts.PaymentProcessor_TransactionRefID], T1.[ACHBankAccounts.PaymentProcessor_NeedsUpdate], T1.ACHBankAccounts_YodleeItemAccountID)
    FROM (
        SELECT 
            T.ACHBankAccountID AS ACHBankAccounts_ACHBankAccountID, 
            T.ClientID AS ACHBankAccounts_ClientID, 
            T.BankName AS ACHBankAccounts_BankName, 
            T.ABA AS ACHBankAccounts_ABA, 
            T.AccType AS ACHBankAccounts_AccType, 
            T.BankAccountNumber AS ACHBankAccounts_BankAccountNumber, 
            T.ACHNote AS ACHBankAccounts_ACHNote, 
            T.AccountFirstName AS ACHBankAccounts_AccountFirstName, 
            T.AccountLastName AS ACHBankAccounts_AccountLastName, 
            T.DefaultBankAccount AS ACHBankAccounts_DefaultBankAccount, 
            T.BankAccountName AS ACHBankAccounts_BankAccountName, 
            T.upsize_ts AS [ACHBankAccounts.upsize_ts], 
            T.Status AS ACHBankAccounts_Status, 
            T.StatusChangeDate AS ACHBankAccounts_StatusChangeDate, 
            T.StatusSentDate AS ACHBankAccounts_StatusSentDate, 
            T.ExportDate AS ACHBankAccounts_ExportDate, 
            T.LinkToProcessingAccount AS ACHBankAccounts_LinkToProcessingAccount, 
            T.BankAddress1 AS ACHBankAccounts_BankAddress1, 
            T.BankAddress2 AS ACHBankAccounts_BankAddress2, 
            T.PrenoteSent AS ACHBankAccounts_PrenoteSent, 
            T.DateLastUpdated AS ACHBankAccounts_DateLastUpdated, 
            T.LeadACHBankAccountID AS ACHBankAccounts_LeadACHBankAccountID, 
            T.BalanceAmount AS ACHBankAccounts_BalanceAmount, 
            T.BalanceDate AS ACHBankAccounts_BalanceDate, 
            T.PIN AS ACHBankAccounts_PIN, 
            T.FundingAccountType AS ACHBankAccounts_FundingAccountType, 
            T.StartCheck AS ACHBankAccounts_StartCheck, 
            T.UsePhonePay AS ACHBankAccounts_UsePhonePay, 
            T.DateEntered AS ACHBankAccounts_DateEntered, 
            T.EnteredBy AS ACHBankAccounts_EnteredBy, 
            T.OperatorStamp AS ACHBankAccounts_OperatorStamp, 
            T.DateTimeStamp AS ACHBankAccounts_DateTimeStamp, 
            T.ProcessingPolicyGroupID AS ACHBankAccounts_ProcessingPolicyGroupID, 
            T.GCSExported AS ACHBankAccounts_GCSExported, 
            T.EnteredByWebUserName AS ACHBankAccounts_EnteredByWebUserName, 
            T.AccountCompanyName AS ACHBankAccounts_AccountCompanyName, 
            T.IsEmergencyFund AS ACHBankAccounts_IsEmergencyFund, 
            T.LinkedToMasterACHBankAccountID AS ACHBankAccounts_LinkedToMasterACHBankAccountID, 
            T.BankAccountNumber_Masked AS [ACHBankAccounts.BankAccountNumber_Masked], 
            T.UserID_Secret AS [ACHBankAccounts.UserID_Secret], 
            T.Password_Secret AS [ACHBankAccounts.Password_Secret], 
            T.ACHBankAccountBalance AS ACHBankAccounts_ACHBankAccountBalance, 
            T.ACHBankAccountBalanceVerifiedOn AS ACHBankAccounts_ACHBankAccountBalanceVerifiedOn, 
            T.ACHBankAccountBalanceVerifiedBy AS ACHBankAccounts_ACHBankAccountBalanceVerifiedBy, 
            T.FinancialInstitutionID AS ACHBankAccounts_FinancialInstitutionID, 
            T.M2_CardHolderID AS [ACHBankAccounts.M2_CardHolderID], 
            T.M2_AvailableBalance AS [ACHBankAccounts.M2_AvailableBalance], 
            T.M2_Status AS [ACHBankAccounts.M2_Status], 
            T.M2_BankInfo_NeedsUpdate AS [ACHBankAccounts.M2_BankInfo_NeedsUpdate], 
            T.M2_BIN2_Counter_CALCULATED AS [ACHBankAccounts.M2_BIN2_Counter_CALCULATED], 
            T.M2_BIN4_Counter_CALCULATED AS [ACHBankAccounts.M2_BIN4_Counter_CALCULATED], 
            T.PaymentProcessor_TransactionRefID AS [ACHBankAccounts.PaymentProcessor_TransactionRefID], 
            T.PaymentProcessor_NeedsUpdate AS [ACHBankAccounts.PaymentProcessor_NeedsUpdate], 
            T.YodleeItemAccountID AS ACHBankAccounts_YodleeItemAccountID, 
            True AS _from0
        FROM CreditsoftStoreContainer.ACHBankAccounts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.ACHBatch.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ACHBatch
        [Creditsoft.ACHBatch](T1.ACHBatch_ACHBatchID, T1.ACHBatch_BatchDate, T1.ACHBatch_BatchNumber, T1.ACHBatch_ACHGroupID, T1.ACHBatch_CreditsCreated, T1.ACHBatch_ACHPullDate, T1.ACHBatch_StateFilter, T1.[ACHBatch.upsize_ts], T1.ACHBatch_BatchType, T1.ACHBatch_FileCreated, T1.ACHBatch_FileCreatedOn, T1.ACHBatch_FileCreatedBy, T1.ACHBatch_DepositBankAccountID, T1.ACHBatch_ACHBatchGroupID, T1.ACHBatch_ProcessACHDate, T1.ACHBatch_ScheduleACHPullDate, T1.ACHBatch_DaysBeforeACHPullDate, T1.ACHBatch_OverrideACHPullDate, T1.ACHBatch_FileName, T1.ACHBatch_IsSECCodesEnabled, T1.ACHBatch_FileIDModifier, T1.[ACHBatch.PaymentProcessor_SubmitDate], T1.ACHBatch_MasterCreditorID, T1.ACHBatch_MasterDebtorID, T1.ACHBatch_TotalAmount)
    FROM (
        SELECT 
            T.ACHBatchID AS ACHBatch_ACHBatchID, 
            T.BatchDate AS ACHBatch_BatchDate, 
            T.BatchNumber AS ACHBatch_BatchNumber, 
            T.ACHGroupID AS ACHBatch_ACHGroupID, 
            T.CreditsCreated AS ACHBatch_CreditsCreated, 
            T.ACHPullDate AS ACHBatch_ACHPullDate, 
            T.StateFilter AS ACHBatch_StateFilter, 
            T.upsize_ts AS [ACHBatch.upsize_ts], 
            T.BatchType AS ACHBatch_BatchType, 
            T.FileCreated AS ACHBatch_FileCreated, 
            T.FileCreatedOn AS ACHBatch_FileCreatedOn, 
            T.FileCreatedBy AS ACHBatch_FileCreatedBy, 
            T.DepositBankAccountID AS ACHBatch_DepositBankAccountID, 
            T.ACHBatchGroupID AS ACHBatch_ACHBatchGroupID, 
            T.ProcessACHDate AS ACHBatch_ProcessACHDate, 
            T.ScheduleACHPullDate AS ACHBatch_ScheduleACHPullDate, 
            T.DaysBeforeACHPullDate AS ACHBatch_DaysBeforeACHPullDate, 
            T.OverrideACHPullDate AS ACHBatch_OverrideACHPullDate, 
            T.FileName AS ACHBatch_FileName, 
            T.IsSECCodesEnabled AS ACHBatch_IsSECCodesEnabled, 
            T.FileIDModifier AS ACHBatch_FileIDModifier, 
            T.PaymentProcessor_SubmitDate AS [ACHBatch.PaymentProcessor_SubmitDate], 
            T.MasterCreditorID AS ACHBatch_MasterCreditorID, 
            T.MasterDebtorID AS ACHBatch_MasterDebtorID, 
            T.TotalAmount AS ACHBatch_TotalAmount, 
            True AS _from0
        FROM CreditsoftStoreContainer.ACHBatch AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.ACHBatchDetails.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ACHBatchDetails
        [Creditsoft.ACHBatchDetails](T1.ACHBatchDetails_ACHBatchDetailID, T1.ACHBatchDetails_ACHBatchID, T1.ACHBatchDetails_ClientID, T1.ACHBatchDetails_Amount, T1.ACHBatchDetails_Selected, T1.ACHBatchDetails_Status, T1.ACHBatchDetails_ACHBankAccountID, T1.ACHBatchDetails_ACHUserEntriesID, T1.[ACHBatchDetails.upsize_ts], T1.ACHBatchDetails_ClientACHGroupID, T1.ACHBatchDetails_GCSDebitID, T1.ACHBatchDetails_StandardEntryClassCode, T1.ACHBatchDetails_PaymentType, T1.ACHBatchDetails_DateCredited, T1.ACHBatchDetails_HoldUntil, T1.ACHBatchDetails_SentToPaymentProcessor, T1.[ACHBatchDetails.M2_TransactionID], T1.[ACHBatchDetails.PaymentProcessor_TransactionRefID])
    FROM (
        SELECT 
            T.ACHBatchDetailID AS ACHBatchDetails_ACHBatchDetailID, 
            T.ACHBatchID AS ACHBatchDetails_ACHBatchID, 
            T.ClientID AS ACHBatchDetails_ClientID, 
            T.Amount AS ACHBatchDetails_Amount, 
            T.Selected AS ACHBatchDetails_Selected, 
            T.Status AS ACHBatchDetails_Status, 
            T.ACHBankAccountID AS ACHBatchDetails_ACHBankAccountID, 
            T.ACHUserEntriesID AS ACHBatchDetails_ACHUserEntriesID, 
            T.upsize_ts AS [ACHBatchDetails.upsize_ts], 
            T.ClientACHGroupID AS ACHBatchDetails_ClientACHGroupID, 
            T.GCSDebitID AS ACHBatchDetails_GCSDebitID, 
            T.StandardEntryClassCode AS ACHBatchDetails_StandardEntryClassCode, 
            T.PaymentType AS ACHBatchDetails_PaymentType, 
            T.DateCredited AS ACHBatchDetails_DateCredited, 
            T.HoldUntil AS ACHBatchDetails_HoldUntil, 
            T.SentToPaymentProcessor AS ACHBatchDetails_SentToPaymentProcessor, 
            T.M2_TransactionID AS [ACHBatchDetails.M2_TransactionID], 
            T.PaymentProcessor_TransactionRefID AS [ACHBatchDetails.PaymentProcessor_TransactionRefID], 
            True AS _from0
        FROM CreditsoftStoreContainer.ACHBatchDetails AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.ACHBatchGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ACHBatchGroup
        [Creditsoft.ACHBatchGroup](T1.ACHBatchGroup_ACHBatchGroupID, T1.ACHBatchGroup_StartDateFilter, T1.ACHBatchGroup_EndDateFilter, T1.ACHBatchGroup_CreatedOn, T1.ACHBatchGroup_CreatedBy, T1.ACHBatchGroup_BatchType)
    FROM (
        SELECT 
            T.ACHBatchGroupID AS ACHBatchGroup_ACHBatchGroupID, 
            T.StartDateFilter AS ACHBatchGroup_StartDateFilter, 
            T.EndDateFilter AS ACHBatchGroup_EndDateFilter, 
            T.CreatedOn AS ACHBatchGroup_CreatedOn, 
            T.CreatedBy AS ACHBatchGroup_CreatedBy, 
            T.BatchType AS ACHBatchGroup_BatchType, 
            True AS _from0
        FROM CreditsoftStoreContainer.ACHBatchGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.ACHGroups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ACHGroups
        [Creditsoft.ACHGroups](T1.ACHGroups_ACHGroupID, T1.ACHGroups_PaymentDueDate, T1.ACHGroups_Period, T1.ACHGroups_DraftDay, T1.[ACHGroups.upsize_ts], T1.ACHGroups_BankAccountID, T1.ACHGroups_WeekDay, T1.ACHGroups_Show)
    FROM (
        SELECT 
            T.ACHGroupID AS ACHGroups_ACHGroupID, 
            T.PaymentDueDate AS ACHGroups_PaymentDueDate, 
            T.Period AS ACHGroups_Period, 
            T.DraftDay AS ACHGroups_DraftDay, 
            T.upsize_ts AS [ACHGroups.upsize_ts], 
            T.BankAccountID AS ACHGroups_BankAccountID, 
            T.WeekDay AS ACHGroups_WeekDay, 
            T.Show AS ACHGroups_Show, 
            True AS _from0
        FROM CreditsoftStoreContainer.ACHGroups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Bank.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Bank
        [Creditsoft.Bank](T1.Bank_BankID, T1.Bank_Description, T1.Bank_EntryAmount, T1.Bank_DateEntered, T1.Bank_EntryCleared, T1.Bank_DateEntryCleared, T1.Bank_BankAccountID, T1.Bank_OperatorStamp, T1.Bank_DateTimeStamp, T1.Bank_Reconciled, T1.Bank_ReconciledDate, T1.Bank_AutomaticEntry, T1.Bank_BankRecHistoryID, T1.[Bank.upsize_ts], T1.Bank_OriginatingFromNSFReceiptID, T1.Bank_EnteredBy)
    FROM (
        SELECT 
            T.BankID AS Bank_BankID, 
            T.Description AS Bank_Description, 
            T.EntryAmount AS Bank_EntryAmount, 
            T.DateEntered AS Bank_DateEntered, 
            T.EntryCleared AS Bank_EntryCleared, 
            T.DateEntryCleared AS Bank_DateEntryCleared, 
            T.BankAccountID AS Bank_BankAccountID, 
            T.OperatorStamp AS Bank_OperatorStamp, 
            T.DateTimeStamp AS Bank_DateTimeStamp, 
            T.Reconciled AS Bank_Reconciled, 
            T.ReconciledDate AS Bank_ReconciledDate, 
            T.AutomaticEntry AS Bank_AutomaticEntry, 
            T.BankRecHistoryID AS Bank_BankRecHistoryID, 
            T.upsize_ts AS [Bank.upsize_ts], 
            T.OriginatingFromNSFReceiptID AS Bank_OriginatingFromNSFReceiptID, 
            T.EnteredBy AS Bank_EnteredBy, 
            True AS _from0
        FROM CreditsoftStoreContainer.Bank AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.BankAccounts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing BankAccounts
        [Creditsoft.BankAccounts](T1.BankAccounts_BankAccountID, T1.BankAccounts_Name, T1.BankAccounts_BankName, T1.BankAccounts_ABA, T1.BankAccounts_AccountNumber, T1.BankAccounts_ImmediateOrigin, T1.BankAccounts_EFT, T1.BankAccounts_OriginatorID, T1.BankAccounts_RPSOutputFile, T1.BankAccounts_RPSTestFile, T1.BankAccounts_RPSPhoneNumber, T1.BankAccounts_RPSCompanyName, T1.BankAccounts_ACH, T1.BankAccounts_ACHOutputFile, T1.BankAccounts_ACHABA, T1.BankAccounts_ACHAccountNumber, T1.BankAccounts_ACHImmediateOrigin, T1.BankAccounts_ACHCompanyID, T1.BankAccounts_DMPOutputFile, T1.BankAccounts_DiscretionaryData, T1.BankAccounts_DS, T1.BankAccounts_RPSAnalysisFile, T1.BankAccounts_ACHBalancedABA, T1.BankAccounts_SkipBalancingRecord, T1.BankAccounts_Active, T1.BankAccounts_LinkBankAccountID, T1.BankAccounts_VisaOriginatorID, T1.BankAccounts_VisaDMPOutputFile, T1.BankAccounts_PaperCheckFile, T1.BankAccounts_ClientIdentifier, T1.BankAccounts_CreateCheckFile, T1.BankAccounts_PaperCheckFileTest, T1.BankAccounts_ACHPrenoteOutputFile, T1.[BankAccounts.upsize_ts], T1.BankAccounts_OriginatingDFI, T1.BankAccounts_CFG, T1.BankAccounts_TDDataCentre, T1.BankAccounts_TDAcctForReturns, T1.BankAccounts_TDInstForReturns, T1.BankAccounts_CPABankAccountID, T1.BankAccounts_IsVirtual, T1.BankAccounts_IsOperating, T1.BankAccounts_CurrencyCodeIdentifier, T1.BankAccounts_ACHLastFileNumber, T1.BankAccounts_IsBillingDeposit, T1.BankAccounts_IsSECCodesEnabled, T1.BankAccounts_DaysBeforeACHPullDate, T1.BankAccounts_CheckFileFormat, T1.BankAccounts_ACHCompanyEntryDescription, T1.BankAccounts_CCType, T1.[BankAccounts.M2_CardHolderID], T1.[BankAccounts.M2_2BIN_PaperChecks], T1.[BankAccounts.M2_2BIN_PhoneChecks], T1.[BankAccounts.M2_7BIN_Agency], T1.[BankAccounts.M2_BIN2_Counter_CALCULATED], T1.[BankAccounts.M2_CardHolderID_BIN2], T1.[BankAccounts.M2_BankInfo_NeedsUpdate], T1.BankAccounts_UseForBillPay, T1.[BankAccounts.PaymentProcessor_TransactionRefID], T1.BankAccounts_OverwriteACHFormat)
    FROM (
        SELECT 
            T.BankAccountID AS BankAccounts_BankAccountID, 
            T.Name AS BankAccounts_Name, 
            T.BankName AS BankAccounts_BankName, 
            T.ABA AS BankAccounts_ABA, 
            T.AccountNumber AS BankAccounts_AccountNumber, 
            T.ImmediateOrigin AS BankAccounts_ImmediateOrigin, 
            T.EFT AS BankAccounts_EFT, 
            T.OriginatorID AS BankAccounts_OriginatorID, 
            T.RPSOutputFile AS BankAccounts_RPSOutputFile, 
            T.RPSTestFile AS BankAccounts_RPSTestFile, 
            T.RPSPhoneNumber AS BankAccounts_RPSPhoneNumber, 
            T.RPSCompanyName AS BankAccounts_RPSCompanyName, 
            T.ACH AS BankAccounts_ACH, 
            T.ACHOutputFile AS BankAccounts_ACHOutputFile, 
            T.ACHABA AS BankAccounts_ACHABA, 
            T.ACHAccountNumber AS BankAccounts_ACHAccountNumber, 
            T.ACHImmediateOrigin AS BankAccounts_ACHImmediateOrigin, 
            T.ACHCompanyID AS BankAccounts_ACHCompanyID, 
            T.DMPOutputFile AS BankAccounts_DMPOutputFile, 
            T.DiscretionaryData AS BankAccounts_DiscretionaryData, 
            T.DS AS BankAccounts_DS, 
            T.RPSAnalysisFile AS BankAccounts_RPSAnalysisFile, 
            T.ACHBalancedABA AS BankAccounts_ACHBalancedABA, 
            T.SkipBalancingRecord AS BankAccounts_SkipBalancingRecord, 
            T.Active AS BankAccounts_Active, 
            T.LinkBankAccountID AS BankAccounts_LinkBankAccountID, 
            T.VisaOriginatorID AS BankAccounts_VisaOriginatorID, 
            T.VisaDMPOutputFile AS BankAccounts_VisaDMPOutputFile, 
            T.PaperCheckFile AS BankAccounts_PaperCheckFile, 
            T.ClientIdentifier AS BankAccounts_ClientIdentifier, 
            T.CreateCheckFile AS BankAccounts_CreateCheckFile, 
            T.PaperCheckFileTest AS BankAccounts_PaperCheckFileTest, 
            T.ACHPrenoteOutputFile AS BankAccounts_ACHPrenoteOutputFile, 
            T.upsize_ts AS [BankAccounts.upsize_ts], 
            T.OriginatingDFI AS BankAccounts_OriginatingDFI, 
            T.CFG AS BankAccounts_CFG, 
            T.TDDataCentre AS BankAccounts_TDDataCentre, 
            T.TDAcctForReturns AS BankAccounts_TDAcctForReturns, 
            T.TDInstForReturns AS BankAccounts_TDInstForReturns, 
            T.CPABankAccountID AS BankAccounts_CPABankAccountID, 
            T.IsVirtual AS BankAccounts_IsVirtual, 
            T.IsOperating AS BankAccounts_IsOperating, 
            T.CurrencyCodeIdentifier AS BankAccounts_CurrencyCodeIdentifier, 
            T.ACHLastFileNumber AS BankAccounts_ACHLastFileNumber, 
            T.IsBillingDeposit AS BankAccounts_IsBillingDeposit, 
            T.IsSECCodesEnabled AS BankAccounts_IsSECCodesEnabled, 
            T.DaysBeforeACHPullDate AS BankAccounts_DaysBeforeACHPullDate, 
            T.CheckFileFormat AS BankAccounts_CheckFileFormat, 
            T.ACHCompanyEntryDescription AS BankAccounts_ACHCompanyEntryDescription, 
            T.CCType AS BankAccounts_CCType, 
            T.M2_CardHolderID AS [BankAccounts.M2_CardHolderID], 
            T.M2_2BIN_PaperChecks AS [BankAccounts.M2_2BIN_PaperChecks], 
            T.M2_2BIN_PhoneChecks AS [BankAccounts.M2_2BIN_PhoneChecks], 
            T.M2_7BIN_Agency AS [BankAccounts.M2_7BIN_Agency], 
            T.M2_BIN2_Counter_CALCULATED AS [BankAccounts.M2_BIN2_Counter_CALCULATED], 
            T.M2_CardHolderID_BIN2 AS [BankAccounts.M2_CardHolderID_BIN2], 
            T.M2_BankInfo_NeedsUpdate AS [BankAccounts.M2_BankInfo_NeedsUpdate], 
            T.UseForBillPay AS BankAccounts_UseForBillPay, 
            T.PaymentProcessor_TransactionRefID AS [BankAccounts.PaymentProcessor_TransactionRefID], 
            T.OverwriteACHFormat AS BankAccounts_OverwriteACHFormat, 
            True AS _from0
        FROM CreditsoftStoreContainer.BankAccounts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.CheckRun.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CheckRun
        [Creditsoft.CheckRun](T1.CheckRun_CheckRunID, T1.CheckRun_CheckRunDate, T1.CheckRun_CheckDate, T1.CheckRun_StartCheck, T1.CheckRun_EndCheck, T1.CheckRun_CheckRunType, T1.CheckRun_CheckRunStartDate, T1.CheckRun_CheckRunEndDate, T1.CheckRun_BankAccountID, T1.[CheckRun.upsize_ts], T1.CheckRun_CheckRunUserID)
    FROM (
        SELECT 
            T.CheckRunID AS CheckRun_CheckRunID, 
            T.CheckRunDate AS CheckRun_CheckRunDate, 
            T.CheckDate AS CheckRun_CheckDate, 
            T.StartCheck AS CheckRun_StartCheck, 
            T.EndCheck AS CheckRun_EndCheck, 
            T.CheckRunType AS CheckRun_CheckRunType, 
            T.CheckRunStartDate AS CheckRun_CheckRunStartDate, 
            T.CheckRunEndDate AS CheckRun_CheckRunEndDate, 
            T.BankAccountID AS CheckRun_BankAccountID, 
            T.upsize_ts AS [CheckRun.upsize_ts], 
            T.CheckRunUserID AS CheckRun_CheckRunUserID, 
            True AS _from0
        FROM CreditsoftStoreContainer.CheckRun AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Checks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Checks
        [Creditsoft.Checks](T1.Checks_CheckID, T1.Checks_BankAccountID, T1.Checks_CreditorID, T1.Checks_Amount, T1.Checks_Cleared, T1.Checks_Voided, T1.Checks_DateCreated, T1.Checks_DateCleared, T1.Checks_VoidReason, T1.Checks_VoidNewCreditorID, T1.Checks_OperatorStamp, T1.Checks_DateTimeStamp, T1.Checks_Reconciled, T1.Checks_ReconciledDate, T1.Checks_Payee, T1.Checks_SalesForceID, T1.Checks_CheckType, T1.Checks_CheckRunID, T1.Checks_DateEntered, T1.Checks_BankRecHistoryID, T1.Checks_QBID, T1.[Checks.upsize_ts], T1.Checks_VoidDescription, T1.[Checks.NumberOfEntries_CALCULATED], T1.Checks_AgencyID, T1.[Checks.FSAmount_CALCULATED], T1.[Checks.PaymentProcessor_TranStatus], T1.[Checks.PaymentProcessor_StopPayOnCheckStatus], T1.[Checks.PaymentProcessor_CSLastUpdatedTime])
    FROM (
        SELECT 
            T.CheckID AS Checks_CheckID, 
            T.BankAccountID AS Checks_BankAccountID, 
            T.CreditorID AS Checks_CreditorID, 
            T.Amount AS Checks_Amount, 
            T.Cleared AS Checks_Cleared, 
            T.Voided AS Checks_Voided, 
            T.DateCreated AS Checks_DateCreated, 
            T.DateCleared AS Checks_DateCleared, 
            T.VoidReason AS Checks_VoidReason, 
            T.VoidNewCreditorID AS Checks_VoidNewCreditorID, 
            T.OperatorStamp AS Checks_OperatorStamp, 
            T.DateTimeStamp AS Checks_DateTimeStamp, 
            T.Reconciled AS Checks_Reconciled, 
            T.ReconciledDate AS Checks_ReconciledDate, 
            T.Payee AS Checks_Payee, 
            T.SalesForceID AS Checks_SalesForceID, 
            T.CheckType AS Checks_CheckType, 
            T.CheckRunID AS Checks_CheckRunID, 
            T.DateEntered AS Checks_DateEntered, 
            T.BankRecHistoryID AS Checks_BankRecHistoryID, 
            T.QBID AS Checks_QBID, 
            T.upsize_ts AS [Checks.upsize_ts], 
            T.VoidDescription AS Checks_VoidDescription, 
            T.NumberOfEntries_CALCULATED AS [Checks.NumberOfEntries_CALCULATED], 
            T.AgencyID AS Checks_AgencyID, 
            T.FSAmount_CALCULATED AS [Checks.FSAmount_CALCULATED], 
            T.PaymentProcessor_TranStatus AS [Checks.PaymentProcessor_TranStatus], 
            T.PaymentProcessor_StopPayOnCheckStatus AS [Checks.PaymentProcessor_StopPayOnCheckStatus], 
            T.PaymentProcessor_CSLastUpdatedTime AS [Checks.PaymentProcessor_CSLastUpdatedTime], 
            True AS _from0
        FROM CreditsoftStoreContainer.Checks AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.ClientCred.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ClientCred
        [Creditsoft.ClientCred](T1.ClientCred_ClientCredID, T1.ClientCred_ClientID, T1.ClientCred_CreditorID, T1.ClientCred_CreditorAlias, T1.ClientCred_AccountNumber, T1.ClientCred_MonthlyPayment, T1.ClientCred_LastPay, T1.ClientCred_LastIncr, T1.ClientCred_Balance, T1.ClientCred_OrigDebt, T1.ClientCred_DefMonthlyPayment, T1.ClientCred_PrevPay1, T1.ClientCred_OrigMonthly, T1.ClientCred_BegDebt, T1.ClientCred_InitialAPR, T1.ClientCred_ReducedAPR, T1.ClientCred_Commission, T1.ClientCred_Closed, T1.ClientCred_XCreditorID, T1.ClientCred_XAccountNumber, T1.ClientCred_OverrideFS, T1.ClientCred_NewFS, T1.ClientCred_OperatorStamp, T1.ClientCred_DateTimeStamp, T1.[ClientCred.upsize_ts], T1.ClientCred_OriginalDueDate, T1.ClientCred_AccountStatus, T1.ClientCred_PmtRequested, T1.ClientCred_PmtRequestedDate, T1.ClientCred_UpdatedBalance, T1.ClientCred_UpdatedBalanceDate, T1.ClientCred_ConfirmedMonthly, T1.ClientCred_ConfirmedMonthlyDate, T1.ClientCred_ConfirmedBalance, T1.ClientCred_ConfirmedBalanceDate, T1.[ClientCred.PaidToDate_CALCULATED], T1.ClientCred_AddedBy, T1.ClientCred_UserDefined1, T1.ClientCred_UserDefined2, T1.ClientCred_PmtRequestedCreditor, T1.ClientCred_OldBalance, T1.ClientCred_OldPayment, T1.ClientCred_AccumulateAmount, T1.ClientCred_BillPay, T1.ClientCred_BillPayAmount, T1.ClientCred_ACHBankAccountID, T1.ClientCred_BillPayStartDate, T1.ClientCred_BillPayPeriodType, T1.ClientCred_BillPayPeriodCount, T1.ClientCred_BillPayNextDate, T1.ClientCred_FirstProposalSent, T1.ClientCred_OverridePayPriority, T1.ClientCred_XClientCredID, T1.ClientCred_SecuredDebt, T1.ClientCred_LoanOriginalValue, T1.ClientCred_LoanTerm, T1.ClientCred_DateEntered, T1.ClientCred_InternetCreditorName, T1.ClientCred_BalanceVerifiedOn, T1.ClientCred_CurrentDefModifyManually, T1.ClientCred_MinimumAcceptedByCreditor, T1.ClientCred_DelinquencyStatus, T1.ClientCred_AccountDueDay, T1.ClientCred_SSNApplicant, T1.ClientCred_CommissionCalculated, T1.ClientCred_CommissionBatchID, T1.ClientCred_NegotiatedDate, T1.ClientCred_FeeClientCredID, T1.ClientCred_SettlementPercentage, T1.ClientCred_BalanceAtTimeOfSettlement, T1.ClientCred_SettlementApprovedOn, T1.ClientCred_Priority, T1.ClientCred_Lock, T1.ClientCred_IsTransferredAccount, T1.ClientCred_DND, T1.ClientCred_LastProposalSent, T1.ClientCred_OrigCreditorID, T1.ClientCred_CreditorPaymentType, T1.ClientCred_OverrideEstimatedSettlementPercentage, T1.ClientCred_NegotiatorUserID, T1.ClientCred_SettlementFeeBasedOnOrigBalance, T1.ClientCred_UseVirtual, T1.ClientCred_PreBankruptcy, T1.ClientCred_LessThanFull, T1.ClientCred_EstimatedSettlementAmount, T1.ClientCred_HoldProposal, T1.ClientCred_HoldProposalUntilFirstReceipt, T1.ClientCred_AccountNumberStripped, T1.ClientCred_CRTransUnion, T1.ClientCred_CRExperian, T1.ClientCred_CREquifax, T1.ClientCred_CRTransUnionIssueID, T1.ClientCred_CRExperianIssueID, T1.ClientCred_CREquifaxIssueID, T1.ClientCred_CoAppID, T1.ClientCred_LeadClientCredID, T1.ClientCred_DefaultCreditorID, T1.ClientCred_LockedAfterRecordPayment, T1.ClientCred_EstimatedSettlementFees, T1.ClientCred_CreditorContactID, T1.[ClientCred.AccountName_CALCULATED], T1.ClientCred_JointAccount, T1.ClientCred_StatementReceived, T1.[ClientCred.MOD10_CALCULATED], T1.[ClientCred.MinimumPayment_CALCULATED], T1.[ClientCred.RPPS_AutoResend_Counter_CALCULATED], T1.ClientCred_ContactScheduleID, T1.ClientCred_DNDDirty, T1.ClientCred_AgencyID, T1.ClientCred_CallToAction, T1.ClientCred_Hardship, T1.ClientCred_CollectionPlanID, T1.ClientCred_OverrideInternalFee, T1.ClientCred_NewInternalFeePercentage, T1.ClientCred_TempPayment, T1.ClientCred_ServiceDate, T1.ClientCred_DefaultFee, T1.ClientCred_TempFeeAmount, T1.ClientCred_TempExternalFeeAmount, T1.ClientCred_ClientPaymentEntrySelection, T1.ClientCred_TempDistribution, T1.ClientCred_TempExternalDistribution, T1.ClientCred_TempMaxFeeAmount, T1.ClientCred_EnteredByWebUserName, T1.ClientCred_DebtType, T1.ClientCred_ReportToCreditBureaus, T1.ClientCred_Metro2Closed, T1.ClientCred_Metro2LastExportID, T1.ClientCred_CreditReportConsumerTransactionCode, T1.ClientCred_CreditReportAccountStatusCode, T1.ClientCred_CreditReportECOACode, T1.ClientCred_CreditReportComplianceCode, T1.ClientCred_CreditReportPaymentHistory, T1.ClientCred_CreditReportPaymentRatingCode, T1.ClientCred_CreditReportSpecialComment, T1.ClientCred_LastCreditListedDate, T1.ClientCred_ClosedDate, T1.ClientCred_FirstDelinquencyDate, T1.ClientCred_PastDueAmount, T1.ClientCred_ImportDataLogID, T1.ClientCred_CollectionCampaignID, T1.[ClientCred.OrigCreditorID_CALCULATED], T1.ClientCred_OverrideSalesmanID, T1.[ClientCred.FullBudgetDisclosure_CALCULATED], T1.[ClientCred.FullBudgetCreditors_CALCULATED], T1.[ClientCred.SendProposalsByFax_CALCULATED], T1.[ClientCred.UseRPPSProposals_CALCULATED], T1.[ClientCred.AccountNumber_Masked], T1.[ClientCred.AccountNumber_Encrypted], T1.ClientCred_RetainerFeePSDID, T1.[ClientCred.SSNApplicant_Masked], T1.ClientCred_DefaultProgramScheduleSetupID, T1.ClientCred_XClientID, T1.[ClientCred.ReducedAPRBasedOnFormula_CALCULATED], T1.ClientCred_FirstProposalCreated, T1.ClientCred_AccountTerm, T1.ClientCred_UnpaidInterest, T1.[ClientCred.InterestPaidToDate_CALCULATED], T1.[ClientCred.NoOffers_CALCULATED], T1.ClientCred_UserDefined3, T1.ClientCred_PastDueAccount, T1.ClientCred_DateAccountCheckedAsPastDue, T1.ClientCred_YodleeStatus, T1.ClientCred_YodleeTransactionStatus, T1.ClientCred_YodleeItemID, T1.ClientCred_YodleeItemAccountID, T1.ClientCred_YodleeLastTransactionRequest, T1.ClientCred_YodleeContentServiceID, T1.[ClientCred.AccountOrdinalNumber_CALCULATED], T1.ClientCred_BillPayAmountOption, T1.ClientCred_BillPaySourceOption, T1.ClientCred_BillPayAmountVerifiedOn, T1.ClientCred_BillPayAmountVerifiedBy, T1.ClientCred_ProposalSentPriorToConversion, T1.ClientCred_BudgetCategoryID, T1.ClientCred_BillPaymentType, T1.ClientCred_ExcludeFromBudgetAnalysis, T1.ClientCred_BudgetUseYodleeTransactions, T1.ClientCred_PaymentTermID, T1.[ClientCred.FinancialDiscount_DueDate], T1.[ClientCred.FinanciaDiscount_AmountToPay], T1.[ClientCred.PrincipalBalance_CALCULATED], T1.[ClientCred.LastBalanceChangeID_CALCULATED], T1.[ClientCred.SLS_LoanType], T1.ClientCred_ProcedureID, T1.ClientCred_ItemUnits, T1.ClientCred_PricePerUnit, T1.ClientCred_PresetID, T1.ClientCred_SuspensionStartDate, T1.ClientCred_SuspensionEndDate, T1.ClientCred_SuspensionReason, T1.ClientCred_OverpaymentReason, T1.ClientCred_OriginalMasterClientID)
    FROM (
        SELECT 
            T.ClientCredID AS ClientCred_ClientCredID, 
            T.ClientID AS ClientCred_ClientID, 
            T.CreditorID AS ClientCred_CreditorID, 
            T.CreditorAlias AS ClientCred_CreditorAlias, 
            T.AccountNumber AS ClientCred_AccountNumber, 
            T.MonthlyPayment AS ClientCred_MonthlyPayment, 
            T.LastPay AS ClientCred_LastPay, 
            T.LastIncr AS ClientCred_LastIncr, 
            T.Balance AS ClientCred_Balance, 
            T.OrigDebt AS ClientCred_OrigDebt, 
            T.DefMonthlyPayment AS ClientCred_DefMonthlyPayment, 
            T.PrevPay1 AS ClientCred_PrevPay1, 
            T.OrigMonthly AS ClientCred_OrigMonthly, 
            T.BegDebt AS ClientCred_BegDebt, 
            T.InitialAPR AS ClientCred_InitialAPR, 
            T.ReducedAPR AS ClientCred_ReducedAPR, 
            T.Commission AS ClientCred_Commission, 
            T.Closed AS ClientCred_Closed, 
            T.XCreditorID AS ClientCred_XCreditorID, 
            T.XAccountNumber AS ClientCred_XAccountNumber, 
            T.OverrideFS AS ClientCred_OverrideFS, 
            T.NewFS AS ClientCred_NewFS, 
            T.OperatorStamp AS ClientCred_OperatorStamp, 
            T.DateTimeStamp AS ClientCred_DateTimeStamp, 
            T.upsize_ts AS [ClientCred.upsize_ts], 
            T.OriginalDueDate AS ClientCred_OriginalDueDate, 
            T.AccountStatus AS ClientCred_AccountStatus, 
            T.PmtRequested AS ClientCred_PmtRequested, 
            T.PmtRequestedDate AS ClientCred_PmtRequestedDate, 
            T.UpdatedBalance AS ClientCred_UpdatedBalance, 
            T.UpdatedBalanceDate AS ClientCred_UpdatedBalanceDate, 
            T.ConfirmedMonthly AS ClientCred_ConfirmedMonthly, 
            T.ConfirmedMonthlyDate AS ClientCred_ConfirmedMonthlyDate, 
            T.ConfirmedBalance AS ClientCred_ConfirmedBalance, 
            T.ConfirmedBalanceDate AS ClientCred_ConfirmedBalanceDate, 
            T.PaidToDate_CALCULATED AS [ClientCred.PaidToDate_CALCULATED], 
            T.AddedBy AS ClientCred_AddedBy, 
            T.UserDefined1 AS ClientCred_UserDefined1, 
            T.UserDefined2 AS ClientCred_UserDefined2, 
            T.PmtRequestedCreditor AS ClientCred_PmtRequestedCreditor, 
            T.OldBalance AS ClientCred_OldBalance, 
            T.OldPayment AS ClientCred_OldPayment, 
            T.AccumulateAmount AS ClientCred_AccumulateAmount, 
            T.BillPay AS ClientCred_BillPay, 
            T.BillPayAmount AS ClientCred_BillPayAmount, 
            T.ACHBankAccountID AS ClientCred_ACHBankAccountID, 
            T.BillPayStartDate AS ClientCred_BillPayStartDate, 
            T.BillPayPeriodType AS ClientCred_BillPayPeriodType, 
            T.BillPayPeriodCount AS ClientCred_BillPayPeriodCount, 
            T.BillPayNextDate AS ClientCred_BillPayNextDate, 
            T.FirstProposalSent AS ClientCred_FirstProposalSent, 
            T.OverridePayPriority AS ClientCred_OverridePayPriority, 
            T.XClientCredID AS ClientCred_XClientCredID, 
            T.SecuredDebt AS ClientCred_SecuredDebt, 
            T.LoanOriginalValue AS ClientCred_LoanOriginalValue, 
            T.LoanTerm AS ClientCred_LoanTerm, 
            T.DateEntered AS ClientCred_DateEntered, 
            T.InternetCreditorName AS ClientCred_InternetCreditorName, 
            T.BalanceVerifiedOn AS ClientCred_BalanceVerifiedOn, 
            T.CurrentDefModifyManually AS ClientCred_CurrentDefModifyManually, 
            T.MinimumAcceptedByCreditor AS ClientCred_MinimumAcceptedByCreditor, 
            T.DelinquencyStatus AS ClientCred_DelinquencyStatus, 
            T.AccountDueDay AS ClientCred_AccountDueDay, 
            T.SSNApplicant AS ClientCred_SSNApplicant, 
            T.CommissionCalculated AS ClientCred_CommissionCalculated, 
            T.CommissionBatchID AS ClientCred_CommissionBatchID, 
            T.NegotiatedDate AS ClientCred_NegotiatedDate, 
            T.FeeClientCredID AS ClientCred_FeeClientCredID, 
            T.SettlementPercentage AS ClientCred_SettlementPercentage, 
            T.BalanceAtTimeOfSettlement AS ClientCred_BalanceAtTimeOfSettlement, 
            T.SettlementApprovedOn AS ClientCred_SettlementApprovedOn, 
            T.Priority AS ClientCred_Priority, 
            T.Lock AS ClientCred_Lock, 
            T.IsTransferredAccount AS ClientCred_IsTransferredAccount, 
            T.DND AS ClientCred_DND, 
            T.LastProposalSent AS ClientCred_LastProposalSent, 
            T.OrigCreditorID AS ClientCred_OrigCreditorID, 
            T.CreditorPaymentType AS ClientCred_CreditorPaymentType, 
            T.OverrideEstimatedSettlementPercentage AS ClientCred_OverrideEstimatedSettlementPercentage, 
            T.NegotiatorUserID AS ClientCred_NegotiatorUserID, 
            T.SettlementFeeBasedOnOrigBalance AS ClientCred_SettlementFeeBasedOnOrigBalance, 
            T.UseVirtual AS ClientCred_UseVirtual, 
            T.PreBankruptcy AS ClientCred_PreBankruptcy, 
            T.LessThanFull AS ClientCred_LessThanFull, 
            T.EstimatedSettlementAmount AS ClientCred_EstimatedSettlementAmount, 
            T.HoldProposal AS ClientCred_HoldProposal, 
            T.HoldProposalUntilFirstReceipt AS ClientCred_HoldProposalUntilFirstReceipt, 
            T.AccountNumberStripped AS ClientCred_AccountNumberStripped, 
            T.CRTransUnion AS ClientCred_CRTransUnion, 
            T.CRExperian AS ClientCred_CRExperian, 
            T.CREquifax AS ClientCred_CREquifax, 
            T.CRTransUnionIssueID AS ClientCred_CRTransUnionIssueID, 
            T.CRExperianIssueID AS ClientCred_CRExperianIssueID, 
            T.CREquifaxIssueID AS ClientCred_CREquifaxIssueID, 
            T.CoAppID AS ClientCred_CoAppID, 
            T.LeadClientCredID AS ClientCred_LeadClientCredID, 
            T.DefaultCreditorID AS ClientCred_DefaultCreditorID, 
            T.LockedAfterRecordPayment AS ClientCred_LockedAfterRecordPayment, 
            T.EstimatedSettlementFees AS ClientCred_EstimatedSettlementFees, 
            T.CreditorContactID AS ClientCred_CreditorContactID, 
            T.AccountName_CALCULATED AS [ClientCred.AccountName_CALCULATED], 
            T.JointAccount AS ClientCred_JointAccount, 
            T.StatementReceived AS ClientCred_StatementReceived, 
            T.MOD10_CALCULATED AS [ClientCred.MOD10_CALCULATED], 
            T.MinimumPayment_CALCULATED AS [ClientCred.MinimumPayment_CALCULATED], 
            T.RPPS_AutoResend_Counter_CALCULATED AS [ClientCred.RPPS_AutoResend_Counter_CALCULATED], 
            T.ContactScheduleID AS ClientCred_ContactScheduleID, 
            T.DNDDirty AS ClientCred_DNDDirty, 
            T.AgencyID AS ClientCred_AgencyID, 
            T.CallToAction AS ClientCred_CallToAction, 
            T.Hardship AS ClientCred_Hardship, 
            T.CollectionPlanID AS ClientCred_CollectionPlanID, 
            T.OverrideInternalFee AS ClientCred_OverrideInternalFee, 
            T.NewInternalFeePercentage AS ClientCred_NewInternalFeePercentage, 
            T.TempPayment AS ClientCred_TempPayment, 
            T.ServiceDate AS ClientCred_ServiceDate, 
            T.DefaultFee AS ClientCred_DefaultFee, 
            T.TempFeeAmount AS ClientCred_TempFeeAmount, 
            T.TempExternalFeeAmount AS ClientCred_TempExternalFeeAmount, 
            T.ClientPaymentEntrySelection AS ClientCred_ClientPaymentEntrySelection, 
            T.TempDistribution AS ClientCred_TempDistribution, 
            T.TempExternalDistribution AS ClientCred_TempExternalDistribution, 
            T.TempMaxFeeAmount AS ClientCred_TempMaxFeeAmount, 
            T.EnteredByWebUserName AS ClientCred_EnteredByWebUserName, 
            T.DebtType AS ClientCred_DebtType, 
            T.ReportToCreditBureaus AS ClientCred_ReportToCreditBureaus, 
            T.Metro2Closed AS ClientCred_Metro2Closed, 
            T.Metro2LastExportID AS ClientCred_Metro2LastExportID, 
            T.CreditReportConsumerTransactionCode AS ClientCred_CreditReportConsumerTransactionCode, 
            T.CreditReportAccountStatusCode AS ClientCred_CreditReportAccountStatusCode, 
            T.CreditReportECOACode AS ClientCred_CreditReportECOACode, 
            T.CreditReportComplianceCode AS ClientCred_CreditReportComplianceCode, 
            T.CreditReportPaymentHistory AS ClientCred_CreditReportPaymentHistory, 
            T.CreditReportPaymentRatingCode AS ClientCred_CreditReportPaymentRatingCode, 
            T.CreditReportSpecialComment AS ClientCred_CreditReportSpecialComment, 
            T.LastCreditListedDate AS ClientCred_LastCreditListedDate, 
            T.ClosedDate AS ClientCred_ClosedDate, 
            T.FirstDelinquencyDate AS ClientCred_FirstDelinquencyDate, 
            T.PastDueAmount AS ClientCred_PastDueAmount, 
            T.ImportDataLogID AS ClientCred_ImportDataLogID, 
            T.CollectionCampaignID AS ClientCred_CollectionCampaignID, 
            T.OrigCreditorID_CALCULATED AS [ClientCred.OrigCreditorID_CALCULATED], 
            T.OverrideSalesmanID AS ClientCred_OverrideSalesmanID, 
            T.FullBudgetDisclosure_CALCULATED AS [ClientCred.FullBudgetDisclosure_CALCULATED], 
            T.FullBudgetCreditors_CALCULATED AS [ClientCred.FullBudgetCreditors_CALCULATED], 
            T.SendProposalsByFax_CALCULATED AS [ClientCred.SendProposalsByFax_CALCULATED], 
            T.UseRPPSProposals_CALCULATED AS [ClientCred.UseRPPSProposals_CALCULATED], 
            T.AccountNumber_Masked AS [ClientCred.AccountNumber_Masked], 
            T.AccountNumber_Encrypted AS [ClientCred.AccountNumber_Encrypted], 
            T.RetainerFeePSDID AS ClientCred_RetainerFeePSDID, 
            T.SSNApplicant_Masked AS [ClientCred.SSNApplicant_Masked], 
            T.DefaultProgramScheduleSetupID AS ClientCred_DefaultProgramScheduleSetupID, 
            T.XClientID AS ClientCred_XClientID, 
            T.ReducedAPRBasedOnFormula_CALCULATED AS [ClientCred.ReducedAPRBasedOnFormula_CALCULATED], 
            T.FirstProposalCreated AS ClientCred_FirstProposalCreated, 
            T.AccountTerm AS ClientCred_AccountTerm, 
            T.UnpaidInterest AS ClientCred_UnpaidInterest, 
            T.InterestPaidToDate_CALCULATED AS [ClientCred.InterestPaidToDate_CALCULATED], 
            T.NoOffers_CALCULATED AS [ClientCred.NoOffers_CALCULATED], 
            T.UserDefined3 AS ClientCred_UserDefined3, 
            T.PastDueAccount AS ClientCred_PastDueAccount, 
            T.DateAccountCheckedAsPastDue AS ClientCred_DateAccountCheckedAsPastDue, 
            T.YodleeStatus AS ClientCred_YodleeStatus, 
            T.YodleeTransactionStatus AS ClientCred_YodleeTransactionStatus, 
            T.YodleeItemID AS ClientCred_YodleeItemID, 
            T.YodleeItemAccountID AS ClientCred_YodleeItemAccountID, 
            T.YodleeLastTransactionRequest AS ClientCred_YodleeLastTransactionRequest, 
            T.YodleeContentServiceID AS ClientCred_YodleeContentServiceID, 
            T.AccountOrdinalNumber_CALCULATED AS [ClientCred.AccountOrdinalNumber_CALCULATED], 
            T.BillPayAmountOption AS ClientCred_BillPayAmountOption, 
            T.BillPaySourceOption AS ClientCred_BillPaySourceOption, 
            T.BillPayAmountVerifiedOn AS ClientCred_BillPayAmountVerifiedOn, 
            T.BillPayAmountVerifiedBy AS ClientCred_BillPayAmountVerifiedBy, 
            T.ProposalSentPriorToConversion AS ClientCred_ProposalSentPriorToConversion, 
            T.BudgetCategoryID AS ClientCred_BudgetCategoryID, 
            T.BillPaymentType AS ClientCred_BillPaymentType, 
            T.ExcludeFromBudgetAnalysis AS ClientCred_ExcludeFromBudgetAnalysis, 
            T.BudgetUseYodleeTransactions AS ClientCred_BudgetUseYodleeTransactions, 
            T.PaymentTermID AS ClientCred_PaymentTermID, 
            T.FinancialDiscount_DueDate AS [ClientCred.FinancialDiscount_DueDate], 
            T.FinanciaDiscount_AmountToPay AS [ClientCred.FinanciaDiscount_AmountToPay], 
            T.PrincipalBalance_CALCULATED AS [ClientCred.PrincipalBalance_CALCULATED], 
            T.LastBalanceChangeID_CALCULATED AS [ClientCred.LastBalanceChangeID_CALCULATED], 
            T.SLS_LoanType AS [ClientCred.SLS_LoanType], 
            T.ProcedureID AS ClientCred_ProcedureID, 
            T.ItemUnits AS ClientCred_ItemUnits, 
            T.PricePerUnit AS ClientCred_PricePerUnit, 
            T.PresetID AS ClientCred_PresetID, 
            T.SuspensionStartDate AS ClientCred_SuspensionStartDate, 
            T.SuspensionEndDate AS ClientCred_SuspensionEndDate, 
            T.SuspensionReason AS ClientCred_SuspensionReason, 
            T.OverpaymentReason AS ClientCred_OverpaymentReason, 
            T.OriginalMasterClientID AS ClientCred_OriginalMasterClientID, 
            True AS _from0
        FROM CreditsoftStoreContainer.ClientCred AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Clients.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Clients
        [Creditsoft.Clients](T1.Clients_ClientID, T1.Clients_SSN, T1.Clients_LastName, T1.Clients_FirstName, T1.Clients_MiddleName, T1.Clients_Results, T1.Clients_Referral, T1.Clients_Counselor, T1.Clients_LocationID, T1.Clients_PaymentDay, T1.Clients_FDisDate, T1.Clients_WholeName, T1.Clients_Address1, T1.Clients_Address2, T1.Clients_City, T1.Clients_State, T1.Clients_ZIP, T1.Clients_Country, T1.Clients_HomePhone, T1.Clients_WorkPhone, T1.Clients_OtherPhone, T1.Clients_LastPaymentDate, T1.Clients_LastPaymentAmount, T1.Clients_DateEntered, T1.Clients_DateStart, T1.Clients_DateClose, T1.Clients_CloseReason, T1.Clients_Note, T1.Clients_StatementNote, T1.Clients_Active, T1.Clients_EditableUntil, T1.Clients_SalesmanID, T1.Clients_SalesmanType, T1.Clients_SalesmanUID, T1.Clients_Fax, T1.Clients_Email, T1.Clients_EmailStatus, T1.Clients_UseACH, T1.Clients_Language, T1.Clients_TempClient, T1.Clients_MonthlyStatementPrinted, T1.Clients_MonthlyStatementSDATE, T1.Clients_MonthlyStatementEDATE, T1.Clients_FirstPmtRcvd, T1.Clients_OperatorStamp, T1.Clients_DateTimeStamp, T1.[Clients.upsize_ts], T1.Clients_ClientStatus, T1.Clients_LeadClientID, T1.Clients_UserDefined1, T1.Clients_UserDefined2, T1.Clients_UserDefined3, T1.Clients_UserDefined4, T1.Clients_UserDefined5, T1.Clients_StatusChangedOn, T1.Clients_CurrentACHGroupID, T1.Clients_ACHNote, T1.Clients_TasksLockedByUserID, T1.Clients_CallBack, T1.Clients_EnteredBy, T1.Clients_SetServiceFee, T1.Clients_DefaultBankAccount, T1.Clients_DND, T1.Clients_UserDefined6, T1.Clients_AdvertisingID, T1.Clients_Mobile, T1.Clients_MonthlyServiceFeeCalculatedOn, T1.Clients_CompletionBonusBatchID, T1.Clients_ClientAdminStatus, T1.Clients_AppointmentSpecialist, T1.Clients_AccountManager, T1.Clients_Salutation, T1.Clients_PreferredCommunicationMethod, T1.Clients_WorkPhoneTime, T1.Clients_HomePhoneTime, T1.Clients_MobilePhoneTime, T1.Clients_WorkPhoneType, T1.Clients_HomePhoneType, T1.Clients_MobilePhoneType, T1.Clients_FileReceivedOn, T1.Clients_ProgramFeeDueDate, T1.Clients_ProgramLength, T1.Clients_ProgramScheduleID, T1.Clients_Address1CommunicationPreferred, T1.Clients_Address1CommunicationDoNotUse, T1.Clients_HomePhoneCommunicationPreferred, T1.Clients_HomePhoneCommunicationDoNotUse, T1.Clients_WorkPhoneCommunicationPreferred, T1.Clients_WorkPhoneCommunicationDoNotUse, T1.Clients_OtherPhoneCommunicationPreferred, T1.Clients_OtherPhoneCommunicationDoNotUse, T1.Clients_EmailCommunicationPreferred, T1.Clients_EmailCommunicationDoNotUse, T1.Clients_FaxCommunicationPreferred, T1.Clients_FaxCommunicationDoNotUse, T1.Clients_MobileCommunicationPreferred, T1.Clients_MobileCommunicationDoNotUse, T1.Clients_HomePhoneStripped, T1.Clients_WorkPhoneStripped, T1.Clients_OtherPhoneStripped, T1.Clients_FAXStripped, T1.[Clients.AmountDue_CALCULATED], T1.Clients_MobilePhoneStripped, T1.Clients_UserDefined7, T1.Clients_FeeStatus, T1.Clients_LastTimeJobAddedSchedulePoints, T1.[Clients.UnusedUnallocatedAmount_CALCULATED], T1.[Clients.UnusedRealAccumulatedAmount_CALCULATED], T1.[Clients.UnusedVirtualAccumulatedAmount_CALCULATED], T1.[Clients.ClientFirstValidReceipt_CALCULATED], T1.[Clients.TotalValidReceipts_CALCULATED], T1.[Clients.PendingReservedFunds_CALCULATED], T1.[Clients.ClientCreditsRemaining_CALCULATED], T1.[Clients.BalanceExternalAccounts_CALCULATED], T1.Clients_NotesPlainTextReadOnly, T1.Clients_DriverLicense, T1.[Clients.ClientIncome_CALCULATED], T1.[Clients.ClientBudget_CALCULATED], T1.Clients_DefaultCoAppID, T1.[Clients.EffectiveCommunicationMethod_CALCULATED], T1.Clients_PSUserDefined1, T1.Clients_PSUserDefined2, T1.Clients_PSUserDefined3, T1.Clients_PSUserDefined4, T1.Clients_PSUserDefined5, T1.Clients_ClosedBy, T1.[Clients.NonDMPAmount_CALCULATED], T1.Clients_PaymentDueDate, T1.[Clients.ClientLastValidReceipt_CALCULATED], T1.Clients_EnteredByWebUserName, T1.Clients_HardshipLevel, T1.Clients_ClientType, T1.Clients_CompanyName, T1.Clients_WebSite, T1.Clients_CompanyType, T1.[Clients.TotalNSFReceipts_CALCULATED], T1.Clients_AddressStatus, T1.Clients_SkipNSFFee, T1.Clients_IsBankrupt, T1.Clients_DMPDebtRangeID, T1.Clients_AddressMultiLine, T1.Clients_ImportDataLogID, T1.Clients_Rating, T1.Clients_IsMasterClient, T1.Clients_ClientIDGroup, T1.[Clients.Followup_CALCULATED], T1.[Clients.FollowupDate_CALCULATED], T1.[Clients.FirstContactDate_CALCULATED], T1.[Clients.FirstContactUserID_CALCULATED], T1.[Clients.LastContactDate_CALCULATED], T1.[Clients.LastContactUserID_CALCULATED], T1.[Clients.CheckListItemsRequired_CALCULATED], T1.Clients_CallID, T1.[Clients.LowestForecastedAccumulatedAmount_CALCULATED], T1.Clients_QBID, T1.Clients_ProcessingPolicyGroupID, T1.[Clients.SSN_Masked], T1.[Clients.SSN_Encrypted], T1.Clients_LegalAssistantID, T1.[Clients.ScoreModelID_CALCULATED], T1.[Clients.ScoreModelValue_CALCULATED], T1.[Clients.ScoreModelLastDate_CALCULATED], T1.[Clients.MaxPromisedDate_CALCULATED], T1.Clients_ClientDistributionBatchID, T1.[Clients.LastValidReceiptIDNSFdOrNot_CALCULATED], T1.[Clients.LastValidReceiptNSFd_CALCULATED], T1.[Clients.LastValidReceiptNSFDate_CALCULATED], T1.[Clients.LastValidReceiptDateReceived_CALCULATED], T1.[Clients.LastValidReceiptNSFConsecutiveCount_CALCULATED], T1.Clients_HomePhoneIsMobile, T1.Clients_HomePhoneSMSEnabled, T1.Clients_WorkPhoneIsMobile, T1.Clients_WorkPhoneSMSEnabled, T1.Clients_MobilePhoneIsMobile, T1.Clients_MobilePhoneSMSEnabled, T1.Clients_HomePhoneCarrierID, T1.Clients_WorkPhoneCarrierID, T1.Clients_OtherPhoneCarrierID, T1.Clients_MobileCarrierID, T1.Clients_PayPriorityOrderDesignatedByClient, T1.Clients_ContactScheduleID, T1.[Clients.FirstClearedReceiptDate_CALCULATED], T1.Clients_YodleeUserName, T1.Clients_YodleeStatus, T1.[Clients.TimeToGMT_CALCULATED], T1.[Clients.NextAccountOrdinal_CALCULATED], T1.Clients_MasterCreditorID, T1.Clients_IDType, T1.Clients_ChannelID, T1.Clients_RegionID, T1.Clients_InsuranceCompanyID, T1.Clients_CostCenter, T1.Clients_CreditLimit, T1.Clients_PaymentTermID, T1.[Clients.ClientRequirement_CALCULATED], T1.Clients_PSUserDefined6, T1.Clients_PSUserDefined7, T1.Clients_PSUserDefined8, T1.Clients_PSUserDefined9, T1.Clients_ClientIDGroupSecondary)
    FROM (
        SELECT 
            T.ClientID AS Clients_ClientID, 
            T.SSN AS Clients_SSN, 
            T.LastName AS Clients_LastName, 
            T.FirstName AS Clients_FirstName, 
            T.MiddleName AS Clients_MiddleName, 
            T.Results AS Clients_Results, 
            T.Referral AS Clients_Referral, 
            T.Counselor AS Clients_Counselor, 
            T.LocationID AS Clients_LocationID, 
            T.PaymentDay AS Clients_PaymentDay, 
            T.FDisDate AS Clients_FDisDate, 
            T.WholeName AS Clients_WholeName, 
            T.Address1 AS Clients_Address1, 
            T.Address2 AS Clients_Address2, 
            T.City AS Clients_City, 
            T.State AS Clients_State, 
            T.ZIP AS Clients_ZIP, 
            T.Country AS Clients_Country, 
            T.HomePhone AS Clients_HomePhone, 
            T.WorkPhone AS Clients_WorkPhone, 
            T.OtherPhone AS Clients_OtherPhone, 
            T.LastPaymentDate AS Clients_LastPaymentDate, 
            T.LastPaymentAmount AS Clients_LastPaymentAmount, 
            T.DateEntered AS Clients_DateEntered, 
            T.DateStart AS Clients_DateStart, 
            T.DateClose AS Clients_DateClose, 
            T.CloseReason AS Clients_CloseReason, 
            T.Note AS Clients_Note, 
            T.StatementNote AS Clients_StatementNote, 
            T.Active AS Clients_Active, 
            T.EditableUntil AS Clients_EditableUntil, 
            T.SalesmanID AS Clients_SalesmanID, 
            T.SalesmanType AS Clients_SalesmanType, 
            T.SalesmanUID AS Clients_SalesmanUID, 
            T.Fax AS Clients_Fax, 
            T.Email AS Clients_Email, 
            T.EmailStatus AS Clients_EmailStatus, 
            T.UseACH AS Clients_UseACH, 
            T.Language AS Clients_Language, 
            T.TempClient AS Clients_TempClient, 
            T.MonthlyStatementPrinted AS Clients_MonthlyStatementPrinted, 
            T.MonthlyStatementSDATE AS Clients_MonthlyStatementSDATE, 
            T.MonthlyStatementEDATE AS Clients_MonthlyStatementEDATE, 
            T.FirstPmtRcvd AS Clients_FirstPmtRcvd, 
            T.OperatorStamp AS Clients_OperatorStamp, 
            T.DateTimeStamp AS Clients_DateTimeStamp, 
            T.upsize_ts AS [Clients.upsize_ts], 
            T.ClientStatus AS Clients_ClientStatus, 
            T.LeadClientID AS Clients_LeadClientID, 
            T.UserDefined1 AS Clients_UserDefined1, 
            T.UserDefined2 AS Clients_UserDefined2, 
            T.UserDefined3 AS Clients_UserDefined3, 
            T.UserDefined4 AS Clients_UserDefined4, 
            T.UserDefined5 AS Clients_UserDefined5, 
            T.StatusChangedOn AS Clients_StatusChangedOn, 
            T.CurrentACHGroupID AS Clients_CurrentACHGroupID, 
            T.ACHNote AS Clients_ACHNote, 
            T.TasksLockedByUserID AS Clients_TasksLockedByUserID, 
            T.CallBack AS Clients_CallBack, 
            T.EnteredBy AS Clients_EnteredBy, 
            T.SetServiceFee AS Clients_SetServiceFee, 
            T.DefaultBankAccount AS Clients_DefaultBankAccount, 
            T.DND AS Clients_DND, 
            T.UserDefined6 AS Clients_UserDefined6, 
            T.AdvertisingID AS Clients_AdvertisingID, 
            T.Mobile AS Clients_Mobile, 
            T.MonthlyServiceFeeCalculatedOn AS Clients_MonthlyServiceFeeCalculatedOn, 
            T.CompletionBonusBatchID AS Clients_CompletionBonusBatchID, 
            T.ClientAdminStatus AS Clients_ClientAdminStatus, 
            T.AppointmentSpecialist AS Clients_AppointmentSpecialist, 
            T.AccountManager AS Clients_AccountManager, 
            T.Salutation AS Clients_Salutation, 
            T.PreferredCommunicationMethod AS Clients_PreferredCommunicationMethod, 
            T.WorkPhoneTime AS Clients_WorkPhoneTime, 
            T.HomePhoneTime AS Clients_HomePhoneTime, 
            T.MobilePhoneTime AS Clients_MobilePhoneTime, 
            T.WorkPhoneType AS Clients_WorkPhoneType, 
            T.HomePhoneType AS Clients_HomePhoneType, 
            T.MobilePhoneType AS Clients_MobilePhoneType, 
            T.FileReceivedOn AS Clients_FileReceivedOn, 
            T.ProgramFeeDueDate AS Clients_ProgramFeeDueDate, 
            T.ProgramLength AS Clients_ProgramLength, 
            T.ProgramScheduleID AS Clients_ProgramScheduleID, 
            T.Address1CommunicationPreferred AS Clients_Address1CommunicationPreferred, 
            T.Address1CommunicationDoNotUse AS Clients_Address1CommunicationDoNotUse, 
            T.HomePhoneCommunicationPreferred AS Clients_HomePhoneCommunicationPreferred, 
            T.HomePhoneCommunicationDoNotUse AS Clients_HomePhoneCommunicationDoNotUse, 
            T.WorkPhoneCommunicationPreferred AS Clients_WorkPhoneCommunicationPreferred, 
            T.WorkPhoneCommunicationDoNotUse AS Clients_WorkPhoneCommunicationDoNotUse, 
            T.OtherPhoneCommunicationPreferred AS Clients_OtherPhoneCommunicationPreferred, 
            T.OtherPhoneCommunicationDoNotUse AS Clients_OtherPhoneCommunicationDoNotUse, 
            T.EmailCommunicationPreferred AS Clients_EmailCommunicationPreferred, 
            T.EmailCommunicationDoNotUse AS Clients_EmailCommunicationDoNotUse, 
            T.FaxCommunicationPreferred AS Clients_FaxCommunicationPreferred, 
            T.FaxCommunicationDoNotUse AS Clients_FaxCommunicationDoNotUse, 
            T.MobileCommunicationPreferred AS Clients_MobileCommunicationPreferred, 
            T.MobileCommunicationDoNotUse AS Clients_MobileCommunicationDoNotUse, 
            T.HomePhoneStripped AS Clients_HomePhoneStripped, 
            T.WorkPhoneStripped AS Clients_WorkPhoneStripped, 
            T.OtherPhoneStripped AS Clients_OtherPhoneStripped, 
            T.FAXStripped AS Clients_FAXStripped, 
            T.AmountDue_CALCULATED AS [Clients.AmountDue_CALCULATED], 
            T.MobilePhoneStripped AS Clients_MobilePhoneStripped, 
            T.UserDefined7 AS Clients_UserDefined7, 
            T.FeeStatus AS Clients_FeeStatus, 
            T.LastTimeJobAddedSchedulePoints AS Clients_LastTimeJobAddedSchedulePoints, 
            T.UnusedUnallocatedAmount_CALCULATED AS [Clients.UnusedUnallocatedAmount_CALCULATED], 
            T.UnusedRealAccumulatedAmount_CALCULATED AS [Clients.UnusedRealAccumulatedAmount_CALCULATED], 
            T.UnusedVirtualAccumulatedAmount_CALCULATED AS [Clients.UnusedVirtualAccumulatedAmount_CALCULATED], 
            T.ClientFirstValidReceipt_CALCULATED AS [Clients.ClientFirstValidReceipt_CALCULATED], 
            T.TotalValidReceipts_CALCULATED AS [Clients.TotalValidReceipts_CALCULATED], 
            T.PendingReservedFunds_CALCULATED AS [Clients.PendingReservedFunds_CALCULATED], 
            T.ClientCreditsRemaining_CALCULATED AS [Clients.ClientCreditsRemaining_CALCULATED], 
            T.BalanceExternalAccounts_CALCULATED AS [Clients.BalanceExternalAccounts_CALCULATED], 
            T.NotesPlainTextReadOnly AS Clients_NotesPlainTextReadOnly, 
            T.DriverLicense AS Clients_DriverLicense, 
            T.ClientIncome_CALCULATED AS [Clients.ClientIncome_CALCULATED], 
            T.ClientBudget_CALCULATED AS [Clients.ClientBudget_CALCULATED], 
            T.DefaultCoAppID AS Clients_DefaultCoAppID, 
            T.EffectiveCommunicationMethod_CALCULATED AS [Clients.EffectiveCommunicationMethod_CALCULATED], 
            T.PSUserDefined1 AS Clients_PSUserDefined1, 
            T.PSUserDefined2 AS Clients_PSUserDefined2, 
            T.PSUserDefined3 AS Clients_PSUserDefined3, 
            T.PSUserDefined4 AS Clients_PSUserDefined4, 
            T.PSUserDefined5 AS Clients_PSUserDefined5, 
            T.ClosedBy AS Clients_ClosedBy, 
            T.NonDMPAmount_CALCULATED AS [Clients.NonDMPAmount_CALCULATED], 
            T.PaymentDueDate AS Clients_PaymentDueDate, 
            T.ClientLastValidReceipt_CALCULATED AS [Clients.ClientLastValidReceipt_CALCULATED], 
            T.EnteredByWebUserName AS Clients_EnteredByWebUserName, 
            T.HardshipLevel AS Clients_HardshipLevel, 
            T.ClientType AS Clients_ClientType, 
            T.CompanyName AS Clients_CompanyName, 
            T.WebSite AS Clients_WebSite, 
            T.CompanyType AS Clients_CompanyType, 
            T.TotalNSFReceipts_CALCULATED AS [Clients.TotalNSFReceipts_CALCULATED], 
            T.AddressStatus AS Clients_AddressStatus, 
            T.SkipNSFFee AS Clients_SkipNSFFee, 
            T.IsBankrupt AS Clients_IsBankrupt, 
            T.DMPDebtRangeID AS Clients_DMPDebtRangeID, 
            T.AddressMultiLine AS Clients_AddressMultiLine, 
            T.ImportDataLogID AS Clients_ImportDataLogID, 
            T.Rating AS Clients_Rating, 
            T.IsMasterClient AS Clients_IsMasterClient, 
            T.ClientIDGroup AS Clients_ClientIDGroup, 
            T.Followup_CALCULATED AS [Clients.Followup_CALCULATED], 
            T.FollowupDate_CALCULATED AS [Clients.FollowupDate_CALCULATED], 
            T.FirstContactDate_CALCULATED AS [Clients.FirstContactDate_CALCULATED], 
            T.FirstContactUserID_CALCULATED AS [Clients.FirstContactUserID_CALCULATED], 
            T.LastContactDate_CALCULATED AS [Clients.LastContactDate_CALCULATED], 
            T.LastContactUserID_CALCULATED AS [Clients.LastContactUserID_CALCULATED], 
            T.CheckListItemsRequired_CALCULATED AS [Clients.CheckListItemsRequired_CALCULATED], 
            T.CallID AS Clients_CallID, 
            T.LowestForecastedAccumulatedAmount_CALCULATED AS [Clients.LowestForecastedAccumulatedAmount_CALCULATED], 
            T.QBID AS Clients_QBID, 
            T.ProcessingPolicyGroupID AS Clients_ProcessingPolicyGroupID, 
            T.SSN_Masked AS [Clients.SSN_Masked], 
            T.SSN_Encrypted AS [Clients.SSN_Encrypted], 
            T.LegalAssistantID AS Clients_LegalAssistantID, 
            T.ScoreModelID_CALCULATED AS [Clients.ScoreModelID_CALCULATED], 
            T.ScoreModelValue_CALCULATED AS [Clients.ScoreModelValue_CALCULATED], 
            T.ScoreModelLastDate_CALCULATED AS [Clients.ScoreModelLastDate_CALCULATED], 
            T.MaxPromisedDate_CALCULATED AS [Clients.MaxPromisedDate_CALCULATED], 
            T.ClientDistributionBatchID AS Clients_ClientDistributionBatchID, 
            T.LastValidReceiptIDNSFdOrNot_CALCULATED AS [Clients.LastValidReceiptIDNSFdOrNot_CALCULATED], 
            T.LastValidReceiptNSFd_CALCULATED AS [Clients.LastValidReceiptNSFd_CALCULATED], 
            T.LastValidReceiptNSFDate_CALCULATED AS [Clients.LastValidReceiptNSFDate_CALCULATED], 
            T.LastValidReceiptDateReceived_CALCULATED AS [Clients.LastValidReceiptDateReceived_CALCULATED], 
            T.LastValidReceiptNSFConsecutiveCount_CALCULATED AS [Clients.LastValidReceiptNSFConsecutiveCount_CALCULATED], 
            T.HomePhoneIsMobile AS Clients_HomePhoneIsMobile, 
            T.HomePhoneSMSEnabled AS Clients_HomePhoneSMSEnabled, 
            T.WorkPhoneIsMobile AS Clients_WorkPhoneIsMobile, 
            T.WorkPhoneSMSEnabled AS Clients_WorkPhoneSMSEnabled, 
            T.MobilePhoneIsMobile AS Clients_MobilePhoneIsMobile, 
            T.MobilePhoneSMSEnabled AS Clients_MobilePhoneSMSEnabled, 
            T.HomePhoneCarrierID AS Clients_HomePhoneCarrierID, 
            T.WorkPhoneCarrierID AS Clients_WorkPhoneCarrierID, 
            T.OtherPhoneCarrierID AS Clients_OtherPhoneCarrierID, 
            T.MobileCarrierID AS Clients_MobileCarrierID, 
            T.PayPriorityOrderDesignatedByClient AS Clients_PayPriorityOrderDesignatedByClient, 
            T.ContactScheduleID AS Clients_ContactScheduleID, 
            T.FirstClearedReceiptDate_CALCULATED AS [Clients.FirstClearedReceiptDate_CALCULATED], 
            T.YodleeUserName AS Clients_YodleeUserName, 
            T.YodleeStatus AS Clients_YodleeStatus, 
            T.TimeToGMT_CALCULATED AS [Clients.TimeToGMT_CALCULATED], 
            T.NextAccountOrdinal_CALCULATED AS [Clients.NextAccountOrdinal_CALCULATED], 
            T.MasterCreditorID AS Clients_MasterCreditorID, 
            T.IDType AS Clients_IDType, 
            T.ChannelID AS Clients_ChannelID, 
            T.RegionID AS Clients_RegionID, 
            T.InsuranceCompanyID AS Clients_InsuranceCompanyID, 
            T.CostCenter AS Clients_CostCenter, 
            T.CreditLimit AS Clients_CreditLimit, 
            T.PaymentTermID AS Clients_PaymentTermID, 
            T.ClientRequirement_CALCULATED AS [Clients.ClientRequirement_CALCULATED], 
            T.PSUserDefined6 AS Clients_PSUserDefined6, 
            T.PSUserDefined7 AS Clients_PSUserDefined7, 
            T.PSUserDefined8 AS Clients_PSUserDefined8, 
            T.PSUserDefined9 AS Clients_PSUserDefined9, 
            T.ClientIDGroupSecondary AS Clients_ClientIDGroupSecondary, 
            True AS _from0
        FROM CreditsoftStoreContainer.Clients AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.CoApps.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CoApps
        [Creditsoft.CoApps](T1.CoApps_CoAppID, T1.CoApps_ClientID, T1.CoApps_CoAppFirst, T1.CoApps_CoAppLast, T1.CoApps_CoAppMiddleName, T1.CoApps_CoAppSSN, T1.CoApps_CoAppDOB, T1.CoApps_CoAppAge, T1.CoApps_CoAppSex, T1.CoApps_CoAppOccupation, T1.CoApps_CoAppEmployer, T1.CoApps_CoAppNetIncome, T1.CoApps_CoAppHomePhone, T1.CoApps_CoAppWorkPhone, T1.CoApps_CoAppOtherPhone, T1.CoApps_CoAppAddress1, T1.CoApps_CoAppAddress2, T1.CoApps_CoAppCity, T1.CoApps_CoAppState, T1.CoApps_CoAppZIP, T1.CoApps_Relationship, T1.CoApps_CoAppEmail, T1.CoApps_CoAppMarital, T1.CoApps_CoAppYearsAtJob, T1.[CoApps.upsize_ts], T1.CoApps_CoAppOccupationCategory, T1.CoApps_CoAppAddress1CommunicationPreferred, T1.CoApps_CoAppAddress1CommunicationDoNotUse, T1.CoApps_CoAppHomePhoneCommunicationPreferred, T1.CoApps_CoAppHomePhoneCommunicationDoNotUse, T1.CoApps_CoAppWorkPhoneCommunicationPreferred, T1.CoApps_CoAppWorkPhoneCommunicationDoNotUse, T1.CoApps_CoAppOtherPhoneCommunicationPreferred, T1.CoApps_CoAppOtherPhoneCommunicationDoNotUse, T1.CoApps_CoAppEmailCommunicationPreferred, T1.CoApps_CoAppEmailCommunicationDoNotUse, T1.CoApps_CoAppHomePhoneStripped, T1.CoApps_CoAppWorkPhoneStripped, T1.CoApps_CoAppOtherPhoneStripped, T1.CoApps_LeadID, T1.CoApps_EnteredByWebUserName, T1.CoApps_CoAppEmployed, T1.CoApps_IsBillingContact, T1.[CoApps.CoAppFullName_CALCULATED], T1.CoApps_CoAppActive, T1.[CoApps.CoAppSSN_Masked], T1.CoApps_Note, T1.CoApps_CoAppHomePhoneIsMobile, T1.CoApps_CoAppHomePhoneSMSEnabled, T1.CoApps_CoAppWorkPhoneIsMobile, T1.CoApps_CoAppWorkPhoneSMSEnabled, T1.CoApps_CoAppOtherPhoneIsMobile, T1.CoApps_CoAppOtherPhoneSMSEnabled, T1.CoApps_CoAppHomePhoneType, T1.CoApps_CoAppWorkPhoneType, T1.CoApps_CoAppOtherPhoneType, T1.CoApps_CoAppHomePhoneCarrierID, T1.CoApps_CoAppWorkPhoneCarrierID, T1.CoApps_CoAppOtherPhoneCarrierID, T1.CoApps_CoAppUserDefined1, T1.CoApps_CoAppOccupationCategoryID, T1.CoApps_IsBankrupt, T1.CoApps_BankruptcyAttorneyPhoneNumber, T1.CoApps_BankruptcyFilingDate, T1.CoApps_BankruptcyHearingDate, T1.CoApps_BankruptcyTrusteeLastName, T1.CoApps_BankruptcyTrusteeFirstName, T1.CoApps_BankruptcyTrusteeMiddleName, T1.CoApps_BankruptcyTrusteeAddress1, T1.CoApps_BankruptcyTrusteeAddress2, T1.CoApps_BankruptcyTrusteeCity, T1.CoApps_BankruptcyTrusteeState, T1.CoApps_BankruptcyTrusteeZip, T1.CoApps_BankruptcyTrusteePhoneNumber, T1.CoApps_BankruptcyAttorneyAddress1, T1.CoApps_BankruptcyAttorneyAddress2, T1.CoApps_BankruptcyAttorneyCity, T1.CoApps_BankruptcyAttorneyState, T1.CoApps_BankruptcyAttorneyZip, T1.CoApps_BankruptcyCourtCode, T1.CoApps_BankruptcyCourtAddress1, T1.CoApps_BankruptcyCourtAddress2, T1.CoApps_BankruptcyCourtCity, T1.CoApps_BankruptcyCourtState, T1.CoApps_BankruptcyCourtZip, T1.CoApps_BankruptcyCourtPostalAddress1, T1.CoApps_BankruptcyCourtPostalAddress2, T1.CoApps_BankruptcyCourtPostalCity, T1.CoApps_BankruptcyCourtPostalState, T1.CoApps_BankruptcyCourtPostalZip, T1.CoApps_BankruptcyProofOfClaimIssued, T1.CoApps_BankruptcyProofOfClaimResponseDate, T1.CoApps_BankruptcyProofOfClaimFiledDate, T1.CoApps_BankruptcyProofOfClaimAmount, T1.CoApps_BankruptcyDismissed, T1.CoApps_BankruptcyDismissedDate, T1.CoApps_BankruptcyDischarged, T1.CoApps_BankruptcyDischargedDate, T1.CoApps_BankruptcyChapter, T1.CoApps_BankruptcyAttorneyLastName, T1.CoApps_BankruptcyAttorneyFirstName, T1.CoApps_BankruptcyAttorneyMiddleName, T1.CoApps_BankruptcyCourtDistrictCode, T1.CoApps_BankruptcyCaseNumber)
    FROM (
        SELECT 
            T.CoAppID AS CoApps_CoAppID, 
            T.ClientID AS CoApps_ClientID, 
            T.CoAppFirst AS CoApps_CoAppFirst, 
            T.CoAppLast AS CoApps_CoAppLast, 
            T.CoAppMiddleName AS CoApps_CoAppMiddleName, 
            T.CoAppSSN AS CoApps_CoAppSSN, 
            T.CoAppDOB AS CoApps_CoAppDOB, 
            T.CoAppAge AS CoApps_CoAppAge, 
            T.CoAppSex AS CoApps_CoAppSex, 
            T.CoAppOccupation AS CoApps_CoAppOccupation, 
            T.CoAppEmployer AS CoApps_CoAppEmployer, 
            T.CoAppNetIncome AS CoApps_CoAppNetIncome, 
            T.CoAppHomePhone AS CoApps_CoAppHomePhone, 
            T.CoAppWorkPhone AS CoApps_CoAppWorkPhone, 
            T.CoAppOtherPhone AS CoApps_CoAppOtherPhone, 
            T.CoAppAddress1 AS CoApps_CoAppAddress1, 
            T.CoAppAddress2 AS CoApps_CoAppAddress2, 
            T.CoAppCity AS CoApps_CoAppCity, 
            T.CoAppState AS CoApps_CoAppState, 
            T.CoAppZIP AS CoApps_CoAppZIP, 
            T.[Relationship] AS CoApps_Relationship, 
            T.CoAppEmail AS CoApps_CoAppEmail, 
            T.CoAppMarital AS CoApps_CoAppMarital, 
            T.CoAppYearsAtJob AS CoApps_CoAppYearsAtJob, 
            T.upsize_ts AS [CoApps.upsize_ts], 
            T.CoAppOccupationCategory AS CoApps_CoAppOccupationCategory, 
            T.CoAppAddress1CommunicationPreferred AS CoApps_CoAppAddress1CommunicationPreferred, 
            T.CoAppAddress1CommunicationDoNotUse AS CoApps_CoAppAddress1CommunicationDoNotUse, 
            T.CoAppHomePhoneCommunicationPreferred AS CoApps_CoAppHomePhoneCommunicationPreferred, 
            T.CoAppHomePhoneCommunicationDoNotUse AS CoApps_CoAppHomePhoneCommunicationDoNotUse, 
            T.CoAppWorkPhoneCommunicationPreferred AS CoApps_CoAppWorkPhoneCommunicationPreferred, 
            T.CoAppWorkPhoneCommunicationDoNotUse AS CoApps_CoAppWorkPhoneCommunicationDoNotUse, 
            T.CoAppOtherPhoneCommunicationPreferred AS CoApps_CoAppOtherPhoneCommunicationPreferred, 
            T.CoAppOtherPhoneCommunicationDoNotUse AS CoApps_CoAppOtherPhoneCommunicationDoNotUse, 
            T.CoAppEmailCommunicationPreferred AS CoApps_CoAppEmailCommunicationPreferred, 
            T.CoAppEmailCommunicationDoNotUse AS CoApps_CoAppEmailCommunicationDoNotUse, 
            T.CoAppHomePhoneStripped AS CoApps_CoAppHomePhoneStripped, 
            T.CoAppWorkPhoneStripped AS CoApps_CoAppWorkPhoneStripped, 
            T.CoAppOtherPhoneStripped AS CoApps_CoAppOtherPhoneStripped, 
            T.LeadID AS CoApps_LeadID, 
            T.EnteredByWebUserName AS CoApps_EnteredByWebUserName, 
            T.CoAppEmployed AS CoApps_CoAppEmployed, 
            T.IsBillingContact AS CoApps_IsBillingContact, 
            T.CoAppFullName_CALCULATED AS [CoApps.CoAppFullName_CALCULATED], 
            T.CoAppActive AS CoApps_CoAppActive, 
            T.CoAppSSN_Masked AS [CoApps.CoAppSSN_Masked], 
            T.Note AS CoApps_Note, 
            T.CoAppHomePhoneIsMobile AS CoApps_CoAppHomePhoneIsMobile, 
            T.CoAppHomePhoneSMSEnabled AS CoApps_CoAppHomePhoneSMSEnabled, 
            T.CoAppWorkPhoneIsMobile AS CoApps_CoAppWorkPhoneIsMobile, 
            T.CoAppWorkPhoneSMSEnabled AS CoApps_CoAppWorkPhoneSMSEnabled, 
            T.CoAppOtherPhoneIsMobile AS CoApps_CoAppOtherPhoneIsMobile, 
            T.CoAppOtherPhoneSMSEnabled AS CoApps_CoAppOtherPhoneSMSEnabled, 
            T.CoAppHomePhoneType AS CoApps_CoAppHomePhoneType, 
            T.CoAppWorkPhoneType AS CoApps_CoAppWorkPhoneType, 
            T.CoAppOtherPhoneType AS CoApps_CoAppOtherPhoneType, 
            T.CoAppHomePhoneCarrierID AS CoApps_CoAppHomePhoneCarrierID, 
            T.CoAppWorkPhoneCarrierID AS CoApps_CoAppWorkPhoneCarrierID, 
            T.CoAppOtherPhoneCarrierID AS CoApps_CoAppOtherPhoneCarrierID, 
            T.CoAppUserDefined1 AS CoApps_CoAppUserDefined1, 
            T.CoAppOccupationCategoryID AS CoApps_CoAppOccupationCategoryID, 
            T.IsBankrupt AS CoApps_IsBankrupt, 
            T.BankruptcyAttorneyPhoneNumber AS CoApps_BankruptcyAttorneyPhoneNumber, 
            T.BankruptcyFilingDate AS CoApps_BankruptcyFilingDate, 
            T.BankruptcyHearingDate AS CoApps_BankruptcyHearingDate, 
            T.BankruptcyTrusteeLastName AS CoApps_BankruptcyTrusteeLastName, 
            T.BankruptcyTrusteeFirstName AS CoApps_BankruptcyTrusteeFirstName, 
            T.BankruptcyTrusteeMiddleName AS CoApps_BankruptcyTrusteeMiddleName, 
            T.BankruptcyTrusteeAddress1 AS CoApps_BankruptcyTrusteeAddress1, 
            T.BankruptcyTrusteeAddress2 AS CoApps_BankruptcyTrusteeAddress2, 
            T.BankruptcyTrusteeCity AS CoApps_BankruptcyTrusteeCity, 
            T.BankruptcyTrusteeState AS CoApps_BankruptcyTrusteeState, 
            T.BankruptcyTrusteeZip AS CoApps_BankruptcyTrusteeZip, 
            T.BankruptcyTrusteePhoneNumber AS CoApps_BankruptcyTrusteePhoneNumber, 
            T.BankruptcyAttorneyAddress1 AS CoApps_BankruptcyAttorneyAddress1, 
            T.BankruptcyAttorneyAddress2 AS CoApps_BankruptcyAttorneyAddress2, 
            T.BankruptcyAttorneyCity AS CoApps_BankruptcyAttorneyCity, 
            T.BankruptcyAttorneyState AS CoApps_BankruptcyAttorneyState, 
            T.BankruptcyAttorneyZip AS CoApps_BankruptcyAttorneyZip, 
            T.BankruptcyCourtCode AS CoApps_BankruptcyCourtCode, 
            T.BankruptcyCourtAddress1 AS CoApps_BankruptcyCourtAddress1, 
            T.BankruptcyCourtAddress2 AS CoApps_BankruptcyCourtAddress2, 
            T.BankruptcyCourtCity AS CoApps_BankruptcyCourtCity, 
            T.BankruptcyCourtState AS CoApps_BankruptcyCourtState, 
            T.BankruptcyCourtZip AS CoApps_BankruptcyCourtZip, 
            T.BankruptcyCourtPostalAddress1 AS CoApps_BankruptcyCourtPostalAddress1, 
            T.BankruptcyCourtPostalAddress2 AS CoApps_BankruptcyCourtPostalAddress2, 
            T.BankruptcyCourtPostalCity AS CoApps_BankruptcyCourtPostalCity, 
            T.BankruptcyCourtPostalState AS CoApps_BankruptcyCourtPostalState, 
            T.BankruptcyCourtPostalZip AS CoApps_BankruptcyCourtPostalZip, 
            T.BankruptcyProofOfClaimIssued AS CoApps_BankruptcyProofOfClaimIssued, 
            T.BankruptcyProofOfClaimResponseDate AS CoApps_BankruptcyProofOfClaimResponseDate, 
            T.BankruptcyProofOfClaimFiledDate AS CoApps_BankruptcyProofOfClaimFiledDate, 
            T.BankruptcyProofOfClaimAmount AS CoApps_BankruptcyProofOfClaimAmount, 
            T.BankruptcyDismissed AS CoApps_BankruptcyDismissed, 
            T.BankruptcyDismissedDate AS CoApps_BankruptcyDismissedDate, 
            T.BankruptcyDischarged AS CoApps_BankruptcyDischarged, 
            T.BankruptcyDischargedDate AS CoApps_BankruptcyDischargedDate, 
            T.BankruptcyChapter AS CoApps_BankruptcyChapter, 
            T.BankruptcyAttorneyLastName AS CoApps_BankruptcyAttorneyLastName, 
            T.BankruptcyAttorneyFirstName AS CoApps_BankruptcyAttorneyFirstName, 
            T.BankruptcyAttorneyMiddleName AS CoApps_BankruptcyAttorneyMiddleName, 
            T.BankruptcyCourtDistrictCode AS CoApps_BankruptcyCourtDistrictCode, 
            T.BankruptcyCaseNumber AS CoApps_BankruptcyCaseNumber, 
            True AS _from0
        FROM CreditsoftStoreContainer.CoApps AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Creditors.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Creditors
        [Creditsoft.Creditors](T1.Creditors_CreditorID, T1.Creditors_Name, T1.Creditors_Address1, T1.Creditors_Address2, T1.Creditors_City, T1.Creditors_State, T1.Creditors_ZIP, T1.Creditors_Telephone, T1.Creditors_AltTelephone, T1.Creditors_Fax, T1.Creditors_ContactPerson, T1.Creditors_FairShare, T1.Creditors_BillingPeriod, T1.Creditors_LastInvoicePrinted, T1.Creditors_Deduct, T1.Creditors_Bill, T1.Creditors_Terms, T1.Creditors_GuideLines, T1.Creditors_ProposalPct, T1.Creditors_PName, T1.Creditors_PAddress1, T1.Creditors_PAddress2, T1.Creditors_PCity, T1.Creditors_PState, T1.Creditors_PZIP, T1.Creditors_PAttn, T1.Creditors_PPhone, T1.Creditors_PFax, T1.Creditors_BName, T1.Creditors_BAddress1, T1.Creditors_BAddress2, T1.Creditors_BCity, T1.Creditors_BState, T1.Creditors_BZIP, T1.Creditors_BAttn, T1.Creditors_BPhone, T1.Creditors_BFax, T1.Creditors_Notes, T1.Creditors_Consolidate, T1.Creditors_Alert, T1.Creditors_APR, T1.Creditors_Codes, T1.Creditors_ShowOnLetters, T1.Creditors_EditableUntil, T1.Creditors_CreditorType, T1.Creditors_Commissionable, T1.Creditors_Active, T1.Creditors_ClientIDcopy, T1.Creditors_MinimumPercent, T1.Creditors_PercentOf, T1.Creditors_MinimumAmount, T1.Creditors_NewCreditorID, T1.Creditors_BillerID, T1.Creditors_DefBankAccountID, T1.Creditors_BillerType, T1.Creditors_ReversalBillerID, T1.Creditors_ReversalAccountNumber, T1.Creditors_TempCreditor, T1.Creditors_OperatorStamp, T1.Creditors_DateTimeStamp, T1.[Creditors.upsize_ts], T1.Creditors_Generic, T1.Creditors_ReduceInterest, T1.Creditors_EliminateInterest, T1.Creditors_ReAge, T1.Creditors_ReAgeAfter, T1.Creditors_DropLateFees, T1.Creditors_FirstInvoiceDate, T1.Creditors_APROutsideCC, T1.Creditors_UseForEnrollment, T1.Creditors_PContact, T1.Creditors_BContact, T1.Creditors_ValidateMasks, T1.Creditors_ReducePoints, T1.Creditors_UseRPPSProposals, T1.Creditors_RPPSBillerIDOverride, T1.Creditors_PerCheck, T1.Creditors_PerBill, T1.Creditors_Guaranteed, T1.Creditors_Profile, T1.Creditors_UserDefined1, T1.Creditors_UserDefined2, T1.Creditors_FullBudgetDisclosure, T1.Creditors_FullBudgetCreditors, T1.Creditors_CreditorAdded, T1.Creditors_UserDefinedCode, T1.Creditors_OverrideMinimumInvoiceAmount, T1.Creditors_UseForInternet, T1.Creditors_BPName, T1.Creditors_BPAddress1, T1.Creditors_BPAddress2, T1.Creditors_BPCity, T1.Creditors_BPState, T1.Creditors_BPZip, T1.Creditors_BPAttn, T1.Creditors_BPPhone, T1.Creditors_BPFax, T1.Creditors_DateEntered, T1.Creditors_SkipBulkProposals, T1.Creditors_SkipImportMask, T1.Creditors_Password, T1.Creditors_QBID, T1.Creditors_EditSequence, T1.Creditors_PADMinimum, T1.Creditors_Email, T1.Creditors_DefaultSettlementPercentage, T1.Creditors_ContributeInFS, T1.Creditors_Company, T1.Creditors_MaximumFairShareAmount, T1.Creditors_RequireStubWithInvoice, T1.Creditors_BankRoutingNumber, T1.Creditors_BankAccountNumber, T1.Creditors_BankName, T1.Creditors_BankCity, T1.Creditors_BankState, T1.Creditors_BankZipCode, T1.Creditors_OverridePayOffBehavior, T1.Creditors_DefaultCreditorPaymentType, T1.Creditors_AllowPreBankruptcy, T1.Creditors_AllowLessThanFull, T1.Creditors_UsePhonePay, T1.Creditors_TelephoneStripped, T1.Creditors_AltTelephoneStripped, T1.Creditors_FaxStripped, T1.Creditors_BPhoneStripped, T1.Creditors_PPhoneStripped, T1.Creditors_BFaxStripped, T1.Creditors_PFaxStripped, T1.Creditors_BPPhoneStripped, T1.Creditors_BPFaxStripped, T1.Creditors_BankAddress, T1.Creditors_AddedBy, T1.Creditors_LoggedUserID, T1.Creditors_LoggedOn, T1.Creditors_DropLateFeesAfter, T1.Creditors_DropOverlimitFees, T1.Creditors_DropOverlimitFeesAfter, T1.Creditors_CreditorGroupCreditorID, T1.Creditors_OtherFeesNotes, T1.Creditors_ReageFrequency, T1.Creditors_AllowRebates, T1.Creditors_RebatesNotes, T1.Creditors_DropPolicyNotes, T1.Creditors_InterestRangeNotes, T1.Creditors_MaxMonthsToPayout, T1.Creditors_CreditorGroupIsParent, T1.Creditors_AutoResendProposals, T1.Creditors_DefaultHoldProposals, T1.Creditors_DefaultHoldProposalUntilFirstReceipt, T1.Creditors_RebatesPct, T1.Creditors_EmailStatus, T1.Creditors_CompoundFrequency, T1.Creditors_SendProposalsByFax, T1.Creditors_AllowFeeOverCalculatedDefault, T1.Creditors_NotesPlainTextReadOnly, T1.Creditors_FileID, T1.Creditors_HoldProposalsDaysBeforeNextDisbursement, T1.Creditors_EnableMod10Validation, T1.Creditors_MinimumPercentBeforeDMP, T1.Creditors_PercentOfBeforeDMP, T1.Creditors_MinimumAmountBeforeDMP, T1.Creditors_UserDefined3, T1.Creditors_AllowCDV, T1.Creditors_ContactScheduleID, T1.Creditors_AllowCDD, T1.Creditors_GCSPayeeID, T1.Creditors_GCSPayeeAddressID, T1.Creditors_GCSPayeeContactID, T1.Creditors_GCSPayeeBankID, T1.Creditors_AllowCDN, T1.Creditors_ReturnCDR, T1.Creditors_ReturnCDT, T1.Creditors_ReturnCDA, T1.Creditors_ReturnCDV, T1.Creditors_ReturnCDC, T1.Creditors_ReturnCDM, T1.Creditors_AllowCDF, T1.Creditors_DefaultDNDUntilProposalAccepted, T1.Creditors_AllowCallToAction, T1.Creditors_AllowHardship, T1.Creditors_CollectionPlanID, T1.Creditors_InternalFeePercentage, T1.Creditors_ExternalFeePercentage, T1.Creditors_ExternalFeePercentageGuaranteed, T1.Creditors_MaximumFeeAmount, T1.Creditors_AllowReversalOfFeesOnRefunds, T1.Creditors_HideBalance, T1.Creditors_CreditorStatus, T1.Creditors_AddedByWebUserName, T1.Creditors_PortfolioType, T1.Creditors_ReportToCreditBureaus, T1.Creditors_DefaultDebtType, T1.Creditors_SalesForceID, T1.Creditors_ProposalRequiresCDN, T1.Creditors_GCSDirectPayeeID, T1.[Creditors.BankAccountNumber_Masked], T1.Creditors_BACSReferenceNumber, T1.Creditors_BACSSortCode, T1.[Creditors.ResubmissionBillerID_Override], T1.Creditors_UserDefined4, T1.Creditors_UserDefined5, T1.Creditors_UserDefined6, T1.Creditors_UserDefined7, T1.Creditors_HoldProposalsDaysFromQueuing, T1.Creditors_HoldProposalsBasedOnIncomeVariance, T1.[Creditors.M2_CardHolderID_BIN7], T1.[Creditors.M2_BankInfo_LinkedTo_BIN7], T1.[Creditors.M2_BankInfo_NeedsUpdate], T1.[Creditors.M2_CardHolderID_BIN2], T1.Creditors_SQLFormulaID, T1.Creditors_ReducedAPRSQLFormulaID, T1.Creditors_UseReducedAPRFormula, T1.Creditors_UseDefMonthlyPaymentFormula, T1.Creditors_DefaultLoanTerm, T1.[Creditors.M2_BIN2_Counter_CALCULATED], T1.[Creditors.CreditorRequirement_CALCULATED], T1.Creditors_PhoneCommunicationDoNotUse, T1.Creditors_AltPhoneCommunicationDoNotUse, T1.Creditors_PhoneCommunicationPreferred, T1.Creditors_AltPhoneCommunicationPreferred, T1.Creditors_PPhoneCommunicationDoNotUse, T1.Creditors_BPhoneCommunicationDoNotUse, T1.Creditors_PPhoneCommunicationPreferred, T1.Creditors_BPhoneCommunicationPreferred, T1.Creditors_Product, T1.Creditors_DefBillPayBankAccountID, T1.Creditors_BillPayBillerID, T1.Creditors_YodleeDefaultContentServiceID, T1.Creditors_PopularBillPayPayee, T1.[Creditors.IPayout_CheckProfileID], T1.[Creditors.IPayout_WireProfileID], T1.[Creditors.IPayout_PhonePayProfileID], T1.[Creditors.PaymentProcessor_NeedsUpdate], T1.[Creditors.IPayout_UserName], T1.Creditors_SkipFairShareForNonAcceptedAccounts, T1.[Creditors.EIN_SSN], T1.[Creditors.EIN_SSN_Masked], T1.Creditors_IDType)
    FROM (
        SELECT 
            T.CreditorID AS Creditors_CreditorID, 
            T.Name AS Creditors_Name, 
            T.Address1 AS Creditors_Address1, 
            T.Address2 AS Creditors_Address2, 
            T.City AS Creditors_City, 
            T.State AS Creditors_State, 
            T.ZIP AS Creditors_ZIP, 
            T.Telephone AS Creditors_Telephone, 
            T.AltTelephone AS Creditors_AltTelephone, 
            T.Fax AS Creditors_Fax, 
            T.ContactPerson AS Creditors_ContactPerson, 
            T.FairShare AS Creditors_FairShare, 
            T.BillingPeriod AS Creditors_BillingPeriod, 
            T.LastInvoicePrinted AS Creditors_LastInvoicePrinted, 
            T.Deduct AS Creditors_Deduct, 
            T.Bill AS Creditors_Bill, 
            T.Terms AS Creditors_Terms, 
            T.GuideLines AS Creditors_GuideLines, 
            T.ProposalPct AS Creditors_ProposalPct, 
            T.PName AS Creditors_PName, 
            T.PAddress1 AS Creditors_PAddress1, 
            T.PAddress2 AS Creditors_PAddress2, 
            T.PCity AS Creditors_PCity, 
            T.PState AS Creditors_PState, 
            T.PZIP AS Creditors_PZIP, 
            T.PAttn AS Creditors_PAttn, 
            T.PPhone AS Creditors_PPhone, 
            T.PFax AS Creditors_PFax, 
            T.BName AS Creditors_BName, 
            T.BAddress1 AS Creditors_BAddress1, 
            T.BAddress2 AS Creditors_BAddress2, 
            T.BCity AS Creditors_BCity, 
            T.BState AS Creditors_BState, 
            T.BZIP AS Creditors_BZIP, 
            T.BAttn AS Creditors_BAttn, 
            T.BPhone AS Creditors_BPhone, 
            T.BFax AS Creditors_BFax, 
            T.Notes AS Creditors_Notes, 
            T.Consolidate AS Creditors_Consolidate, 
            T.Alert AS Creditors_Alert, 
            T.APR AS Creditors_APR, 
            T.Codes AS Creditors_Codes, 
            T.ShowOnLetters AS Creditors_ShowOnLetters, 
            T.EditableUntil AS Creditors_EditableUntil, 
            T.CreditorType AS Creditors_CreditorType, 
            T.Commissionable AS Creditors_Commissionable, 
            T.Active AS Creditors_Active, 
            T.ClientIDcopy AS Creditors_ClientIDcopy, 
            T.MinimumPercent AS Creditors_MinimumPercent, 
            T.PercentOf AS Creditors_PercentOf, 
            T.MinimumAmount AS Creditors_MinimumAmount, 
            T.NewCreditorID AS Creditors_NewCreditorID, 
            T.BillerID AS Creditors_BillerID, 
            T.DefBankAccountID AS Creditors_DefBankAccountID, 
            T.BillerType AS Creditors_BillerType, 
            T.ReversalBillerID AS Creditors_ReversalBillerID, 
            T.ReversalAccountNumber AS Creditors_ReversalAccountNumber, 
            T.TempCreditor AS Creditors_TempCreditor, 
            T.OperatorStamp AS Creditors_OperatorStamp, 
            T.DateTimeStamp AS Creditors_DateTimeStamp, 
            T.upsize_ts AS [Creditors.upsize_ts], 
            T.Generic AS Creditors_Generic, 
            T.ReduceInterest AS Creditors_ReduceInterest, 
            T.EliminateInterest AS Creditors_EliminateInterest, 
            T.ReAge AS Creditors_ReAge, 
            T.ReAgeAfter AS Creditors_ReAgeAfter, 
            T.DropLateFees AS Creditors_DropLateFees, 
            T.FirstInvoiceDate AS Creditors_FirstInvoiceDate, 
            T.APROutsideCC AS Creditors_APROutsideCC, 
            T.UseForEnrollment AS Creditors_UseForEnrollment, 
            T.PContact AS Creditors_PContact, 
            T.BContact AS Creditors_BContact, 
            T.ValidateMasks AS Creditors_ValidateMasks, 
            T.ReducePoints AS Creditors_ReducePoints, 
            T.UseRPPSProposals AS Creditors_UseRPPSProposals, 
            T.RPPSBillerIDOverride AS Creditors_RPPSBillerIDOverride, 
            T.PerCheck AS Creditors_PerCheck, 
            T.PerBill AS Creditors_PerBill, 
            T.Guaranteed AS Creditors_Guaranteed, 
            T.Profile AS Creditors_Profile, 
            T.UserDefined1 AS Creditors_UserDefined1, 
            T.UserDefined2 AS Creditors_UserDefined2, 
            T.FullBudgetDisclosure AS Creditors_FullBudgetDisclosure, 
            T.FullBudgetCreditors AS Creditors_FullBudgetCreditors, 
            T.CreditorAdded AS Creditors_CreditorAdded, 
            T.UserDefinedCode AS Creditors_UserDefinedCode, 
            T.OverrideMinimumInvoiceAmount AS Creditors_OverrideMinimumInvoiceAmount, 
            T.UseForInternet AS Creditors_UseForInternet, 
            T.BPName AS Creditors_BPName, 
            T.BPAddress1 AS Creditors_BPAddress1, 
            T.BPAddress2 AS Creditors_BPAddress2, 
            T.BPCity AS Creditors_BPCity, 
            T.BPState AS Creditors_BPState, 
            T.BPZip AS Creditors_BPZip, 
            T.BPAttn AS Creditors_BPAttn, 
            T.BPPhone AS Creditors_BPPhone, 
            T.BPFax AS Creditors_BPFax, 
            T.DateEntered AS Creditors_DateEntered, 
            T.SkipBulkProposals AS Creditors_SkipBulkProposals, 
            T.SkipImportMask AS Creditors_SkipImportMask, 
            T.Password AS Creditors_Password, 
            T.QBID AS Creditors_QBID, 
            T.EditSequence AS Creditors_EditSequence, 
            T.PADMinimum AS Creditors_PADMinimum, 
            T.Email AS Creditors_Email, 
            T.DefaultSettlementPercentage AS Creditors_DefaultSettlementPercentage, 
            T.ContributeInFS AS Creditors_ContributeInFS, 
            T.Company AS Creditors_Company, 
            T.MaximumFairShareAmount AS Creditors_MaximumFairShareAmount, 
            T.RequireStubWithInvoice AS Creditors_RequireStubWithInvoice, 
            T.BankRoutingNumber AS Creditors_BankRoutingNumber, 
            T.BankAccountNumber AS Creditors_BankAccountNumber, 
            T.BankName AS Creditors_BankName, 
            T.BankCity AS Creditors_BankCity, 
            T.BankState AS Creditors_BankState, 
            T.BankZipCode AS Creditors_BankZipCode, 
            T.OverridePayOffBehavior AS Creditors_OverridePayOffBehavior, 
            T.DefaultCreditorPaymentType AS Creditors_DefaultCreditorPaymentType, 
            T.AllowPreBankruptcy AS Creditors_AllowPreBankruptcy, 
            T.AllowLessThanFull AS Creditors_AllowLessThanFull, 
            T.UsePhonePay AS Creditors_UsePhonePay, 
            T.TelephoneStripped AS Creditors_TelephoneStripped, 
            T.AltTelephoneStripped AS Creditors_AltTelephoneStripped, 
            T.FaxStripped AS Creditors_FaxStripped, 
            T.BPhoneStripped AS Creditors_BPhoneStripped, 
            T.PPhoneStripped AS Creditors_PPhoneStripped, 
            T.BFaxStripped AS Creditors_BFaxStripped, 
            T.PFaxStripped AS Creditors_PFaxStripped, 
            T.BPPhoneStripped AS Creditors_BPPhoneStripped, 
            T.BPFaxStripped AS Creditors_BPFaxStripped, 
            T.BankAddress AS Creditors_BankAddress, 
            T.AddedBy AS Creditors_AddedBy, 
            T.LoggedUserID AS Creditors_LoggedUserID, 
            T.LoggedOn AS Creditors_LoggedOn, 
            T.DropLateFeesAfter AS Creditors_DropLateFeesAfter, 
            T.DropOverlimitFees AS Creditors_DropOverlimitFees, 
            T.DropOverlimitFeesAfter AS Creditors_DropOverlimitFeesAfter, 
            T.CreditorGroupCreditorID AS Creditors_CreditorGroupCreditorID, 
            T.OtherFeesNotes AS Creditors_OtherFeesNotes, 
            T.ReageFrequency AS Creditors_ReageFrequency, 
            T.AllowRebates AS Creditors_AllowRebates, 
            T.RebatesNotes AS Creditors_RebatesNotes, 
            T.DropPolicyNotes AS Creditors_DropPolicyNotes, 
            T.InterestRangeNotes AS Creditors_InterestRangeNotes, 
            T.MaxMonthsToPayout AS Creditors_MaxMonthsToPayout, 
            T.CreditorGroupIsParent AS Creditors_CreditorGroupIsParent, 
            T.AutoResendProposals AS Creditors_AutoResendProposals, 
            T.DefaultHoldProposals AS Creditors_DefaultHoldProposals, 
            T.DefaultHoldProposalUntilFirstReceipt AS Creditors_DefaultHoldProposalUntilFirstReceipt, 
            T.RebatesPct AS Creditors_RebatesPct, 
            T.EmailStatus AS Creditors_EmailStatus, 
            T.CompoundFrequency AS Creditors_CompoundFrequency, 
            T.SendProposalsByFax AS Creditors_SendProposalsByFax, 
            T.AllowFeeOverCalculatedDefault AS Creditors_AllowFeeOverCalculatedDefault, 
            T.NotesPlainTextReadOnly AS Creditors_NotesPlainTextReadOnly, 
            T.FileID AS Creditors_FileID, 
            T.HoldProposalsDaysBeforeNextDisbursement AS Creditors_HoldProposalsDaysBeforeNextDisbursement, 
            T.EnableMod10Validation AS Creditors_EnableMod10Validation, 
            T.MinimumPercentBeforeDMP AS Creditors_MinimumPercentBeforeDMP, 
            T.PercentOfBeforeDMP AS Creditors_PercentOfBeforeDMP, 
            T.MinimumAmountBeforeDMP AS Creditors_MinimumAmountBeforeDMP, 
            T.UserDefined3 AS Creditors_UserDefined3, 
            T.AllowCDV AS Creditors_AllowCDV, 
            T.ContactScheduleID AS Creditors_ContactScheduleID, 
            T.AllowCDD AS Creditors_AllowCDD, 
            T.GCSPayeeID AS Creditors_GCSPayeeID, 
            T.GCSPayeeAddressID AS Creditors_GCSPayeeAddressID, 
            T.GCSPayeeContactID AS Creditors_GCSPayeeContactID, 
            T.GCSPayeeBankID AS Creditors_GCSPayeeBankID, 
            T.AllowCDN AS Creditors_AllowCDN, 
            T.ReturnCDR AS Creditors_ReturnCDR, 
            T.ReturnCDT AS Creditors_ReturnCDT, 
            T.ReturnCDA AS Creditors_ReturnCDA, 
            T.ReturnCDV AS Creditors_ReturnCDV, 
            T.ReturnCDC AS Creditors_ReturnCDC, 
            T.ReturnCDM AS Creditors_ReturnCDM, 
            T.AllowCDF AS Creditors_AllowCDF, 
            T.DefaultDNDUntilProposalAccepted AS Creditors_DefaultDNDUntilProposalAccepted, 
            T.AllowCallToAction AS Creditors_AllowCallToAction, 
            T.AllowHardship AS Creditors_AllowHardship, 
            T.CollectionPlanID AS Creditors_CollectionPlanID, 
            T.InternalFeePercentage AS Creditors_InternalFeePercentage, 
            T.ExternalFeePercentage AS Creditors_ExternalFeePercentage, 
            T.ExternalFeePercentageGuaranteed AS Creditors_ExternalFeePercentageGuaranteed, 
            T.MaximumFeeAmount AS Creditors_MaximumFeeAmount, 
            T.AllowReversalOfFeesOnRefunds AS Creditors_AllowReversalOfFeesOnRefunds, 
            T.HideBalance AS Creditors_HideBalance, 
            T.CreditorStatus AS Creditors_CreditorStatus, 
            T.AddedByWebUserName AS Creditors_AddedByWebUserName, 
            T.PortfolioType AS Creditors_PortfolioType, 
            T.ReportToCreditBureaus AS Creditors_ReportToCreditBureaus, 
            T.DefaultDebtType AS Creditors_DefaultDebtType, 
            T.SalesForceID AS Creditors_SalesForceID, 
            T.ProposalRequiresCDN AS Creditors_ProposalRequiresCDN, 
            T.GCSDirectPayeeID AS Creditors_GCSDirectPayeeID, 
            T.BankAccountNumber_Masked AS [Creditors.BankAccountNumber_Masked], 
            T.BACSReferenceNumber AS Creditors_BACSReferenceNumber, 
            T.BACSSortCode AS Creditors_BACSSortCode, 
            T.ResubmissionBillerID_Override AS [Creditors.ResubmissionBillerID_Override], 
            T.UserDefined4 AS Creditors_UserDefined4, 
            T.UserDefined5 AS Creditors_UserDefined5, 
            T.UserDefined6 AS Creditors_UserDefined6, 
            T.UserDefined7 AS Creditors_UserDefined7, 
            T.HoldProposalsDaysFromQueuing AS Creditors_HoldProposalsDaysFromQueuing, 
            T.HoldProposalsBasedOnIncomeVariance AS Creditors_HoldProposalsBasedOnIncomeVariance, 
            T.M2_CardHolderID_BIN7 AS [Creditors.M2_CardHolderID_BIN7], 
            T.M2_BankInfo_LinkedTo_BIN7 AS [Creditors.M2_BankInfo_LinkedTo_BIN7], 
            T.M2_BankInfo_NeedsUpdate AS [Creditors.M2_BankInfo_NeedsUpdate], 
            T.M2_CardHolderID_BIN2 AS [Creditors.M2_CardHolderID_BIN2], 
            T.SQLFormulaID AS Creditors_SQLFormulaID, 
            T.ReducedAPRSQLFormulaID AS Creditors_ReducedAPRSQLFormulaID, 
            T.UseReducedAPRFormula AS Creditors_UseReducedAPRFormula, 
            T.UseDefMonthlyPaymentFormula AS Creditors_UseDefMonthlyPaymentFormula, 
            T.DefaultLoanTerm AS Creditors_DefaultLoanTerm, 
            T.M2_BIN2_Counter_CALCULATED AS [Creditors.M2_BIN2_Counter_CALCULATED], 
            T.CreditorRequirement_CALCULATED AS [Creditors.CreditorRequirement_CALCULATED], 
            T.PhoneCommunicationDoNotUse AS Creditors_PhoneCommunicationDoNotUse, 
            T.AltPhoneCommunicationDoNotUse AS Creditors_AltPhoneCommunicationDoNotUse, 
            T.PhoneCommunicationPreferred AS Creditors_PhoneCommunicationPreferred, 
            T.AltPhoneCommunicationPreferred AS Creditors_AltPhoneCommunicationPreferred, 
            T.PPhoneCommunicationDoNotUse AS Creditors_PPhoneCommunicationDoNotUse, 
            T.BPhoneCommunicationDoNotUse AS Creditors_BPhoneCommunicationDoNotUse, 
            T.PPhoneCommunicationPreferred AS Creditors_PPhoneCommunicationPreferred, 
            T.BPhoneCommunicationPreferred AS Creditors_BPhoneCommunicationPreferred, 
            T.Product AS Creditors_Product, 
            T.DefBillPayBankAccountID AS Creditors_DefBillPayBankAccountID, 
            T.BillPayBillerID AS Creditors_BillPayBillerID, 
            T.YodleeDefaultContentServiceID AS Creditors_YodleeDefaultContentServiceID, 
            T.PopularBillPayPayee AS Creditors_PopularBillPayPayee, 
            T.IPayout_CheckProfileID AS [Creditors.IPayout_CheckProfileID], 
            T.IPayout_WireProfileID AS [Creditors.IPayout_WireProfileID], 
            T.IPayout_PhonePayProfileID AS [Creditors.IPayout_PhonePayProfileID], 
            T.PaymentProcessor_NeedsUpdate AS [Creditors.PaymentProcessor_NeedsUpdate], 
            T.IPayout_UserName AS [Creditors.IPayout_UserName], 
            T.SkipFairShareForNonAcceptedAccounts AS Creditors_SkipFairShareForNonAcceptedAccounts, 
            T.EIN_SSN AS [Creditors.EIN_SSN], 
            T.EIN_SSN_Masked AS [Creditors.EIN_SSN_Masked], 
            T.IDType AS Creditors_IDType, 
            True AS _from0
        FROM CreditsoftStoreContainer.Creditors AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Locations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Locations
        [Creditsoft.Locations](T1.Locations_LocationID, T1.Locations_LocationName, T1.Locations_BackColor, T1.Locations_ForeColor, T1.Locations_LocationAddress1, T1.Locations_LocationAddress2, T1.Locations_LocationCity, T1.Locations_LocationState, T1.Locations_LocationZip, T1.Locations_LocationPhone, T1.Locations_LocationFax, T1.Locations_Division, T1.[Locations.upsize_ts], T1.Locations_DialingRuleSetID, T1.Locations_UserDefinedCode, T1.Locations_MarketingCompanyName, T1.Locations_Website, T1.Locations_APIAffiliateID, T1.Locations_APIFeesGroup, T1.Locations_Product, T1.Locations_Notes)
    FROM (
        SELECT 
            T.LocationID AS Locations_LocationID, 
            T.LocationName AS Locations_LocationName, 
            T.BackColor AS Locations_BackColor, 
            T.ForeColor AS Locations_ForeColor, 
            T.LocationAddress1 AS Locations_LocationAddress1, 
            T.LocationAddress2 AS Locations_LocationAddress2, 
            T.LocationCity AS Locations_LocationCity, 
            T.LocationState AS Locations_LocationState, 
            T.LocationZip AS Locations_LocationZip, 
            T.LocationPhone AS Locations_LocationPhone, 
            T.LocationFax AS Locations_LocationFax, 
            T.Division AS Locations_Division, 
            T.upsize_ts AS [Locations.upsize_ts], 
            T.DialingRuleSetID AS Locations_DialingRuleSetID, 
            T.UserDefinedCode AS Locations_UserDefinedCode, 
            T.MarketingCompanyName AS Locations_MarketingCompanyName, 
            T.Website AS Locations_Website, 
            T.APIAffiliateID AS Locations_APIAffiliateID, 
            T.APIFeesGroup AS Locations_APIFeesGroup, 
            T.Product AS Locations_Product, 
            T.Notes AS Locations_Notes, 
            True AS _from0
        FROM CreditsoftStoreContainer.Locations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Payments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Payments
        [Creditsoft.Payments](T1.Payments_PaymentID, T1.Payments_CheckID, T1.Payments_BankAccountID, T1.Payments_CreditorID, T1.Payments_ClientID, T1.Payments_NCI, T1.Payments_Amount, T1.Payments_Description, T1.Payments_Created, T1.Payments_AccountNumber, T1.Payments_Type, T1.Payments_PaymentIDCopy, T1.Payments_Refunded, T1.Payments_Resubmitted, T1.Payments_BatchID, T1.Payments_ClientCredID, T1.Payments_RefundDetailID, T1.Payments_ProgramScheduleDebtorID, T1.Payments_CommissionBatchID, T1.[Payments.upsize_ts], T1.Payments_FSPaymentID, T1.Payments_TraceNumber, T1.Payments_SettlementScheduleID, T1.Payments_ReversedCommissionBatchID, T1.Payments_PaymentCheckRunID, T1.Payments_FSClientCredID, T1.Payments_NonCommissionable, T1.Payments_AgencyID, T1.[Payments.AccountNumber_Masked], T1.Payments_GCSPaymentID, T1.Payments_GCSDebitID, T1.Payments_PrincipalAmount, T1.Payments_InterestAmount, T1.Payments_GeneratedByCollectionPlan, T1.[Payments.M2_TransactionID_Step1], T1.[Payments.M2_TransactionID_Step2], T1.[Payments.M2_TransComplete], T1.Payments_ClientState, T1.[Payments.PaymentProcessor_TransactionRefID], T1.Payments_TransferBalanceBatchDetailID, T1.Payments_Counselor, T1.[Payments.PaymentProcessor_CreditorProfileID], T1.[Payments.PaymentProcessor_CreditorProfileType], T1.Payments_CreditorGroupCreditorID)
    FROM (
        SELECT 
            T.PaymentID AS Payments_PaymentID, 
            T.CheckID AS Payments_CheckID, 
            T.BankAccountID AS Payments_BankAccountID, 
            T.CreditorID AS Payments_CreditorID, 
            T.ClientID AS Payments_ClientID, 
            T.NCI AS Payments_NCI, 
            T.Amount AS Payments_Amount, 
            T.Description AS Payments_Description, 
            T.Created AS Payments_Created, 
            T.AccountNumber AS Payments_AccountNumber, 
            T.Type AS Payments_Type, 
            T.PaymentIDCopy AS Payments_PaymentIDCopy, 
            T.Refunded AS Payments_Refunded, 
            T.Resubmitted AS Payments_Resubmitted, 
            T.BatchID AS Payments_BatchID, 
            T.ClientCredID AS Payments_ClientCredID, 
            T.RefundDetailID AS Payments_RefundDetailID, 
            T.ProgramScheduleDebtorID AS Payments_ProgramScheduleDebtorID, 
            T.CommissionBatchID AS Payments_CommissionBatchID, 
            T.upsize_ts AS [Payments.upsize_ts], 
            T.FSPaymentID AS Payments_FSPaymentID, 
            T.TraceNumber AS Payments_TraceNumber, 
            T.SettlementScheduleID AS Payments_SettlementScheduleID, 
            T.ReversedCommissionBatchID AS Payments_ReversedCommissionBatchID, 
            T.PaymentCheckRunID AS Payments_PaymentCheckRunID, 
            T.FSClientCredID AS Payments_FSClientCredID, 
            T.NonCommissionable AS Payments_NonCommissionable, 
            T.AgencyID AS Payments_AgencyID, 
            T.AccountNumber_Masked AS [Payments.AccountNumber_Masked], 
            T.GCSPaymentID AS Payments_GCSPaymentID, 
            T.GCSDebitID AS Payments_GCSDebitID, 
            T.PrincipalAmount AS Payments_PrincipalAmount, 
            T.InterestAmount AS Payments_InterestAmount, 
            T.GeneratedByCollectionPlan AS Payments_GeneratedByCollectionPlan, 
            T.M2_TransactionID_Step1 AS [Payments.M2_TransactionID_Step1], 
            T.M2_TransactionID_Step2 AS [Payments.M2_TransactionID_Step2], 
            T.M2_TransComplete AS [Payments.M2_TransComplete], 
            T.ClientState AS Payments_ClientState, 
            T.PaymentProcessor_TransactionRefID AS [Payments.PaymentProcessor_TransactionRefID], 
            T.TransferBalanceBatchDetailID AS Payments_TransferBalanceBatchDetailID, 
            T.Counselor AS Payments_Counselor, 
            T.PaymentProcessor_CreditorProfileID AS [Payments.PaymentProcessor_CreditorProfileID], 
            T.PaymentProcessor_CreditorProfileType AS [Payments.PaymentProcessor_CreditorProfileType], 
            T.CreditorGroupCreditorID AS Payments_CreditorGroupCreditorID, 
            True AS _from0
        FROM CreditsoftStoreContainer.Payments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Receipts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Receipts
        [Creditsoft.Receipts](T1.Receipts_ReceiptID, T1.Receipts_ClientID, T1.Receipts_DateReceived, T1.Receipts_ReceiptAmount, T1.Receipts_BankAccountID, T1.Receipts_PaymentType, T1.Receipts_Deposited, T1.Receipts_Marked, T1.Receipts_BankID, T1.Receipts_NSF, T1.Receipts_NSFDate, T1.Receipts_FileID, T1.Receipts_Memo, T1.Receipts_OperatorStamp, T1.Receipts_DateTimeStamp, T1.Receipts_ACHBatchID, T1.Receipts_NSFReason, T1.Receipts_RefundDetailID, T1.Receipts_DateEntered, T1.Receipts_TransferedToClientID, T1.[Receipts.upsize_ts], T1.Receipts_ACHBankAccountID, T1.Receipts_StatementID, T1.Receipts_ReceiptBatchID, T1.Receipts_CommissionBatchID, T1.Receipts_FileLogDetailsID, T1.Receipts_TransferredFromClientID, T1.Receipts_ACHBatchDetailID, T1.Receipts_OriginatingFromNSFReceiptID, T1.Receipts_NSFReversalBankID, T1.Receipts_NSFFileID, T1.Receipts_CreatedUserID, T1.Receipts_OriginatingFromVoidCheckID, T1.Receipts_OriginatingFromVoidBankAccountID, T1.Receipts_NSFRecovered, T1.Receipts_AgencyID, T1.Receipts_CreditorID, T1.Receipts_CoAppID, T1.Receipts_AllowZeroAmountReceipt, T1.Receipts_TempCreditAmount, T1.Receipts_TempNetGross, T1.Receipts_SalesOrderID, T1.Receipts_OnlineTransactionID, T1.[Receipts.M2_TransferFromAgency], T1.[Receipts.M2_UniqueID], T1.[Receipts.M2_TransactionID], T1.[Receipts.PaymentProcessor_TransferFromAgency], T1.[Receipts.PaymentProcessor_TransactionRefID], T1.Receipts_ReferenceReceiptNumber, T1.Receipts_ReferenceDepositNumber, T1.Receipts_IsLateReturn)
    FROM (
        SELECT 
            T.ReceiptID AS Receipts_ReceiptID, 
            T.ClientID AS Receipts_ClientID, 
            T.DateReceived AS Receipts_DateReceived, 
            T.ReceiptAmount AS Receipts_ReceiptAmount, 
            T.BankAccountID AS Receipts_BankAccountID, 
            T.PaymentType AS Receipts_PaymentType, 
            T.Deposited AS Receipts_Deposited, 
            T.Marked AS Receipts_Marked, 
            T.BankID AS Receipts_BankID, 
            T.NSF AS Receipts_NSF, 
            T.NSFDate AS Receipts_NSFDate, 
            T.FileID AS Receipts_FileID, 
            T.Memo AS Receipts_Memo, 
            T.OperatorStamp AS Receipts_OperatorStamp, 
            T.DateTimeStamp AS Receipts_DateTimeStamp, 
            T.ACHBatchID AS Receipts_ACHBatchID, 
            T.NSFReason AS Receipts_NSFReason, 
            T.RefundDetailID AS Receipts_RefundDetailID, 
            T.DateEntered AS Receipts_DateEntered, 
            T.TransferedToClientID AS Receipts_TransferedToClientID, 
            T.upsize_ts AS [Receipts.upsize_ts], 
            T.ACHBankAccountID AS Receipts_ACHBankAccountID, 
            T.StatementID AS Receipts_StatementID, 
            T.ReceiptBatchID AS Receipts_ReceiptBatchID, 
            T.CommissionBatchID AS Receipts_CommissionBatchID, 
            T.FileLogDetailsID AS Receipts_FileLogDetailsID, 
            T.TransferredFromClientID AS Receipts_TransferredFromClientID, 
            T.ACHBatchDetailID AS Receipts_ACHBatchDetailID, 
            T.OriginatingFromNSFReceiptID AS Receipts_OriginatingFromNSFReceiptID, 
            T.NSFReversalBankID AS Receipts_NSFReversalBankID, 
            T.NSFFileID AS Receipts_NSFFileID, 
            T.CreatedUserID AS Receipts_CreatedUserID, 
            T.OriginatingFromVoidCheckID AS Receipts_OriginatingFromVoidCheckID, 
            T.OriginatingFromVoidBankAccountID AS Receipts_OriginatingFromVoidBankAccountID, 
            T.NSFRecovered AS Receipts_NSFRecovered, 
            T.AgencyID AS Receipts_AgencyID, 
            T.CreditorID AS Receipts_CreditorID, 
            T.CoAppID AS Receipts_CoAppID, 
            T.AllowZeroAmountReceipt AS Receipts_AllowZeroAmountReceipt, 
            T.TempCreditAmount AS Receipts_TempCreditAmount, 
            T.TempNetGross AS Receipts_TempNetGross, 
            T.SalesOrderID AS Receipts_SalesOrderID, 
            T.OnlineTransactionID AS Receipts_OnlineTransactionID, 
            T.M2_TransferFromAgency AS [Receipts.M2_TransferFromAgency], 
            T.M2_UniqueID AS [Receipts.M2_UniqueID], 
            T.M2_TransactionID AS [Receipts.M2_TransactionID], 
            T.PaymentProcessor_TransferFromAgency AS [Receipts.PaymentProcessor_TransferFromAgency], 
            T.PaymentProcessor_TransactionRefID AS [Receipts.PaymentProcessor_TransactionRefID], 
            T.ReferenceReceiptNumber AS Receipts_ReferenceReceiptNumber, 
            T.ReferenceDepositNumber AS Receipts_ReferenceDepositNumber, 
            T.IsLateReturn AS Receipts_IsLateReturn, 
            True AS _from0
        FROM CreditsoftStoreContainer.Receipts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CreditsoftStoreContainer.Custom_DailyStatements.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Custom_DailyStatements
        [Creditsoft.Store.Custom_DailyStatements](T1.[Custom_DailyStatements.ACHBatchID], T1.[Custom_DailyStatements.DatePrinted], T1.[Custom_DailyStatements.PrintedBy], T1.[Custom_DailyStatements.Success])
    FROM (
        SELECT 
            T.ACHBatchID AS [Custom_DailyStatements.ACHBatchID], 
            T.DatePrinted AS [Custom_DailyStatements.DatePrinted], 
            T.PrintedBy AS [Custom_DailyStatements.PrintedBy], 
            T.Success AS [Custom_DailyStatements.Success], 
            True AS _from0
        FROM Entities.Custom_DailyStatements AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Custom_DailyStatements.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Custom_DailyStatements
        [Creditsoft.Custom_DailyStatements](T1.[Custom_DailyStatements.ACHBatchID], T1.[Custom_DailyStatements.DatePrinted], T1.[Custom_DailyStatements.PrintedBy], T1.[Custom_DailyStatements.Success])
    FROM (
        SELECT 
            T.ACHBatchID AS [Custom_DailyStatements.ACHBatchID], 
            T.DatePrinted AS [Custom_DailyStatements.DatePrinted], 
            T.PrintedBy AS [Custom_DailyStatements.PrintedBy], 
            T.Success AS [Custom_DailyStatements.Success], 
            True AS _from0
        FROM CreditsoftStoreContainer.Custom_DailyStatements AS T
    ) AS T1");
        }
    }
}
